{"version":3,"sources":["views/technical/ProformaInvoiceList.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js"],"names":["createData","title","status","color","date","Row","row","useTheme","React","useState","open","setOpen","hover","sx","borderBottom","pl","size","onClick","StyledTableCell","component","scope","align","label","chipcolor","pr","style","paddingBottom","paddingTop","colSpan","in","timeout","unmountOnExit","margin","container","alignItems","justifyContent","spacing","pt","mb","item","xs","basicInfo","map","bi","direction","DivTitle","DivValue","minWidth","collapseRows","Crow","StyledTableRow","cell","name","pb","ml","styled","TableRow","backgroundColor","theme","palette","action","border","TableCell","tableCellClasses","head","common","black","white","body","fontSize","rows","typography","button","background","paper","paddingRight","mode","paddingLeft","fontWeight","ProformaInvoiceList","content","secondary","link","Avatar","outline","others","colorSX","bgcolor","outlineSX","borderColor","sizeSX","width","height","CardSecondaryAction","icon","placement","disableRipple","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","primary","main","id","transform"],"mappings":"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","file":"static/js/165.79ffe5f9.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Collapse, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, tableCellClasses, Typography, Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport Chip from 'ui-component/extended/Chip';\r\n\r\n// assets\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n\r\n// table data\r\nfunction createData(title, status, color, date) {\r\n    return { title, status, color, date };\r\n}\r\n\r\nfunction Row({ row }) {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n        <>\r\n            <TableRow hover sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n                <TableCell sx={{ pl: 3 }}>\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <StyledTableCell sx={{ pl: 3 }} component=\"th\" scope=\"row\">\r\n                    {row.title}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"right\"><Chip label={row.status} chipcolor={row.color} /></StyledTableCell>\r\n                <StyledTableCell align=\"right\" sx={{ pr: 3 }}>{row.date}</StyledTableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        {open && (\r\n                            <Box sx={{ margin: 1 }}>\r\n                                <Grid container alignItems=\"center\" justifyContent=\"flex-end\" spacing={2} pt={2} pl={4} mb={2}>\r\n                                    <Grid item xs={12}>\r\n                                        {basicInfo.map((bi) =>\r\n                                            <Grid\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"flex-end\"\r\n                                            >\r\n                                                <Grid item>\r\n                                                    <DivTitle>{bi[0]}</DivTitle>\r\n                                                </Grid>\r\n                                                <Grid item pl={2}>\r\n                                                    <DivValue>{bi[1]}</DivValue>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <TableContainer>\r\n                                    <Table sx={{ minWidth: 320 }} aria-label=\"customized table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <StyledTableCell align=\"center\">Observations</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">Total</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">Category</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">Qty</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">Unit</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">Profile</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">Item</StyledTableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {collapseRows.map((Crow) => (\r\n                                                <StyledTableRow hover key={Crow.name}>\r\n                                                    {Crow.map((cell) => (\r\n                                                        <TableCell align='center'>{cell}</TableCell>\r\n                                                    ))}\r\n                                                </StyledTableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                                <Grid container alignItems=\"center\" justifyContent=\"flex-end\" spacing={2} pt={2} pl={4}>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justifyContent=\"flex-start\"\r\n                                            alignItems=\"flex-end\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <DivTitle>Total : </DivTitle>\r\n                                            </Grid>\r\n                                            <Grid item pl={2}>\r\n                                                <DivValue>50</DivValue>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container pb={3}>\r\n                                    <Grid item xs={12} ml={4}>\r\n                                        <DivTitle>Reviews : </DivTitle>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography pl={6}>\r\n                                            the price of a ton or m3, and the treatment is aded to the price per square meter according to the customer’s choice <br/>\r\n                                            Quantities can be increased and decreased according to the final measurement <br/>\r\n                                            or granite is received by the customer or the customer’s representative from the factory and with his knowledge before transportation to the site <br/>\r\n                                            Price include Vat  14% \r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        )}\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </>\r\n    );\r\n}\r\n\r\nRow.propTypes = {\r\n    row: PropTypes.object\r\n};\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover\r\n    },\r\n    // hide last border\r\n    '&:last-of-type td, &:last-of-type th': {\r\n        border: 0\r\n    }\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14\r\n    }\r\n}));\r\n\r\nconst basicInfo = [\r\n    [\"date\", \"2023 / 11 / 02 - 10 : 20 PM\"],\r\n    [\"Proforma Invioce Block Swaing\", \"15284\"],\r\n    [\"Client\", \"Zackery\"],\r\n]\r\n\r\nconst rows = [\r\n    createData('Project Progress of Interim Invoices 1', 'pending', \"secondary\", \"1 Nov, 10:20 AM\"),\r\n    createData('Project Progress of Interim Invoices 2', 'success', \"success\", \"1 Nov, 10:20 AM\"),\r\n    createData('Project Progress of Interim Invoices 3', 'error', \"error\", \"1 Nov, 10:20 AM\")\r\n];\r\n\r\nconst collapseRows = [\r\n    [\"\", \"20\", \"4\", \"5\", \"M^3\", \"Profile Detail\", 1],\r\n    [\"\", \"20\", \"4\", \"5\", \"M^3\", \"Profile Detail\", 2],\r\n    [\"\", \"20\", \"4\", \"5\", \"M^3\", \"Profile Detail\", 3]\r\n];\r\n\r\n\r\nconst DivValue = styled('div')(({ theme }) => ({\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    paddingRight: 12,\r\n    paddingTop: 2,\r\n    fontSize: 16,\r\n}));\r\n\r\nconst DivTitle = styled('div')(({ theme }) => ({\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.mode === 'dark' ? theme.palette.common.white : theme.palette.common.black,\r\n    paddingTop: 2,\r\n    paddingLeft: 12,\r\n    fontSize: 16,\r\n    fontWeight: 400\r\n}));\r\n\r\nconst StyledTableCellGroup = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white\r\n    },\r\n}));\r\n\r\n\r\n// ==============================|| TABLE - COLLAPSIBLE ||============================== //\r\n\r\nexport default function ProformaInvoiceList() {\r\n    return (\r\n        <MainCard\r\n            content={false}\r\n            title=\"Proforma Invoice\"\r\n            secondary={<SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />}\r\n        >\r\n            {/* table */}\r\n            <TableContainer>\r\n                <Table aria-label=\"Proforma Invoice\">\r\n                    {/* <TableHead>\r\n                        <TableRow>\r\n                            <TableCell sx={{ pl: 3 }} />\r\n                            <TableCell>Dessert (100g serving)</TableCell>\r\n                            <TableCell align=\"right\">Calories</TableCell>\r\n                            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                            <TableCell sx={{ pr: 3 }} align=\"right\">\r\n                                Protein&nbsp;(g)\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead> */}\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <Row key={row.name} row={row} />\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </MainCard>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n"],"sourceRoot":""}