{"version":3,"sources":["views/forms/forms-wizard/BasicWizard/AddressForm.js","views/forms/forms-wizard/BasicWizard/PaymentForm.js","views/forms/forms-wizard/BasicWizard/Review.js","views/forms/forms-wizard/BasicWizard/index.js","views/forms/forms-wizard/ValidationWizard/AddressForm.js","views/forms/forms-wizard/ValidationWizard/PaymentForm.js","views/forms/forms-wizard/ValidationWizard/Review.js","views/forms/forms-wizard/ValidationWizard/index.js","views/forms/forms-wizard/index.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js"],"names":["AddressForm","Typography","variant","gutterBottom","sx","mb","Grid","container","spacing","item","xs","sm","TextField","required","id","name","label","fullWidth","autoComplete","FormControlLabel","control","Checkbox","color","value","PaymentForm","md","helperText","products","desc","price","addresses","payments","detail","Review","List","disablePadding","map","product","ListItem","py","px","ListItemText","primary","secondary","mt","join","direction","payment","steps","getStepContent","step","Error","BasicWizard","React","useState","activeStep","setActiveStep","MainCard","title","link","Stepper","pt","pb","Step","StepLabel","length","Stack","justifyContent","AnimateButton","Button","onClick","my","ml","validationSchema","yup","firstName","lastName","shippingData","setShippingData","handleNext","setErrorIndex","formik","useFormik","initialValues","onSubmit","values","handleSubmit","onChange","handleChange","error","touched","Boolean","errors","type","cardName","cardNumber","paymentData","setPaymentData","handleBack","ValidationWizard","errorIndex","index","labelProps","optional","FormsWizard","gridSpacing","lg","Avatar","outline","size","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","height","CardSecondaryAction","icon","placement","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","main","transform","createSvgIcon","_jsx","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","indeterminate","capitalize","_extends","text","backgroundColor","alpha","action","active","hoverOpacity","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","fontSize"],"mappings":"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","file":"static/js/148.4d892d07.chunk.js","sourcesContent":["// material-ui\r\nimport { Checkbox, FormControlLabel, Grid, Typography, TextField } from '@mui/material';\r\n\r\n// ==============================|| FORM WIZARD - BASIC  ||============================== //\r\n\r\nexport default function AddressForm() {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\" gutterBottom sx={{ mb: 2 }}>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField required id=\"firstNameBasic\" name=\"firstName\" label=\"First name\" fullWidth autoComplete=\"given-name\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField required id=\"lastNameBasic\" name=\"lastName\" label=\"Last name\" fullWidth autoComplete=\"family-name\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"address1Basic\"\r\n                        name=\"address1\"\r\n                        label=\"Address line 1\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address-line1\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField id=\"address2Basic\" name=\"address2\" label=\"Address line 2\" fullWidth autoComplete=\"shipping address-line2\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField required id=\"cityBasic\" name=\"city\" label=\"City\" fullWidth autoComplete=\"shipping address-level2\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField id=\"stateBasic\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField required id=\"zipBasic\" name=\"zip\" label=\"Zip / Postal code\" fullWidth autoComplete=\"shipping postal-code\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField required id=\"countryBasic\" name=\"country\" label=\"Country\" fullWidth autoComplete=\"shipping country\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                        label=\"Use this address for payment details\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","// material-ui\r\nimport { Checkbox, FormControlLabel, Grid, TextField, Typography } from '@mui/material';\r\n\r\n// ==============================|| FORM WIZARD - BASIC  ||============================== //\r\n\r\nexport default function PaymentForm() {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\" gutterBottom sx={{ mb: 2 }}>\r\n                Payment method\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField required id=\"cardName\" label=\"Name on card\" fullWidth autoComplete=\"cc-name\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField required id=\"cardNumber\" label=\"Card number\" fullWidth autoComplete=\"cc-number\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField required id=\"expDate\" label=\"Expiry date\" fullWidth autoComplete=\"cc-exp\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"cvv\"\r\n                        label=\"CVV\"\r\n                        helperText=\"Last three digits on signature strip\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-csc\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\r\n                        label=\"Remember credit card details for next time\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\n// material-ui\r\nimport { Grid, List, ListItem, ListItemText, Typography } from '@mui/material';\r\n\r\n// ==============================|| FORM WIZARD - BASIC  ||============================== //\r\n\r\nconst products = [\r\n    {\r\n        name: 'Product 1',\r\n        desc: 'A nice thing',\r\n        price: '$9.99'\r\n    },\r\n    {\r\n        name: 'Product 2',\r\n        desc: 'Another thing',\r\n        price: '$3.45'\r\n    },\r\n    {\r\n        name: 'Product 3',\r\n        desc: 'Something else',\r\n        price: '$6.51'\r\n    },\r\n    {\r\n        name: 'Product 4',\r\n        desc: 'Best thing of all',\r\n        price: '$14.11'\r\n    },\r\n    { name: 'Shipping', desc: '', price: 'Free' }\r\n];\r\n\r\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\r\nconst payments = [\r\n    { name: 'Card type', detail: 'Visa' },\r\n    { name: 'Card holder', detail: 'Mr John Smith' },\r\n    { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n    { name: 'Expiry date', detail: '04/2024' }\r\n];\r\n\r\nexport default function Review() {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\" gutterBottom sx={{ mb: 2 }}>\r\n                Order summary\r\n            </Typography>\r\n            <List disablePadding>\r\n                {products.map((product) => (\r\n                    <ListItem sx={{ py: 1, px: 0 }} key={product.name}>\r\n                        <ListItemText primary={product.name} secondary={product.desc} />\r\n                        <Typography variant=\"body2\">{product.price}</Typography>\r\n                    </ListItem>\r\n                ))}\r\n\r\n                <ListItem sx={{ py: 1, px: 0 }}>\r\n                    <ListItemText primary=\"Total\" />\r\n                    <Typography variant=\"subtitle1\">$34.06</Typography>\r\n                </ListItem>\r\n            </List>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\r\n                        Shipping\r\n                    </Typography>\r\n                    <Typography gutterBottom>John Smith</Typography>\r\n                    <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\r\n                        Payment details\r\n                    </Typography>\r\n                    <Grid container>\r\n                        {payments.map((payment) => (\r\n                            <React.Fragment key={payment.name}>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.detail}</Typography>\r\n                                </Grid>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { Button, Step, Stepper, StepLabel, Stack, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n// project imports\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\n\r\n// step options\r\nconst steps = ['Shipping address', 'Payment details', 'Review your order'];\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n        case 0:\r\n            return <AddressForm />;\r\n        case 1:\r\n            return <PaymentForm />;\r\n        case 2:\r\n            return <Review />;\r\n        default:\r\n            throw new Error('Unknown step');\r\n    }\r\n}\r\n\r\n// ==============================|| FORMS WIZARD - BASIC ||============================== //\r\n\r\nconst BasicWizard = () => {\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const handleNext = () => {\r\n        setActiveStep(activeStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"Basic\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/steppers/#main-content\" />}>\r\n            <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <>\r\n                {activeStep === steps.length ? (\r\n                    <>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            Thank you for your order.\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\">\r\n                            Your order number is #2001539. We have emailed your order confirmation, and will send you an update when your\r\n                            order has shipped.\r\n                        </Typography>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" color=\"error\" onClick={() => setActiveStep(0)} sx={{ my: 3, ml: 1 }}>\r\n                                    Reset\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        {getStepContent(activeStep)}\r\n                        <Stack direction=\"row\" justifyContent={activeStep !== 0 ? 'space-between' : 'flex-end'}>\r\n                            {activeStep !== 0 && (\r\n                                <Button onClick={handleBack} sx={{ my: 3, ml: 1 }}>\r\n                                    Back\r\n                                </Button>\r\n                            )}\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" onClick={handleNext} sx={{ my: 3, ml: 1 }}>\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </>\r\n                )}\r\n            </>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default BasicWizard;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, Checkbox, FormControlLabel, Grid, Stack, Typography, TextField } from '@mui/material';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object({\r\n    firstName: yup.string().required('First Name is required'),\r\n    lastName: yup.string().required('Last Name is required')\r\n});\r\n\r\n// ==============================|| FORM WIZARD - VALIDATION  ||============================== //\r\n\r\nconst AddressForm = ({ shippingData, setShippingData, handleNext, setErrorIndex }) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: shippingData.firstName,\r\n            lastName: shippingData.lastName\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            setShippingData({\r\n                firstName: values.firstName,\r\n                lastName: values.lastName\r\n            });\r\n            handleNext();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\" gutterBottom sx={{ mb: 2 }}>\r\n                Shipping address\r\n            </Typography>\r\n            <form onSubmit={formik.handleSubmit} id=\"validation-forms\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label=\"First Name *\"\r\n                            value={formik.values.firstName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.firstName && Boolean(formik.errors.firstName)}\r\n                            helperText={formik.touched.firstName && formik.errors.firstName}\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label=\"Last Name *\"\r\n                            value={formik.values.lastName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.lastName && Boolean(formik.errors.lastName)}\r\n                            helperText={formik.touched.lastName && formik.errors.lastName}\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField id=\"address1\" name=\"address1\" label=\"Address line 1\" fullWidth autoComplete=\"shipping address-line1\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField id=\"address2\" name=\"address2\" label=\"Address line 2\" fullWidth autoComplete=\"shipping address-line2\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField id=\"city\" name=\"city\" label=\"City\" fullWidth autoComplete=\"shipping address-level2\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField id=\"zip\" name=\"zip\" label=\"Zip / Postal code\" fullWidth autoComplete=\"shipping postal-code\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField id=\"country\" name=\"country\" label=\"Country\" fullWidth autoComplete=\"shipping country\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                            label=\"Use this address for payment details\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" sx={{ my: 3, ml: 1 }} type=\"submit\" onClick={() => setErrorIndex(0)}>\r\n                                    Next\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nAddressForm.propTypes = {\r\n    shippingData: PropTypes.object,\r\n    setShippingData: PropTypes.func,\r\n    handleNext: PropTypes.func,\r\n    setErrorIndex: PropTypes.func\r\n};\r\n\r\nexport default AddressForm;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, Checkbox, FormControlLabel, Grid, Stack, TextField, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object({\r\n    cardName: yup.string().required('First Name is required'),\r\n    cardNumber: yup.string().required('Last Name is required')\r\n});\r\n\r\n// ==============================|| FORM WIZARD - VALIDATION  ||============================== //\r\n\r\nexport default function PaymentForm({ paymentData, setPaymentData, handleNext, handleBack, setErrorIndex }) {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            cardName: paymentData.cardName,\r\n            cardNumber: paymentData.cardNumber\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            setPaymentData({\r\n                cardName: values.cardName,\r\n                cardNumber: values.cardNumber\r\n            });\r\n            handleNext();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\" gutterBottom sx={{ mb: 2 }}>\r\n                Payment method\r\n            </Typography>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField\r\n                            id=\"cardName\"\r\n                            name=\"cardName\"\r\n                            value={formik.values.cardName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.cardName && Boolean(formik.errors.cardName)}\r\n                            helperText={formik.touched.cardName && formik.errors.cardName}\r\n                            label=\"Name on card\"\r\n                            fullWidth\r\n                            autoComplete=\"cc-name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField\r\n                            id=\"cardNumber\"\r\n                            name=\"cardNumber\"\r\n                            label=\"Card number\"\r\n                            value={formik.values.cardNumber}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.cardNumber && Boolean(formik.errors.cardNumber)}\r\n                            helperText={formik.touched.cardNumber && formik.errors.cardNumber}\r\n                            fullWidth\r\n                            autoComplete=\"cc-number\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField id=\"expDate\" label=\"Expiry date\" fullWidth autoComplete=\"cc-exp\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField id=\"cvv\" label=\"CVV\" helperText=\"Last three digits on signature strip\" fullWidth autoComplete=\"cc-csc\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\r\n                            label=\"Remember credit card details for next time\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                            <Button onClick={handleBack} sx={{ my: 3, ml: 1 }}>\r\n                                Back\r\n                            </Button>\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" type=\"submit\" sx={{ my: 3, ml: 1 }} onClick={() => setErrorIndex(1)}>\r\n                                    Next\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nPaymentForm.propTypes = {\r\n    paymentData: PropTypes.object,\r\n    setPaymentData: PropTypes.func,\r\n    handleNext: PropTypes.func,\r\n    handleBack: PropTypes.func,\r\n    setErrorIndex: PropTypes.func\r\n};\r\n","import * as React from 'react';\r\n\r\n// material-ui\r\nimport { Grid, List, ListItem, ListItemText, Typography } from '@mui/material';\r\n\r\n// ==============================|| FORM WIZARD - VALIDATION  ||============================== //\r\n\r\nconst products = [\r\n    {\r\n        name: 'Product 1',\r\n        desc: 'A nice thing',\r\n        price: '$9.99'\r\n    },\r\n    {\r\n        name: 'Product 2',\r\n        desc: 'Another thing',\r\n        price: '$3.45'\r\n    },\r\n    {\r\n        name: 'Product 3',\r\n        desc: 'Something else',\r\n        price: '$6.51'\r\n    },\r\n    {\r\n        name: 'Product 4',\r\n        desc: 'Best thing of all',\r\n        price: '$14.11'\r\n    },\r\n    { name: 'Shipping', desc: '', price: 'Free' }\r\n];\r\n\r\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\r\nconst payments = [\r\n    { name: 'Card type', detail: 'Visa' },\r\n    { name: 'Card holder', detail: 'Mr John Smith' },\r\n    { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n    { name: 'Expiry date', detail: '04/2024' }\r\n];\r\n\r\nexport default function Review() {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\" gutterBottom sx={{ mb: 2 }}>\r\n                Order summary\r\n            </Typography>\r\n            <List disablePadding>\r\n                {products.map((product) => (\r\n                    <ListItem sx={{ py: 1, px: 0 }} key={product.name}>\r\n                        <ListItemText primary={product.name} secondary={product.desc} />\r\n                        <Typography variant=\"body2\">{product.price}</Typography>\r\n                    </ListItem>\r\n                ))}\r\n\r\n                <ListItem sx={{ py: 1, px: 0 }}>\r\n                    <ListItemText primary=\"Total\" />\r\n                    <Typography variant=\"subtitle1\">$34.06</Typography>\r\n                </ListItem>\r\n            </List>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\r\n                        Shipping\r\n                    </Typography>\r\n                    <Typography gutterBottom>John Smith</Typography>\r\n                    <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\r\n                        Payment details\r\n                    </Typography>\r\n                    <Grid container>\r\n                        {payments.map((payment) => (\r\n                            <React.Fragment key={payment.name}>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.detail}</Typography>\r\n                                </Grid>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { Button, Step, Stepper, StepLabel, Stack, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n// project imports\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// step options\r\nconst steps = ['Shipping address', 'Payment details', 'Review your order'];\r\n\r\nconst getStepContent = (step, handleNext, handleBack, setErrorIndex, shippingData, setShippingData, paymentData, setPaymentData) => {\r\n    switch (step) {\r\n        case 0:\r\n            return (\r\n                <AddressForm\r\n                    handleNext={handleNext}\r\n                    setErrorIndex={setErrorIndex}\r\n                    shippingData={shippingData}\r\n                    setShippingData={setShippingData}\r\n                />\r\n            );\r\n        case 1:\r\n            return (\r\n                <PaymentForm\r\n                    handleNext={handleNext}\r\n                    handleBack={handleBack}\r\n                    setErrorIndex={setErrorIndex}\r\n                    paymentData={paymentData}\r\n                    setPaymentData={setPaymentData}\r\n                />\r\n            );\r\n        case 2:\r\n            return <Review />;\r\n        default:\r\n            throw new Error('Unknown step');\r\n    }\r\n};\r\n\r\n// ==============================|| FORMS WIZARD - BASIC ||============================== //\r\n\r\nconst ValidationWizard = () => {\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [shippingData, setShippingData] = React.useState({});\r\n    const [paymentData, setPaymentData] = React.useState({});\r\n    const [errorIndex, setErrorIndex] = React.useState(null);\r\n\r\n    const handleNext = () => {\r\n        setActiveStep(activeStep + 1);\r\n        setErrorIndex(null);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"Validation\">\r\n            <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                {steps.map((label, index) => {\r\n                    const labelProps = {};\r\n\r\n                    if (index === errorIndex) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\" color=\"error\">\r\n                                Error\r\n                            </Typography>\r\n                        );\r\n\r\n                        labelProps.error = true;\r\n                    }\r\n\r\n                    return (\r\n                        <Step key={label}>\r\n                            <StepLabel {...labelProps}>{label}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            <>\r\n                {activeStep === steps.length ? (\r\n                    <>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            Thank you for your order.\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\">\r\n                            Your order number is #2001539. We have emailed your order confirmation, and will send you an update when your\r\n                            order has shipped.\r\n                        </Typography>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"error\"\r\n                                    onClick={() => {\r\n                                        setShippingData({});\r\n                                        setPaymentData({});\r\n                                        setActiveStep(0);\r\n                                    }}\r\n                                    sx={{ my: 3, ml: 1 }}\r\n                                >\r\n                                    Reset\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        {getStepContent(\r\n                            activeStep,\r\n                            handleNext,\r\n                            handleBack,\r\n                            setErrorIndex,\r\n                            shippingData,\r\n                            setShippingData,\r\n                            paymentData,\r\n                            setPaymentData\r\n                        )}\r\n                        {activeStep === steps.length - 1 && (\r\n                            <Stack direction=\"row\" justifyContent={activeStep !== 0 ? 'space-between' : 'flex-end'}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ my: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <AnimateButton>\r\n                                    <Button variant=\"contained\" onClick={handleNext} sx={{ my: 3, ml: 1 }}>\r\n                                        {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                    </Button>\r\n                                </AnimateButton>\r\n                            </Stack>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ValidationWizard;\r\n","// material-ui\r\nimport { Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport BasicWizard from './BasicWizard';\r\nimport ValidationWizard from './ValidationWizard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| FORMS WIZARD ||============================== //\r\n\r\nconst FormsWizard = () => (\r\n    <Grid container spacing={gridSpacing} justifyContent=\"center\">\r\n        <Grid item xs={12} md={9} lg={7}>\r\n            <BasicWizard />\r\n        </Grid>\r\n        <Grid item xs={12} md={9} lg={7}>\r\n            <ValidationWizard />\r\n        </Grid>\r\n    </Grid>\r\n);\r\n\r\nexport default FormsWizard;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"sourceRoot":""}