{"version":3,"sources":["views/inventory/MaterialsSupplyForm/MaterialsSupplyForm/BasicInfo.js","views/inventory/MaterialsSupplyForm/MaterialsSupplyForm/PaymentForm.js","views/inventory/MaterialsSupplyForm/MaterialsSupplyForm/Review.js","views/inventory/MaterialsSupplyForm/MaterialsSupplyForm/index.js","views/inventory/MaterialsSupplyForm/MaterialsSupplyFormCreate.js"],"names":["DivValue","styled","TableCell","theme","tableCellClasses","head","maxWidth","typography","button","backgroundColor","palette","background","paper","paddingRight","paddingTop","fontSize","DivTitle","color","mode","common","white","black","paddingLeft","fontWeight","BasicInfo","shippingData","handleNext","setShippingData","formik","useFormik","initialValues","mainContractor","onSubmit","values","SaveTableData","dispatch","useDispatch","useState","AddtableData","setAddtable","a","SaveInventoryData","handleSubmit","id","Grid","container","alignItems","justifyContent","spacing","item","xs","sm","mb","Typography","variant","mt","align","TableContainer","Table","sx","minWidth","size","TableHead","TableRow","colSpan","TableBody","map","row","hover","Object","keys","i","TextField","value","onChange","e","column","updatedData","handleInputChange","target","pr","IconButton","onClick","filter","Stack","direction","AnimateButton","Button","my","ml","newRow","length","Area","Height","Width","Length","itemname","itemnumber","blocknumber","Quantity","Thickness","type","PaymentForm","paymentData","handleBack","cardName","cardNumber","inventorydataState","useTheme","useSelector","state","inventory","AllDataList","setAllDataList","editid","setEditId","useEffect","filterdata","inventorydata","some","DeleteRowData","style","display","Review","steps","getStepContent","step","setErrorIndex","setPaymentData","Error","InterimInvoiceWizard","React","activeStep","setActiveStep","errorIndex","MainCard","title","Stepper","pt","pb","label","index","labelProps","optional","error","Step","StepLabel","gutterBottom","component","Link","to","FormsWizard","gridSpacing"],"mappings":"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","file":"static/js/209.88e49e32.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport { Grid, Table, TableBody, TableCell, Stack, tableCellClasses, IconButton, Typography, Button, TextField, TableContainer, TableHead, TableRow, } from '@mui/material';\r\n// project imports\r\nimport { useDispatch, useSelector } from 'store';\r\n//Icons\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport { SaveInventoryData } from 'store/slices/inventoryteam';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        maxWidth: 50\r\n    }\r\n}));\r\n\r\nconst DivValue = styled('div')(({ theme }) => ({\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    paddingRight: 12,\r\n    paddingTop: 2,\r\n    fontSize: 16,\r\n}));\r\n\r\nconst DivTitle = styled('div')(({ theme }) => ({\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.mode === 'dark' ? theme.palette.common.white : theme.palette.common.black,\r\n    paddingTop: 2,\r\n    paddingLeft: 12,\r\n    fontSize: 16,\r\n    fontWeight: 400\r\n}));\r\n\r\nconst StyledTableCellGroup = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white\r\n    },\r\n}));\r\n\r\n// ==============================|| FORM WIZARD - VALIDATION  ||============================== //\r\n\r\nconst BasicInfo = ({ shippingData, setShippingData, handleNext }) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            mainContractor: shippingData.mainContractor,\r\n        },\r\n        onSubmit: (values) => {\r\n            SaveTableData();\r\n            handleNext();\r\n        }\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const [AddtableData, setAddtable] = useState([]);\r\n\r\n    const Addtablerow = () => {\r\n        const newRow = { id: AddtableData.length + 1, Area: \"\", Height: \"\", Width: \"\", Length: \"\", itemname: \"\", itemnumber: \"\", blocknumber: \"\", Quantity: \"\" , Thickness: \"\" };\r\n        setAddtable([...AddtableData, newRow]);\r\n    }\r\n\r\n    const handleInputChange = (id, column, value) => {\r\n        const updatedData = AddtableData.map((row) =>\r\n            row.id === id ? { ...row, [column]: value } : row\r\n        );\r\n        setAddtable(updatedData);\r\n    };\r\n\r\n    const DeleteRowData = (id) => () => {\r\n        setAddtable(AddtableData.filter((row) => row.id != id));\r\n    }\r\n\r\n    const SaveTableData = async () => {\r\n        await dispatch(SaveInventoryData(AddtableData));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={formik.handleSubmit} id=\"validation-forms\">\r\n                <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={2}>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <Grid\r\n                            container justifyContent=\"center\" alignItems=\"center\"\r\n                            mb={4}\r\n                        >\r\n                            <Grid item xs={1}></Grid>\r\n                            <Grid item xs={11}>\r\n                                <Typography variant='h1'>Materials Supply Form</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Grid container mt={1} mb={1}>\r\n                            <Grid item xs={8}>\r\n                                <DivValue align=\"end\" justifyContent=\"flex-end\">Work Order NO : </DivValue>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <DivTitle>195583</DivTitle>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <DivValue align=\"end\">Operation Name : </DivValue>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <DivTitle>Materials</DivTitle>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <DivValue align=\"end\">Date : </DivValue>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <DivTitle>25/11 2023</DivTitle>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TableContainer>\r\n                            <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align='center' colSpan={4}>Total Area</TableCell>\r\n                                        <TableCell align='center' colSpan={6}></TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align='center'>Area</TableCell>\r\n                                        <TableCell align='center'>Height</TableCell>\r\n                                        <TableCell align='center'>Width</TableCell>\r\n                                        <TableCell align='center'>Length</TableCell>\r\n                                        <TableCell align='center'>Item Name</TableCell>\r\n                                        <TableCell align='center'>Item Number</TableCell>\r\n                                        <TableCell align='center'>Block Number</TableCell>\r\n                                        <TableCell align='center'>Quantity uniit</TableCell>\r\n                                        <TableCell align='center'>Thickness</TableCell>\r\n                                        <TableCell align='center'>Action</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n\r\n                                    {AddtableData.map((row) => (\r\n                                        <TableRow hover key={row.id}>\r\n                                            {Object.keys(row).map((item, i) => (\r\n                                                <>\r\n                                                    {item != \"id\" && (\r\n                                                        <TableCell align=\"center\" key={i}>\r\n                                                            <TextField\r\n                                                                value={row[item]}\r\n                                                                onChange={(e) => handleInputChange(row.id, item, e.target.value)}\r\n                                                                id=\"standard-basic\" variant=\"standard\"\r\n                                                            />\r\n                                                        </TableCell>\r\n                                                    )}\r\n                                                </>\r\n                                            ))}\r\n\r\n                                            <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                                <IconButton onClick={DeleteRowData(row.id)} size=\"large\">\r\n                                                    <DeleteIcon\r\n                                                        fontSize=\"small\"\r\n                                                        aria-controls=\"menu-popular-card-1\"\r\n                                                        aria-haspopup=\"true\"\r\n                                                        sx={{ color: 'grey.500' }}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" sx={{ my: 3, ml: 1 }} onClick={Addtablerow}>\r\n                                    AddTable\r\n                                </Button>\r\n                                <Button variant=\"contained\" sx={{ my: 3, ml: 1 }} type=\"submit\">\r\n                                    Next\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nBasicInfo.propTypes = {\r\n    shippingData: PropTypes.object,\r\n    setShippingData: PropTypes.func,\r\n    handleNext: PropTypes.func,\r\n    setErrorIndex: PropTypes.func\r\n};\r\n\r\nexport default BasicInfo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport { Grid, Table, TableBody, TableCell, Stack, tableCellClasses, IconButton, Typography, Button, TextField, TableContainer, TableHead, TableRow, Tooltip, Fab } from '@mui/material';\r\n// project imports\r\nimport { useDispatch, useSelector } from 'store';\r\n//Icons\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport EditAttributesSharp from '@mui/icons-material/Edit';\r\n\r\n//redux\r\nimport { SaveInventoryData } from 'store/slices/inventoryteam';\r\n\r\nconst DivValue = styled('div')(({ theme }) => ({\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    paddingRight: 12,\r\n    paddingTop: 2,\r\n    fontSize: 16,\r\n}));\r\n\r\nconst DivTitle = styled('div')(({ theme }) => ({\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.mode === 'dark' ? theme.palette.common.white : theme.palette.common.black,\r\n    paddingTop: 2,\r\n    paddingLeft: 12,\r\n    fontSize: 16,\r\n    fontWeight: 400\r\n}));\r\n\r\nexport default function PaymentForm({ paymentData, handleNext, handleBack }) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            cardName: paymentData.cardName,\r\n            cardNumber: paymentData.cardNumber\r\n        },\r\n        onSubmit: (values) => {\r\n            SaveTableData();\r\n            handleNext();\r\n        }\r\n    });\r\n    const theme = useTheme();\r\n\r\n    const inventorydataState = useSelector((state) => state.inventory);\r\n\r\n    const [AllDataList, setAllDataList] = useState([]);\r\n    const [editid, setEditId] = useState(\"\");\r\n    useEffect(() => {\r\n        const filterdata = inventorydataState.inventorydata.filter((item) => {\r\n            return Object.values(item).some((value) => value !== \"\");\r\n        })\r\n        setAllDataList(filterdata);\r\n    }, [inventorydataState]);\r\n\r\n    const handleInputChange = (id, column, value) => {\r\n        const updatedData = AllDataList.map((row) =>\r\n            row.id === id ? { ...row, [column]: value } : row\r\n        );\r\n        setAllDataList(updatedData);\r\n    };\r\n\r\n    const EditData = (id) => () => {\r\n        setEditId(id);\r\n    }\r\n\r\n    const DeleteRowData = (id) => () => {\r\n        setAllDataList(AllDataList.filter((row) => row.id != id));\r\n    }\r\n\r\n    const SaveTableData = async () => {\r\n        await dispatch(SaveInventoryData(AllDataList));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={2}>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <Grid\r\n                            container justifyContent=\"center\" alignItems=\"center\"\r\n                            mb={4}\r\n                        >\r\n                            <Grid item xs={1}></Grid>\r\n                            <Grid item xs={11}>\r\n                                <Typography variant='h1'>Materials Supply Form</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Grid container mt={1} mb={1}>\r\n                            <Grid item xs={8}>\r\n                                <DivValue align=\"end\" justifyContent=\"flex-end\">Work Order NO : </DivValue>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <DivTitle>195583</DivTitle>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <DivValue align=\"end\">Operation Name : </DivValue>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <DivTitle>Materials</DivTitle>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <DivValue align=\"end\">Date : </DivValue>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <DivTitle>25/11 2023</DivTitle>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TableContainer>\r\n                            <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align='center' colSpan={4}>Total Area</TableCell>\r\n                                        <TableCell align='center' colSpan={6}></TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align='center'>Area</TableCell>\r\n                                        <TableCell align='center'>Height</TableCell>\r\n                                        <TableCell align='center'>Width</TableCell>\r\n                                        <TableCell align='center'>Length</TableCell>\r\n                                        <TableCell align='center'>Item Name</TableCell>\r\n                                        <TableCell align='center'>Item Number</TableCell>\r\n                                        <TableCell align='center'>Block Number</TableCell>\r\n                                        <TableCell align='center'>Quantity uniit</TableCell>\r\n                                        <TableCell align='center'>Thickness</TableCell>\r\n                                        <TableCell align='center'>Action</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {AllDataList.map((row) => (\r\n                                        <>\r\n                                            {row.id != editid && (\r\n                                                <TableRow hover key={row.id}>\r\n                                                    {Object.keys(row).map((item, i) => (\r\n                                                        <>\r\n                                                            {item != \"id\" && (\r\n                                                                <TableCell align=\"center\" key={i}>\r\n                                                                    <TableCell align=\"center\" key={i}>{row[item]}</TableCell>\r\n                                                                </TableCell>\r\n                                                            )}\r\n                                                        </>\r\n                                                    ))}\r\n                                                    <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                                        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                            <EditAttributesSharp\r\n                                                                onClick={EditData(row.id)}\r\n                                                                fontSize=\"small\"\r\n                                                                aria-controls=\"menu-popular-card-1\"\r\n                                                                aria-haspopup=\"true\"\r\n                                                                sx={{ color: 'grey.500' }}\r\n                                                            />\r\n                                                            <DeleteIcon\r\n                                                                onClick={DeleteRowData(row.id)}\r\n                                                                fontSize=\"small\"\r\n                                                                aria-controls=\"menu-popular-card-1\"\r\n                                                                aria-haspopup=\"true\"\r\n                                                                sx={{ color: 'grey.500', ml: 2 }}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )}\r\n                                            {editid == row.id && (\r\n                                                <TableRow hover key={row.id}>\r\n                                                    {Object.keys(row).map((item, i) => (\r\n                                                        <>\r\n                                                            {item != \"id\" && (\r\n                                                                <TableCell align=\"center\" key={i}>\r\n                                                                    <TextField\r\n                                                                        value={row[item]}\r\n                                                                        onChange={(e) => handleInputChange(row.id, item, e.target.value)}\r\n                                                                        id=\"standard-basic\" variant=\"standard\"\r\n                                                                    />\r\n                                                                </TableCell>\r\n                                                            )}\r\n                                                        </>\r\n                                                    ))}\r\n                                                    <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                                        <IconButton onClick={DeleteRowData(row.id)} size=\"large\">\r\n                                                            <DeleteIcon\r\n                                                                fontSize=\"small\"\r\n                                                                aria-controls=\"menu-popular-card-1\"\r\n                                                                aria-haspopup=\"true\"\r\n                                                                sx={{ color: 'grey.500' }}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )}\r\n                                        </>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                            <Button onClick={handleBack} sx={{ my: 3, ml: 1 }}>\r\n                                Back\r\n                            </Button>\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" type=\"submit\" sx={{ my: 3, ml: 1 }}>\r\n                                    Next\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nPaymentForm.propTypes = {\r\n    paymentData: PropTypes.object,\r\n    setPaymentData: PropTypes.func,\r\n    handleNext: PropTypes.func,\r\n    handleBack: PropTypes.func,\r\n    setErrorIndex: PropTypes.func\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport { Grid, Table, TableBody, TableCell, Typography, TableContainer, TableHead, TableRow, Tooltip, Fab } from '@mui/material';\r\n// project imports\r\nimport { useDispatch, useSelector } from 'store';\r\n\r\nconst DivValue = styled('div')(({ theme }) => ({\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    paddingRight: 12,\r\n    paddingTop: 2,\r\n    fontSize: 16,\r\n}));\r\n\r\nconst DivTitle = styled('div')(({ theme }) => ({\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.mode === 'dark' ? theme.palette.common.white : theme.palette.common.black,\r\n    paddingTop: 2,\r\n    paddingLeft: 12,\r\n    fontSize: 16,\r\n    fontWeight: 400\r\n}));\r\n\r\nexport default function Review() {\r\n    const inventorydataState = useSelector((state) => state.inventory);\r\n\r\n    const [AllDataList, setAllDataList] = useState([]);\r\n    useEffect(() => {\r\n        const filterdata = inventorydataState.inventorydata.filter((item) => {\r\n            return Object.values(item).some((value) => value !== \"\");\r\n        })\r\n        setAllDataList(filterdata);\r\n    }, [inventorydataState]);\r\n    return (\r\n        <>\r\n            <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12} sm={9}>\r\n                    <Grid\r\n                        container justifyContent=\"center\" alignItems=\"center\"\r\n                        mb={4}\r\n                    >\r\n                        <Grid item xs={1}></Grid>\r\n                        <Grid item xs={11}>\r\n                            <Typography variant='h1'>Materials Supply Form</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                    <Grid container mt={1} mb={1}>\r\n                        <Grid item xs={8}>\r\n                            <DivValue align=\"end\" justifyContent=\"flex-end\">Work Order NO : </DivValue>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <DivTitle>195583</DivTitle>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <DivValue align=\"end\">Operation Name : </DivValue>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <DivTitle>Materials</DivTitle>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <DivValue align=\"end\">Date : </DivValue>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <DivTitle>25/11 2023</DivTitle>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <TableContainer>\r\n                        <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align='center' colSpan={4}>Total Area</TableCell>\r\n                                    <TableCell align='center' colSpan={6}></TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align='center'>Area</TableCell>\r\n                                    <TableCell align='center'>Height</TableCell>\r\n                                    <TableCell align='center'>Width</TableCell>\r\n                                    <TableCell align='center'>Length</TableCell>\r\n                                    <TableCell align='center'>Item Name</TableCell>\r\n                                    <TableCell align='center'>Item Number</TableCell>\r\n                                    <TableCell align='center'>Block Number</TableCell>\r\n                                    <TableCell align='center'>Quantity uniit</TableCell>\r\n                                    <TableCell align='center'>Thickness</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {AllDataList.map((row) => (\r\n                                    <TableRow hover key={row.id}>\r\n                                        {Object.keys(row).map((item, i) => (\r\n                                            <>\r\n                                                {item != \"id\" && (\r\n                                                    <TableCell align=\"center\" key={i}>{row[item]}</TableCell>\r\n                                                )}\r\n                                            </>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { Button, Step, Stepper, StepLabel, Stack, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n// project imports\r\nimport BasicInfo from './BasicInfo';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// step options\r\nconst steps = ['Create Table Data', 'Edit Table', 'Review'];\r\n\r\nconst getStepContent = (step, handleNext, handleBack, setErrorIndex, shippingData, setShippingData, paymentData, setPaymentData) => {\r\n    switch (step) {\r\n        case 0:\r\n            return (\r\n                <BasicInfo\r\n                    handleNext={handleNext}\r\n                    setErrorIndex={setErrorIndex}\r\n                    shippingData={shippingData}\r\n                    setShippingData={setShippingData}\r\n                />\r\n            );\r\n        case 1:\r\n            return (\r\n                <PaymentForm\r\n                    handleNext={handleNext}\r\n                    handleBack={handleBack}\r\n                    setErrorIndex={setErrorIndex}\r\n                    paymentData={paymentData}\r\n                    setPaymentData={setPaymentData}\r\n                />\r\n            );\r\n        case 2:\r\n            return <Review />;\r\n        default:\r\n            throw new Error('Unknown step');\r\n    }\r\n};\r\n\r\n// ==============================|| FORMS WIZARD - BASIC ||============================== //\r\n\r\nconst InterimInvoiceWizard = () => {\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [shippingData, setShippingData] = React.useState({});\r\n    const [paymentData, setPaymentData] = React.useState({});\r\n    const [errorIndex, setErrorIndex] = React.useState(null);\r\n\r\n    const handleNext = () => {\r\n        setActiveStep(activeStep + 1);\r\n        setErrorIndex(null);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"Create New Invoice\">\r\n            <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                {steps.map((label, index) => {\r\n                    const labelProps = {};\r\n\r\n                    if (index === errorIndex) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\" color=\"error\">\r\n                                Error\r\n                            </Typography>\r\n                        );\r\n\r\n                        labelProps.error = true;\r\n                    }\r\n\r\n                    return (\r\n                        <Step key={label}>\r\n                            <StepLabel {...labelProps}>{label}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            <>\r\n                {activeStep === steps.length ? (\r\n                    <>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            Add all data.\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\">\r\n                            The data you added has been added correctly.\r\n                        </Typography>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button component={Link} to=\"/inventory/MaterialsSupplyFormDetail\"\r\n                                    variant=\"contained\"\r\n                                    color=\"success\"\r\n                                    sx={{ my: 3, ml: 1 }}\r\n                                >\r\n                                    Okay!\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        {getStepContent(\r\n                            activeStep,\r\n                            handleNext,\r\n                            handleBack,\r\n                            setErrorIndex,\r\n                            shippingData,\r\n                            setShippingData,\r\n                            paymentData,\r\n                            setPaymentData\r\n                        )}\r\n                        {activeStep === steps.length - 1 && (\r\n                            <Stack direction=\"row\" justifyContent={activeStep !== 0 ? 'space-between' : 'flex-end'}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ my: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <AnimateButton>\r\n                                    <Button variant=\"contained\" onClick={handleNext} sx={{ my: 3, ml: 1 }}>\r\n                                        {activeStep === steps.length - 1 ? 'Add data' : 'Next'}\r\n                                    </Button>\r\n                                </AnimateButton>\r\n                            </Stack>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default InterimInvoiceWizard;\r\n","// material-ui\r\nimport { Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport InterimInvoiceWizard from './MaterialsSupplyForm';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| FORMS WIZARD ||============================== //\r\n\r\nconst FormsWizard = () => (\r\n    <Grid container spacing={gridSpacing} justifyContent=\"center\">\r\n        <Grid item xs={12}>\r\n            <InterimInvoiceWizard />\r\n        </Grid>\r\n    </Grid>\r\n);\r\n\r\nexport default FormsWizard;\r\n"],"sourceRoot":""}