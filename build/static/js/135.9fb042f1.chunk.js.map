{"version":3,"sources":["../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/@mui/base/BadgeUnstyled/badgeUnstyledClasses.js","../node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js","../node_modules/@mui/base/BadgeUnstyled/useBadge.js","../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/x-data-grid/constants/envConstants.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/@mui/x-data-grid/utils/warning.js","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/components/containers/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/ErrorBoundary.js","../node_modules/@mui/x-data-grid/components/base/GridErrorHandler.js","../node_modules/@mui/x-data-grid/components/base/GridHeaderPlaceholder.js","../node_modules/@mui/x-data-grid/lib/createDetectElementResize/index.js","../node_modules/@mui/x-data-grid/components/GridAutoSizer.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridBody.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/EventManager.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridErrorHandler.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/components/icons/index.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/models/gridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/selection/gridSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/models/gridFeatureMode.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPageSize.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPage.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/gridEditRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.old.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.old.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.old.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.new.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.new.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.new.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelection.js","../node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnsMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridFilterMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/HideGridColMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/SortGridMenuItems.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/components/ErrorOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/DataGridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeadersInner.js","../node_modules/@mui/x-data-grid/components/DataGridColumnHeaders.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/utils/esm/chainPropTypes.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/x-data-grid/utils/utils.js"],"names":["usePreviousProps","value","ref","React","current","getBadgeUnstyledUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BadgeUnstyled","props","component","children","className","components","componentsProps","max","maxProp","showZero","other","_objectWithoutPropertiesLoose","badgeContentProp","badgeContent","invisible","invisibleProp","prevProps","displayValue","Number","useBadge","_extends","ownerState","classes","slots","root","badge","composeClasses","undefined","useUtilityClasses","Root","rootProps","appendOwnerState","Badge","badgeProps","_jsxs","clsx","_jsx","getBadgeUtilityClass","badgeClasses","BadgeRoot","styled","name","overridesResolver","styles","position","display","verticalAlign","flexShrink","BadgeBadge","variant","capitalize","anchorOrigin","vertical","horizontal","overlap","color","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","bottom","left","leavingScreen","inProps","_componentsProps$root","_componentsProps$root2","_componentsProps$badg","_componentsProps$badg2","useThemeProps","anchorOriginProp","overlapProp","colorProp","variantProp","shouldSpreadAdditionalProps","as","getCircularProgressUtilityClass","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","CircularProgress","size","style","thickness","circleStyle","rootStyle","circumference","Math","PI","toFixed","round","width","role","viewBox","cx","cy","r","fill","strokeWidth","experimentalEnabled","process","GRID_EXPERIMENTAL_ENABLED","localStorageAvailable","window","localStorage","getItem","getDataGridUtilityClass","gridClasses","GridRootStyles","autoHeight","editBooleanCell","cell","cellContent","cellCheckbox","checkboxInput","columnHeader","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIcon","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorder","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","borderColor","mode","lighten","alpha","divider","darken","flex","border","shape","text","primary","body2","outline","borderBottomColor","WebkitTapHighlightColor","outlineWidth","outlineOffset","iconButtonContainer","visibility","opacity","shorter","whiteSpace","overflow","columnHeaderTitleContainerContent","cursor","marginRight","marginLeft","action","hover","touchAction","breakInside","selectedOpacity","hoverOpacity","borderBottom","textOverflow","boxShadow","shadows","background","paper","booleanCell","secondary","disabled","actionsCell","gridGap","spacing","disabledOpacity","rowReorderCellContainer","borderRight","alignSelf","groupingCriteriaCell","groupingCriteriaCellToggle","buildWarning","message","gravity","alreadyWarned","cleanMessage","Array","isArray","join","console","error","warn","wrapWithWarningOnCall","method","cacheContainer","cache","createSelector","args","selector","selectorArgs","stateOrApiRef","instanceId","isApiRef","cacheKey","state","get","newSelector","reselectCreateSelector","Map","set","acceptsApiRef","gridColumnsSelector","columns","gridColumnFieldsSelector","columnsState","all","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","map","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","filter","column","gridColumnPositionsSelector","visibleColumns","positions","currentPosition","i","length","push","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","reduce","acc","gridColumnsMetaSelector","totalWidth","useGridSelector","apiRef","isOutputSelector","GridApiContext","useGridApiContext","Error","GridRootPropsContext","useGridRootProps","contextValue","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","idRowsLookup","gridRowsIdToIdLookupSelector","idToIdLookup","gridRowTreeSelector","tree","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthSelector","treeDepth","gridRowIdsSelector","ids","GridRoot","_rootProps$classes","rootContainerRef","handleRef","useForkRef","rootElementRef","mountedState","setMountedState","useEnhancedEffect","unstable_updateGridDimensionsRef","disableMultipleSelection","useGridLogger","logger","newLogger","getLogger","GridMainContainerRoot","flexGrow","GridMainContainer","ErrorBoundary","errorInfo","this","api","logError","showError","_this$state","hasError","render","componentProps","GridErrorHandler","errorProps","_rootProps$components","ErrorOverlay","errorOverlay","GridHeaderPlaceholder","headerRef","Header","header","createDetectElementResize","nonce","hostWindow","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","offsetWidth","offsetHeight","scrollListener","e","target","indexOf","__resizeRAF__","cancelAnimationFrame","requestAnimationFrame","__resizeLast__","checkTriggers","__resizeListeners__","forEach","fn","call","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","document","createElement","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","head","getElementsByTagName","id","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","innerHTML","addEventListener","__animationListener__","removeResizeListener","splice","removeEventListener","removeChild","GridAutoSizer","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","setState","rootRef","parentElement","handleResize","useEventCallback","computedStyle","ownerWindow","paddingLeft","parseInt","paddingRight","newHeight","paddingTop","paddingBottom","newWidth","_parentElement$curren","win","detectElementResize","outerStyle","childParams","gridSortingStateSelector","sorting","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","model","gridSortModelSelector","sortModel","gridSortColumnLookupSelector","res","sortItem","index","sortDirection","sort","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","filterModel","gridVisibleRowsLookupSelector","visibleRowsLookup","gridFilteredRowsLookupSelector","filteredRowsLookup","gridVisibleSortedRowEntriesSelector","filteredDescendantCountLookup","gridVisibleSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridVisibleSortedTopLevelRowEntriesSelector","visibleSortedRows","rowTree","rowTreeDepth","_rowTree$row$id","depth","gridVisibleRowCountSelector","gridVisibleTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","columnLookup","_filterModel$items","items","item","_column$filterOperato","_item$value","columnField","filterOperators","filterOperator","find","operator","operatorValue","InputComponent","toString","gridFilterActiveItemsLookupSelector","activeFilters","filterItem","gridDensitySelector","density","gridDensityRowHeightSelector","rowHeight","gridDensityHeaderHeightSelector","headerHeight","gridDensityFactorSelector","factor","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","_apiRef$current$getRo","_apiRef$current$getRo2","getRootDimensions","viewportInnerSize","setViewportInnerSize","handleViewportSizeChange","_apiRef$current$getRo3","_apiRef$current$getRo4","subscribeEvent","GridOverlays","_rootProps$components2","_rootProps$components3","visibleRowCount","showNoResultsOverlay","overlay","NoRowsOverlay","noRowsOverlay","NoResultsOverlay","noResultsOverlay","LoadingOverlay","loadingOverlay","GridBody","VirtualScrollerComponent","ColumnHeadersComponent","disableVirtualization","isVirtualizationDisabled","setIsVirtualizationDisabled","enableVirtualization","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","columnsContainerRef","windowRef","renderingZoneRef","columnHeadersContainerElementRef","columnHeadersElementRef","publishEvent","innerRef","marginTop","GridFooterPlaceholder","footerRef","hideFooter","Footer","footer","GridContextProvider","Provider","forceDebug","noop","noopLogger","debug","info","LOG_LEVELS","getAppender","logLevel","appender","minLogLevelIdx","loggerObj","idx","useGridApiMethod","apiMethods","apiName","apiMethodsRef","Object","keys","apiMethodsNames","installMethods","methodName","hasOwnProperty","GridSignature","CLEANUP_TIMER_LOOP_MILLIS","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","clearTimeout","key","unregister","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","register","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","options","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","params","event","details","_handlerRef$current","defaultMuiPrevented","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","EventManager","maxListeners","warnOnce","events","listener","collection","highPriority","regular","highPriorityListeners","from","regularListeners","has","apply","that","on","oneTimeListener","removeListener","isSyntheticEvent","isPropagationStopped","globalId","_toPropertyKey","arg","input","hint","prim","Symbol","toPrimitive","TypeError","String","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","useGridInitialization","inputApiRef","unstable_eventManager","unstable_caches","signature","DataGridPro","emit","useGridApiInitialization","useGridLoggerFactory","handleError","useGridErrorHandler","controlStateMapRef","rawForceUpdate","updateControlState","controlStateItem","stateId","others","newState","isFunction","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","forceUpdate","unstable_updateControlState","useGridStateInitialization","processorsCache","runAppliers","groupCache","values","appliers","callback","registerPipeProcessor","group","processor","processors","_processors","otherProcessors","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","applyPipeProcessors","context","preProcessor","unstable_registerPipeProcessor","unstable_registerPipeApplier","unstable_requestPipeProcessorsApplication","unstable_applyPipeProcessors","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","groupPreProcessors","previousProcessor","unstable_getActiveStrategy","applyStrategyProcessor","activeStrategy","getActiveStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","entries","strategy","isAvailable","setStrategyAvailability","unstable_registerStrategyProcessor","unstable_applyStrategyProcessor","unstable_setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","writeToClipboardPolyfill","data","span","userSelect","textContent","body","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","useGridClipboard","copySelectedRowsToClipboard","includeHeaders","getSelectedRows","getDataAsCsv","delimiter","navigator","clipboard","writeText","catch","handleKeydown","_window$getSelection","isModifierKeyPressed","ctrlKey","metaKey","altKey","fromCharCode","keyCode","unstable_copySelectedRowsToClipboard","added","setAdded","wrapHandler","targetElement","boundElem","useGridNativeEventListener","gridColumnMenuSelector","columnMenu","columnMenuStateInitializer","open","useFirstRender","isFirstRender","useGridRegisterPipeProcessor","random","registerPreProcessor","useGridRegisterPipeApplier","GridArrowUpwardIcon","createSvgIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","getValueFromOption","option","getValueFromValueOptions","valueOptions","result","optionValue","renderSingleSelectOptions","OptionComponent","valueFormatter","isOptionTypeObject","formattedValue","content","label","GridFilterInputValue","_baseSelectProps$nati","applyValue","focusElementRef","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","useId","isSelectNative","baseSelect","native","singleSelectProps","select","SelectProps","getColumn","MenuItem","onFilterChange","columnValueOptions","_item$value2","itemValue","InputProps","endAdornment","BaseTextField","placeholder","onChange","InputLabelProps","shrink","inputRef","baseTextField","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","_rootProps$experiment","colDef","hasFocus","debounceMs","experimentalFeatures","newEditingApi","isProcessingProps","onValueChange","valueState","setValueState","handleChange","a","newValue","setEditCellValue","focus","fullWidth","sortModelDisableMultiColumnsSortingWarning","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","getNextGridSortDirection","sortingOrder","currentIdx","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","gridDateComparator","GridFilterInputMultipleValue","Autocomplete","multiple","freeSolo","limitTags","filterOptions","inputValue","renderTags","getTagProps","Chip","renderInput","TextField","GRID_STRING_COL_DEF","maxWidth","Infinity","hide","hideable","sortable","resizable","groupable","pinnable","editable","sortComparator","compare","align","getApplyFilterFn","filterRegex","RegExp","escapeRegExp","test","sensitivity","usage","some","filterValue","renderEditCell","getApplyQuickFilterFn","columnValue","parseNumericValue","getGridNumericOperators","isNaN","InputComponentProps","includes","GRID_NUMERIC_COL_DEF","headerAlign","valueParser","isNumber","toLocaleString","GridFilterInputDate","inputProps","dateRegex","dateTimeRegex","buildApplyFilterFn","compareFn","showTime","keepHours","match","slice","year","month","day","hour","minute","time","Date","getTime","valueAsDate","timeToCompare","setHours","getHours","getMinutes","getGridDateOperators","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","getTimezoneOffset","toISOString","substr","parsed","formatted","newFormattedDate","newParsedDate","date","setFullYear","hours","minutes","_valueTransformed$par","_state$parsed","renderEditDateCell","GRID_DATE_COL_DEF","toLocaleDateString","GRID_DATETIME_COL_DEF","GridBooleanCell","Icon","BooleanCellTrueIcon","BooleanCellFalseIcon","titleAccess","Boolean","GridEditBooleanCell","idProp","checked","htmlFor","BaseCheckbox","baseCheckbox","GridFilterInputBoolean","displayEmpty","GridEditModes","GridCellModes","GridRowModes","GRID_BOOLEAN_COL_DEF","renderCell","rowNode","isAutoGenerated","valueAsBoolean","isEscapeKey","isEnterKey","isTabKey","isSpaceKey","isDeleteKeys","printableCharRegex","isPrintableKey","GRID_CELL_EXIT_EDIT_MODE_KEYS","GRID_CELL_EDIT_COMMIT_KEYS","isCellExitEditModeKeys","isCellEditCommitKeys","isNavigationKey","isHomeOrEndKeys","isArrowKeys","isPageKeys","isKeyboardEvent","isHideMenuKey","GridEditSingleSelectCell","valueOptionsFormatted","editMode","setOpen","formattedTargetValue","isValid","Row","Promise","resolve","commitCellChange","setCellMode","getCellParams","BaseSelect","onOpen","MenuProps","onClose","reason","_rootProps$experiment2","stopCellEditMode","ignoreModifications","GridFilterInputSingleSelect","currentColumn","currentValueOptions","_itemValue","isOptionEqualToValue","createFilterOptions","GridFilterInputMultipleSingleSelect","resolvedColumn","resolvedValueOptions","resolvedFormattedValueOptions","filterValueOptionFormatter","filterValues","formattedElement","findIndex","formatedOption","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","potentialValues","iterableColumnValues","optionLabel","GridMenuRoot","Popper","menu","modal","GridMenu","onClickAway","onExited","prevTarget","prevOpen","BasePopper","anchorEl","placement","basePopper","popperOnExited","TransitionProps","ClickAwayListener","mouseEvent","Grow","node","Paper","GridActionsCell","tabIndex","focusedButtonIndex","setFocusedButtonIndex","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","stop","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","hideMenu","handleTouchRippleRef","instance","handleButtonClick","onClick","onKeyDown","newIndex","preventDefault","stopPropagation","button","touchRippleRef","IconButton","MoreActionsIcon","MenuList","autoFocusItem","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","string","number","dateTime","boolean","singleSelect","COLUMNS_DIMENSION_PROPERTIES","computeColumnTypes","customColumnTypes","mergedColumnTypes","colType","colTypeDef","extendType","GridPreferencePanelsValue","hydrateColumnsWidth","rawState","viewportInnerWidth","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","newColumn","clamp","initialFreeSpace","computedColumnWidths","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","min","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","createColumnsState","_apiRef$current","columnsStateWithoutColumnVisibilityModel","columnsToUpsert","initialState","columnTypes","currentColumnVisibilityModel","shouldRegenColumnVisibilityModelFromColumns","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","getGridColDef","hasBeenResized","columnsLookupBeforePreProcessing","columnsStateWithPreProcessing","hasModelChanged","newColumnVisibilityModel","isVisibleBefore","isVisibleAfter","columnsStateWithPortableColumns","orderedFields","dimensions","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","mergeColumnsState","getFirstNonSpannedColumnToRender","firstColumnToRender","firstRowToRender","lastRowToRender","visibleRows","firstNonSpannedColumnToRender","rowId","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstColumnIndexToRender","firstColumnIndex","minColumnIndex","columnBuffer","GridDensityTypes","columnsStateInitializer","_props$initialState","_props$initialState$c","_props$initialState2","_props$columnVisibili","_props$initialState3","_props$initialState3$","isUsingColumnVisibilityModel","columnsTypes","getUpdatedDensityState","newDensity","newHeaderHeight","newRowHeight","Compact","floor","Comfortable","densityStateInitializer","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","getCellElement","_checkboxElement$curr","querySelector","handleKeyDown","shiftKey","isSelectable","isRowSelectable","GridCellCheckboxRenderer","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridPaginationSelector","pagination","gridPageSelector","page","gridPageSizeSelector","pageSize","gridPaginationRowRangeSelector","pageCount","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","getRow","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","isIndeterminate","getColumnHeaderElement","handleSelectionChange","p","indeterminate","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","serializeCellValue","delimiterCharacter","replace","buildCSV","rowIds","CSVBody","cellParams","serializeRow","trim","CSVHead","GridLinkOperator","getColumnsToExport","fields","allColumns","defaultGetRowsToExport","filteredSortedRowIds","GridCsvExportMenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","_options$getRowsToExp","_options$includeHeade","exportedColumns","getRowsToExport","exportedRowIds","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","prototype","url","URL","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","csvOptions","disableToolbarButton","componentName","gridRowsMetaSelector","rowsMeta","GridFeatureModeConstant","getDefaultGridFilterModel","linkOperator","And","quickFilterValues","quickFilterLogicOperator","useGridRegisterStrategyProcessor","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","cleanItem","cleanFilterItem","mergeStateWithFilterModel","buildAggregatedFilterApplier","isRowMatchingFilterItems","parsedValue","_filterItem$value","parser","x","newFilterItem","applyFilterOnRow","shouldApplyFilter","filteredAppliers","every","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","columnsFields","appliersPerColumnField","sanitizedQuickFilterValues","usedCellParams","_appliersPerColumnFie","_appliersPerColumnFie2","_appliersPerColumnFie3","_appliersPerColumnFie4","buildAggregatedQuickFilterApplier","filterStateInitializer","_props$filterModel","_props$initialState$f","getVisibleRows","paginationMode","useGridVisibleRows","response","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","defaultPageSize","autoPageSize","mergeStateWithPageSize","getPageCount","rowCount","ceil","applyValidPage","paginationState","mergeStateWithPage","paginationStateInitializer","_props$initialState$p","_props$page","_props$initialState2$","_props$rowCount","_props$rowCount2","useGridPagination","onPageSizeChange","setPageSize","stateExportPreProcessing","prevState","pageSizeToExport","stateRestorePreProcessing","_context$stateToResto","stateToRestore","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","useGridPageSize","onPageChange","setPage","pageToExport","_context$stateToResto2","scrollToIndexes","rowIndex","useGridPage","gridPreferencePanelStateSelector","preferencePanel","preferencePanelStateInitializer","gridEditRowsStateSelector","editRows","isPromise","promise","then","GridCellEditStartReasons","GridCellEditStopReasons","editingStateInitializer","useGridEditing","_props$experimentalFe2","buildCallback","Cell","getCellMode","newEditRowsState","Edit","getCellValue","editRowsState","View","_props$experimentalFe","unstable_runPendingEditCellValueMutation","getEditRowsModel","editCellProps","preventCommitWhileValidating","cellProps","isValidating","commitParams","preProcessEditCellProps","newEditCellProps","unstable_setEditCellProps","setCellEditingEditCellValue","unstable_parseValue","newEditCellPropsProcessed","unstable_setCellEditingEditCellValue","handleCellKeyDown","cellMode","isEditable","isEditMode","handleCellDoubleClick","commitPropsAndExit","handleCellFocusOut","handleColumnHeaderDragStart","handleCellEditStart","handleCellEditStop","setCellFocus","handleCellEditCommit","rowUpdate","valueSetter","updateRows","handleEditCellPropsChange","onCellEditCommit","onCellEditStart","onCellEditStop","useCellEditing","_props$experimentalFe4","focusTimeout","nextFocusedCell","setRowMode","getRowMode","commitRowChange","editRowProps","fieldsWithValidator","validatorErrors","errors","setRowEditingEditCellValue","editRow","unstable_setRowEditingEditCellValue","rowParams","_props$experimentalFe3","handleRowEditStart","handleRowEditStop","handleRowEditCommit","handleCellFocusIn","_nextFocusedCell$curr","onRowEditCommit","onRowEditStart","onRowEditStop","useGridRowEditing","debounceMap","editRowsModel","onEditRowsModelChange","isCellEditable","maybeDebounce","runPendingEditCellValueMutation","debouncedField","newParams","parseValue","setEditCellProps","editProps","setEditRowsModel","preventTextSelection","isMoreThanOneClick","detail","onEditCellPropsChange","GridRowEditStartReasons","GridRowEditStopReasons","_excluded2","missingOnProcessRowUpdateErrorWarning","cellModesModel","setCellModesModel","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","throwIfNotInMode","cellDoubleClick","cellFocusOut","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","deleteKeyDown","startCellEditModeParams","deleteValue","startCellEditMode","cellToFocusAfter","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_cellModesModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","updateStateToStopCellEditMode","finishCellEditMode","unstable_moveFocusToRelativeCell","unstable_getRowWithUpdatedValuesFromCellEditing","errorThrown","finalRowUpdate","hasChanged","getRowWithUpdatedValuesFromCellEditing","_prevCellModesModel$c","_prevCellModesModel$c2","_idToIdLookup$id","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","prevRowModesModel","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","rowFocusOut","columnFields","startRowEditModeParams","fieldToFocus","startRowEditMode","fieldProps","stopRowEditMode","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","shouldDeleteValue","updateStateToStopRowEditMode","focusedField","finishRowEditMode","unstable_getRowWithUpdatedValuesFromRowEditing","promises","_editingState$id","otherFieldsProps","processedProps","thisField","fieldColumn","_editingState$id2","getRowWithUpdatedValuesFromRowEditing","_prevRowModesModel$cu","isCellEditableProp","debounces","runCallback","setEditCellValueToCall","getRowWithUpdatedValues","unstable_getRowWithUpdatedValues","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","_tree$parentId","validDescendants","child","childNode","getGridRowId","rowModel","getRowId","detailErrorMessage","JSON","stringify","checkGridRowIdIsValid","convertRowsPropToState","prevCache","rowsBeforePartialUpdates","getRowsStateFromCache","rowsCache","previousTree","rowCountProp","loadingProp","groupingResponse","dataTopLevelRowCount","parent","rowsStateInitializer","useGridRows","currentPage","lastUpdateMs","now","throttledRowsChange","newCache","throttle","run","throttleRemainingTimeMs","throttleRowsMs","setRows","updates","DataGrid","uniqUpdates","update","deletedRowIds","newStateValue","partialRow","_action","getRowModels","allRows","getRowsCount","getAllRowIds","getRowIndexRelativeToVisibleRows","setRowChildrenExpansion","isExpanded","currentNode","getRowNode","newNode","childrenExpanded","_gridRowTreeSelector$","getRowGroupChildren","groupId","applySorting","applyFiltering","groupNode","sortedRowIds","startIndex","childId","rowApi","setRowIndex","targetIndex","oldIndex","updatedRows","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","flatRowTreeCreationMethod","groupingKey","groupingField","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElement","useGridParamsApi","getColumnHeaderParams","getCellValueWithDeprecationWarning","getAllColumns","getValue","getBaseCellParams","cellFocus","cellTabIndex","getGridColumnHeaderElement","getRowElement","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","selectionStateInitializer","_getSelectionModelPro","selectionModel","useGridSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","sortingStateInitializer","_props$sortModel","_props$initialState$s","scrollIntoView","clientHeight","offsetTop","elementBottom","cachedSupportsPreventScroll","rowsMetaStateInitializer","currentPageTotalHeight","useDataGridComponent","useGridRowsPreProcessors","editingStateInitializer_new","editingStateInitializer_old","goToCell","colIndex","_visibleSortedRows$ro","closestColumnToUse","nextCellColSpanInfo","rightVisibleCellIndex","getVisibleColumns","goToHeader","setColumnHeaderFocus","handleCellNavigationKeyDown","viewportPageSize","unstable_getViewportPageSize","colIndexBefore","getColumnIndex","rowIndexBefore","firstRowIndexInPage","lastRowIndexInPage","lastColIndex","shouldPreventDefault","nextRowIndex","handleColumnHeaderKeyDown","_currentPage$range$fi","_currentPage$range","_currentPage$range$la","_currentPage$range2","headerTitleNode","currentTarget","contains","toggleColumnMenu","useGridKeyboardNavigation","propSelectionModel","lastRowToggled","onSelectionModelChange","disableSelectionOnClick","canHaveMultipleSelection","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isSelected","isRowSelected","endIndex","selectRowRange","setSelectionModel","selectRow","resetSelection","newSelection","selectRows","selectableIds","selectionLookup","allPagesRowIds","start","end","rowsBetweenStartAndEnd","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleCellClick","preventSelectionOnShift","handleRowSelectionCheckboxChange","nativeEvent","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","previousRowIndex","isStateControlled","currentPageRowsLookup","firstSelectableRow","useGridSelection","_props$initialState4","_props$initialState4$","_props$componentsProp2","previousColumnsProp","previousColumnTypesProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnsMeta","getColumnPosition","setColumnVisibilityModel","updateColumns","updateColumn","setColumnVisibility","isVisible","_columnVisibilityMode","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","setColumnWidth","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$componentsProp","ColumnsPanel","columnsPanel","prevInnerWidth","onColumnVisibilityChange","hydrateColumns","useGridColumns","useRef","setCellColSpanInfo","useCallback","columnIndex","sizes","getCellColSpanInfo","_lookup$current$rowId","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","colSpan","j","nextColumnIndex","calculateColSpan","minFirstColumn","maxLastColumn","unstable_calculateColSpan","handleColumnReorderChange","useGridColumnSpanning","useGridEditing_new","useGridEditing_old","lastClickedCell","focusedCell","moveFocusToRelativeCell","direction","columnIndexToFocus","rowIndexToFocus","rowToFocus","columnToFocus","handleColumnHeaderFocus","handleBlur","handleCellMouseUp","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","filteringResult","applyFilters","upsertFilterItem","itemIndex","setFilterModel","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","newFilterItems","filterItemsWithValue","filters","hideFilterPanel","setFilterLinkOperator","setQuickFilterValues","isDeepEqual","unstable_applyFilters","getVisibleRowModels","filterModelToExport","callbacks","FilterPanel","filterPanel","flatFilteringMethod","handleColumnsChange","filterableColumnsLookup","useGridFilter","onSortModelChange","upsertSortModel","existingIdx","c","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortingMode","sortRowList","comparatorList","comparator","getSortCellParams","parseSortItem","rowList","b","parsedSortItems","row1Params","row2Params","sortCellParams1","sortCellParams2","buildAggregatedSortingApplier","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRows","getSortedRowIds","getRowIndex","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","handleColumnHeaderClick","latestColumns","useGridSorting","setDensity","currentDensityState","newDensityState","useGridDensity","getRowHeight","getRowSpacing","rowsHeightLookup","hydrateRowsMeta","densityFactor","currentRowHeight","baseRowHeight","_getRowHeight","isResized","initialHeights","base","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","isFirstVisible","isLastVisible","spacingTop","spacingBottom","finalRowHeight","acc2","setRowHeight","unstable_getRowHeight","_rowsHeightLookup$cur","unstable_getRowInternalSizes","_rowsHeightLookup$cur2","unstable_setRowHeight","useGridRowsMeta","colRef","scrollCoordinates","cellWidth","columnPositions","_visibleSortedRows$pa","clientWidth","elementIndex","targetOffsetHeight","scroll","getScrollPosition","useGridScroll","showColumnMenu","hideColumnMenu","useGridColumnMenu","previousGridState","previousColumnVisibility","updateGridColumnsForPrint","exportedColumnFields","buildPrintWindow","iframeEl","src","location","handlePrintWindowLoad","printWindow","_printWindow$contentW","_querySelector","_querySelector2","normalizeOptions","copyStyles","hideToolbar","onload","printDoc","contentDocument","contentWindow","gridRootElement","gridClone","cloneNode","gridCloneViewport","virtualScroller","columnHeaders","columnHeadersInner","_gridClone$querySelec","_gridClone$querySelec2","gridToolbarElementHeight","toolbarContainer","gridFooterElementHeight","footerContainer","remove","defaultPageStyle","pageStyle","styleElement","bodyClassName","classList","add","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","getAttribute","attributes","attr","nodeName","nodeValue","print","handlePrintWindowAfterPrint","_previousGridState$cu","_previousGridState$cu2","restoreState","exportState","onafterprint","_options$printOptions","printOptions","useGridPrintExport","warningShown","rootDimensionsRef","fullDimensionsRef","updateGridDimensionsRef","_apiRef$current$rootE","rootElement","columnsTotalWidth","scrollBarSize","scrollbarSize","scrollDiv","viewportOuterSize","container","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","hasScrollX","hasScrollY","hasScroll","newFullDimensions","prevDimensions","resize","getViewportPageSize","renderContext","unstable_getRenderContext","debounceResize","debounce","isFirstSizing","isJSDOM","userAgent","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onColumnOrderChange","onCellClick","onCellDoubleClick","onCellKeyDown","onCellFocusOut","onPreferencePanelClose","onPreferencePanelOpen","onRowDoubleClick","onRowClick","onError","onStateChange","useGridEvents","useGridStatePersistence","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelLinkOperator","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","GridIconButtonContainerRoot","GridIconButtonContainer","GridColumnMenuContainer","labelledby","handleListKeyDown","autoFocus","GridColumnsMenuItem","showColumns","disableColumnSelector","GridFilterMenuItem","showFilter","disableColumnFilter","HideGridColMenuItem","timeoutRef","toggleColumn","SortGridMenuItems","onSortMenuItemClick","GridColumnMenu","defaultButtons","preProcessedButtons","GridRowCountRoot","margin","GridRowCount","GridSelectedRowCountRoot","selectedRowCount","breakpoints","up","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","minHeight","borderTop","GridFooterContainer","GridFooter","selectedRowCountElement","hideFooterSelectedRowCount","rowCountElement","hideFooterRowCount","paginationElement","hideFooterPagination","Pagination","GridHeader","PreferencesPanel","preferencesPanel","Toolbar","toolbar","GridPreferencesPanel","_preferencePanelState","panelContent","Panel","panel","GridOverlayRoot","default","GridOverlay","GridLoadingOverlay","GridNoRowsOverlay","GridPaginationRoot","TablePagination","tablePaginationClasses","selectLabel","GridPagination","_rootProps$rowsPerPag","lastPage","handlePageSizeChange","newPageSize","handlePageChange","rowsPerPageOptions","rowsPerPage","onRowsPerPageChange","GridPanelContentRoot","maxHeight","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","TrapFocus","disableEnforceFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","FormControl","_","filterFormDeleteIcon","marginBottom","FilterFormLinkOperatorInput","filterFormLinkOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getLinkOperatorLocaleKey","Or","getColumnLabel","GridFilterForm","_rootProps$components4","_rootProps$components5","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","linkOperators","columnsSort","deleteIconProps","linkOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","linkOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","hasLinkOperatorColumn","baseFormControlProps","baseFormControl","isBaseSelectNative","sortedFilterableColumns","currentOperator","_currentColumn$filter","changeColumn","newOperator","eraseItemValue","changeOperator","changeLinkOperator","_valueRef$current","BaseFormControl","FilterPanelDeleteIcon","sx","InputLabel","labelId","GridPanelHeaderRoot","panelHeader","GridPanelHeader","GridColumnsPanelRoot","GridColumnsPanelRowRoot","columnsPanelRow","switchClasses","GridIconButtonRoot","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","_apiRef$current$colum","isPlaced","setIsPlaced","handleClickAway","modifiers","enabled","phase","effect","elevation","EmptyCell","GridColumnUnsortedIcon","ColumnSortedAscendingIcon","ColumnSortedDescendingIcon","defaultLabel","GridNoResultsOverlay","DEFAULT_GRID_ICON_SLOTS_COMPONENTS","ColumnMenuIcon","OpenFilterButtonIcon","ColumnFilteredIcon","ColumnSelectorIcon","ColumnUnsortedIcon","ColumnResizeIcon","DensityCompactIcon","DensityStandardIcon","DensityComfortableIcon","ExportIcon","TreeDataCollapseIcon","TreeDataExpandIcon","GroupingCriteriaCollapseIcon","GroupingCriteriaExpandIcon","DetailPanelExpandIcon","DetailPanelCollapseIcon","RowReorderIcon","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","MUICheckbox","MUITextField","MUIFormControl","MUISelect","BaseSwitch","MUISwitch","BaseButton","MUIButton","BaseTooltip","MUITooltip","MUIPopper","showRightBorder","onDoubleClick","onMouseDown","onMouseUp","onDragEnter","onDragOver","valueToRender","cellRef","publishMouseUp","publish","propHandler","activeElement","focusableElement","elementToFocus","preventScroll","scrollPosition","handleFocus","onFocus","managesOwnFocus","ColumnHeaderFilterIconButton","counter","icon","toggleFilter","iconButton","enterDelay","baseTooltip","ColumnMenu","lastFilterRef","filterFormProps","applyFilter","applyFilterLinkOperator","getDefaultItem","firstColumnWithOperator","_colDef$filterOperato","defaultItem","shouldCloseFilterPanel","startIcon","baseButton","searchInputRef","searchValue","setSearchValue","toggleAllColumns","handleSearchValueChange","currentColumns","searchValueToCheck","FormControlLabel","control","baseSwitch","disableColumnReorder","draggable","selected","styleProp","renderedColumns","containerWidth","onMouseEnter","onMouseLeave","ariaRowIndex","editing","nodeType","publishClick","rowSpacingType","rowClassName","getRowClassName","cells","indexRelativeToAllColumns","isLastColumn","disableExtendRowFullWidth","showCellRightBorder","classNames","editCellState","_rootProps$classes2","updatedRow","getCellClassName","emptyCellWidth","DATA_GRID_FORCED_PROPS","disableColumnResize","DATA_GRID_PROPS_DEFAULT_VALUES","rowBuffer","columnThreshold","rowThreshold","Standard","disableDensitySelector","showColumnRightBorder","VirtualScrollerRoot","GridVirtualScroller","VirtualScrollerContentRoot","virtualScrollerContent","GridVirtualScrollerContent","overflowedContent","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","getIndexFromScroll","offset","sliceStart","sliceEnd","pivot","itemOffset","getRenderableIndexes","firstIndex","lastIndex","buffer","minFirstIndex","maxLastIndex","DataGridVirtualScroller","onRenderZonePositioning","renderZoneMinColumnIndex","renderZoneMaxColumnIndex","getRowProps","selectedRowsLookup","renderZoneRef","setRenderContext","prevRenderContext","setContainerWidth","prevTotalWidth","computeRenderContext","lastColumnIndex","updateRenderZonePosition","nextRenderContext","updateRenderContext","initialRenderContext","handleScroll","topRowsScrolledSincePreviousRender","abs","bottomRowsScrolledSincePreviousRender","topColumnsScrolledSincePreviousRender","bottomColumnsScrolledSincePreviousRender","shouldSetState","ReactDOM","handleWheel","handleTouchMove","needsHorizontalScrollbar","contentSize","shouldExtendContent","overflowX","getRenderContext","getRows","availableSpace","renderedRows","initialFirstColumnToRender","lastColumnToRender","lastVisibleRowIndex","targetRowHeight","getRootProps","onScroll","onWheel","onTouchMove","getContentProps","getRenderZoneProps","useGridVirtualScroller","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","GridColumnHeaderSortIcon","GridColumnHeaderTitleRoot","columnHeaderTitle","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","columnWidth","titleRef","tooltip","setTooltip","isOver","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","side","Right","resizing","stopClick","GridColumnHeaderSeparator","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","GridColumnHeaderMenu","ContentComponent","contentComponentProps","GridColumnHeaderItem","_column$sortingOrder","_column$headerName","columnMenuOpen","isResizing","filterItemsCounter","extendRowFullWidth","separatorSide","headerCellRef","showColumnMenuIcon","setShowColumnMenuIcon","headerComponent","mouseEventsHandlers","onMouseOver","onMouseOut","onBlur","draggableEventHandlers","onDragStart","onDragEnd","isDragging","isColumnSorted","isColumnFiltered","isColumnNumeric","draggableContainer","titleContainer","titleContainerContent","ariaSort","handleExited","columnMenuIconButton","columnTitleIconButtons","columnHeaderFilterIconButton","hideSortIcons","columnMenuState","GridScrollAreaRawRoot","scrollArea","GridScrollAreaRaw","scrollDirection","dragging","setDragging","handleScrolling","newScrollPosition","handleDragOver","clientX","getBoundingClientRect","toggleDragging","prevDragging","GridScrollArea","GridColumnHeadersRoot","borderTopLeftRadius","borderTopRightRadius","GridColumnHeaders","GridColumnHeadersInnerRoot","columnHeaderDropZone","GridColumnHeadersInner","DataGridColumnHeaders","innerRefProp","dragCol","setDragCol","resizeCol","setResizeCol","cellTabIndexState","columnHeaderFocus","filterColumnLookup","sortColumnLookup","handleInnerRef","prevScrollLeft","getFirstColumnIndexToRenderRef","defaultMemoize","equalityCheck","updateInnerPosition","_prevRenderContext$cu","_prevRenderContext$cu2","canUpdateInnerPosition","isUIEvent","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumns","isFirstColumn","hasTabbableElement","getInnerProps","useGridColumnHeaders","DataGridRaw","themedProps","overrides","mergedComponents","defaultComponent","useDataGridProps","propTypes","PropTypes","bool","array","isRequired","oneOf","any","warnIfFocusStateIsNotSynced","arrayOf","oneOfType","func","getDetailPanelContent","getCheckboxUtilityClass","checkboxClasses","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","disableRipple","active","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_icon$props$fontSize","_indeterminateIcon$pr","checkedIcon","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","setItem","removeItem","err","constructor","entriesA","entryA","Set","ArrayBuffer","isView","source","flags","valueOf"],"mappings":"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","file":"static/js/135.9fb042f1.chunk.js","sourcesContent":["import * as React from 'react';\n\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport default usePreviousProps;","import generateUtilityClasses from '../generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUnstyledUtilityClass(slot) {\n  return generateUtilityClass('BaseBadge', slot);\n}\nconst badgeUnstyledClasses = generateUtilityClasses('BaseBadge', ['root', 'badge', 'invisible']);\nexport default badgeUnstyledClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    component,\n    children,\n    className,\n    components = {},\n    componentsProps = {},\n    max: maxProp = 99,\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || components.Root || 'span';\n  const rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root), ownerState);\n  const Badge = components.Badge || 'span';\n  const badgeProps = appendOwnerState(Badge, componentsProps.badge, ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;","import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(props) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = props;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : props;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import generateUtilityClasses from '@mui/base/generateUtilityClasses';\nimport generateUtilityClass from '@mui/base/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular', // TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    component = 'span',\n    components = {},\n    componentsProps = {},\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\n        as: component,\n        ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, {\n        className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n      }, shouldSpreadAdditionalProps(components.Badge) && {\n        ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import { localStorageAvailable } from '../utils/utils'; // A guide to feature toggling.\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nlet experimentalEnabled = false;\n\nif (typeof process !== 'undefined' && process.env.GRID_EXPERIMENTAL_ENABLED !== undefined && localStorageAvailable() && window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED')) {\n  experimentalEnabled = window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED') === 'true';\n} else if (typeof process !== 'undefined') {\n  experimentalEnabled = process.env.GRID_EXPERIMENTAL_ENABLED === 'true';\n}\n\nexport const GRID_EXPERIMENTAL_ENABLED = experimentalEnabled;","import { generateUtilityClasses, generateUtilityClass } from '@mui/material';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'autoHeight', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--withRenderer', 'cell', 'cellContent', 'cellCheckbox', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderDropZone', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeaders', 'columnHeadersInner', 'columnHeadersInner--scrollable', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsPanel', 'columnsPanelRow', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filterForm', 'filterFormDeleteIcon', 'filterFormLinkOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'iconButtonContainer', 'iconSeparator', 'main', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'root', 'row', 'row--editable', 'row--editing', 'row--lastVisible', 'row--dragging', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'pinnedColumns--left', 'pinnedColumns--right', 'pinnedColumnHeaders', 'pinnedColumnHeaders--left', 'pinnedColumnHeaders--right', 'withBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { darken, lighten, alpha, styled } from '@mui/material/styles';\nimport { gridClasses } from '../../constants/gridClasses';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.autoHeight}`]: styles.autoHeight\n  }, {\n    [`& .${gridClasses.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${gridClasses['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${gridClasses['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${gridClasses['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${gridClasses['cell--textRight']}`]: styles['cell--textRight']\n  }, // TODO v6: Remove\n  {\n    [`& .${gridClasses['cell--withRenderer']}`]: styles['cell--withRenderer']\n  }, {\n    [`& .${gridClasses.cell}`]: styles.cell\n  }, {\n    [`& .${gridClasses.cellContent}`]: styles.cellContent\n  }, {\n    [`& .${gridClasses.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${gridClasses.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${gridClasses['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${gridClasses['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${gridClasses['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${gridClasses['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${gridClasses['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${gridClasses['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${gridClasses['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${gridClasses['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${gridClasses.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${gridClasses.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${gridClasses['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${gridClasses['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${gridClasses.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${gridClasses.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${gridClasses.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${gridClasses.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${gridClasses.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${gridClasses.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${gridClasses.menuList}`]: styles.menuList\n  }, {\n    [`& .${gridClasses['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${gridClasses['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${gridClasses['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${gridClasses.row}`]: styles.row\n  }, {\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${gridClasses.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${gridClasses.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${gridClasses.withBorder}`]: styles.withBorder\n  }, {\n    [`& .${gridClasses.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${gridClasses.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${gridClasses['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n\n  const gridStyle = _extends({\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    border: `1px solid ${borderColor}`,\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    [`&.${gridClasses.autoHeight}`]: {\n      height: 'auto',\n      [`& .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n        borderBottomColor: 'transparent'\n      }\n    },\n    [`& .${gridClasses['virtualScrollerContent--overflowed']} .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n      borderBottomColor: 'transparent'\n    },\n    [`& .${gridClasses.columnHeader}, & .${gridClasses.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.columnHeader}:focus-within, & .${gridClasses.cell}:focus-within`]: {\n      outline: `solid ${alpha(theme.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${gridClasses.columnHeader}:focus, & .${gridClasses.cell}:focus`]: {\n      outline: `solid ${theme.palette.primary.main} 1px`\n    },\n    [`& .${gridClasses.columnHeaderCheckbox}, & .${gridClasses.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--sorted']} .${gridClasses.iconButtonContainer}, & .${gridClasses['columnHeader--filtered']} .${gridClasses.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}) .${gridClasses.sortIcon}`]: {\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}):hover .${gridClasses.sortIcon}`]: {\n      opacity: 0.5\n    },\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${gridClasses.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.sortIcon}, & .${gridClasses.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${gridClasses['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderDraggableContainer}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${gridClasses['columnHeader--moving']}`]: {\n      backgroundColor: theme.palette.action.hover\n    },\n    [`& .${gridClasses.columnSeparator}`]: {\n      position: 'absolute',\n      zIndex: 100,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${gridClasses['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${gridClasses['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${gridClasses['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: theme.palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${gridClasses['columnSeparator--resizing']}`]: {\n        color: theme.palette.text.primary\n      }\n    },\n    [`& .${gridClasses.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${gridClasses.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}:hover`]: {\n      [`& .${gridClasses.iconButtonContainer}`]: {\n        visibility: 'visible',\n        width: 'auto'\n      },\n      [`& .${gridClasses.menuIcon}`]: {\n        width: 'auto',\n        visibility: 'visible'\n      }\n    },\n    [`.${gridClasses.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.row}`]: {\n      display: 'flex',\n      width: 'fit-content',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n      '&:hover, &.Mui-hovered': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`& .${gridClasses.cell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      borderBottom: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses.cellContent}`]: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: theme.shadows[2],\n      backgroundColor: theme.palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${theme.palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${gridClasses['row--editing']}`]: {\n      boxShadow: theme.shadows[2]\n    },\n    [`& .${gridClasses['row--editing']} .${gridClasses.cell}`]: {\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.background.paper\n    },\n    [`& .${gridClasses.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"true\"]`]: {\n      color: theme.palette.text.secondary\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"false\"]`]: {\n      color: theme.palette.text.disabled\n    },\n    [`& .${gridClasses.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: theme.spacing(1)\n    },\n    [`& .${gridClasses.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${gridClasses.rowReorderCellContainer}`]: {\n      padding: 0,\n      alignItems: 'stretch'\n    },\n    [`& .${gridClasses.withBorder}`]: {\n      borderRight: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses['cell--textLeft']}`]: {\n      justifyContent: 'flex-start'\n    },\n    [`& .${gridClasses['cell--textRight']}`]: {\n      justifyContent: 'flex-end'\n    },\n    [`& .${gridClasses['cell--textCenter']}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%'\n    },\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${gridClasses['columnHeader--dragging']}, & .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity,\n      [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${gridClasses.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    },\n    [`& .${gridClasses.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    }\n  });\n\n  return gridStyle;\n});","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: null\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport const createSelector = (...args) => {\n  if (cacheContainer.cache === null) {\n    cacheContainer.cache = {};\n  }\n\n  const selector = (...selectorArgs) => {\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isApiRef = !!stateOrApiRef.current;\n    const cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : 'default';\n    const state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n\n    if (cacheContainer.cache === null) {\n      cacheContainer.cache = {};\n    }\n\n    const {\n      cache\n    } = cacheContainer;\n\n    if (cache[cacheKey] && cache[cacheKey].get(args)) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cache[cacheKey].get(args)(state, cacheKey);\n    }\n\n    const newSelector = reselectCreateSelector(...args);\n\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = new Map();\n    }\n\n    cache[cacheKey].set(args, newSelector);\n    return newSelector(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n\n  selector.acceptsApiRef = true;\n  return selector;\n}; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCreateSelectorCache = () => {\n  cacheContainer.cache = null;\n};","import { createSelector } from '../../../utils/createSelector';\nimport { wrapWithWarningOnCall } from '../../../utils/warning';\n/**\n * @category Columns\n * @deprecated Use the selector returning exactly the value you are looking for.\n * @ignore - do not document.\n * TODO v6: Rename `gridColumnsStateSelector`\n */\n\nexport const gridColumnsSelector = state => state.columns;\n/**\n * Get the field of each column.\n * @category Columns\n */\n\nexport const gridColumnFieldsSelector = createSelector(gridColumnsSelector, columnsState => columnsState.all);\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridColumnLookupSelector = createSelector(gridColumnsSelector, columnsState => columnsState.lookup);\n/**\n * Get the columns as an array.\n * @category Columns\n */\n\nexport const gridColumnDefinitionsSelector = createSelector(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\n\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsSelector, columnsState => columnsState.columnVisibilityModel);\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnFieldsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\n\nexport const gridColumnPositionsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n\n  return positions;\n});\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\n\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n\n  if (colCount === 0) {\n    return 0;\n  }\n\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\n\nexport const gridFilterableColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridFilterableColumnLookupSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n\n  return acc;\n}, {}));\n/**\n * @category Columns\n * @deprecated Use `gridColumnFieldsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsFieldsSelector = wrapWithWarningOnCall(gridColumnFieldsSelector, ['MUI: The method allGridColumnsFieldsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnFieldsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsSelector = wrapWithWarningOnCall(gridColumnDefinitionsSelector, ['MUI: The method allGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnDefinitionsSelector instead']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsSelector = wrapWithWarningOnCall(gridVisibleColumnDefinitionsSelector, ['MUI: The method visibleGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridVisibleColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsSelector = wrapWithWarningOnCall(gridFilterableColumnDefinitionsSelector, ['MUI: The method filterableGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnLookupSelector` instead (not the same return format).\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsIdsSelector = wrapWithWarningOnCall(createSelector(gridFilterableColumnDefinitionsSelector, columns => columns.map(col => col.field)), ['MUI: The method filterableGridColumnsIdsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead.', 'The return format is now a lookup, if you want to get the same output as before, use the following code:', '', 'const lookup = gridFilterableColumnLookupSelector(apiRef);', 'const fields = gridColumnFieldsSelector(apiRef).filter(field => lookup[field]);']);\n/**\n * Get the amount of visible columns.\n * @category Visible Columns\n * @deprecated Use the length of the array returned by `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsLengthSelector = wrapWithWarningOnCall(createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.length), ['MUI: The method visibleGridColumnsLengthSelector is deprecated and will be removed in the next major version.', 'Use the length of the array returned by gridVisibleColumnDefinitionsSelector instead.']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridColumnsTotalWidthSelector` or `gridColumnPositionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const gridColumnsMetaSelector = wrapWithWarningOnCall(createSelector(gridColumnPositionsSelector, gridColumnsTotalWidthSelector, (positions, totalWidth) => ({\n  totalWidth,\n  positions\n})), ['MUI: The method gridColumnsMetaSelector is deprecated and will be removed in the next major version.', 'Use gridColumnsTotalWidthSelector or gridColumnPositionsSelector instead']);","import { buildWarning } from '../../utils/warning';\n\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nexport const useGridSelector = (apiRef, selector) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n\n  return selector(apiRef.current.state);\n};","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from '../../components/GridApiContext';\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n\n  if (apiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid or DataGridPro parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n\n  return apiRef;\n}","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\n\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from '../../context/GridRootPropsContext';\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n\n  if (!contextValue) {\n    throw new Error('MUI: useGridRootProps should only be used inside the DataGrid/DataGridPro component.');\n  }\n\n  return contextValue;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idRowsLookup);\nexport const gridRowsIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepth);\nexport const gridRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.ids);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  var _rootProps$classes;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  apiRef.current.rootElementRef = rootContainerRef; // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  useEnhancedEffect(() => {\n    if (mountedState) {\n      apiRef.current.unstable_updateGridDimensionsRef();\n    }\n  }, [apiRef, mountedState]);\n\n  if (!mountedState) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes.root, gridClasses.root, rootProps.autoHeight && gridClasses.autoHeight),\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import * as React from 'react';\nexport function useGridLogger(apiRef, name) {\n  const logger = React.useRef(null);\n\n  if (logger.current) {\n    return logger.current;\n  }\n\n  const newLogger = apiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMainContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})(() => ({\n  position: 'relative',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden'\n}));\nexport function GridMainContainer(props) {\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridMainContainerRoot, {\n    className: classes.root,\n    children: props.children\n  });\n}","import * as React from 'react';\nexport class ErrorBoundary extends React.Component {\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    if (this.props.api.current) {\n      this.logError(error); // Allows to trigger the Error event and all listener can run on Error\n\n      this.props.api.current.showError({\n        error,\n        errorInfo\n      });\n    }\n  }\n\n  logError(error, errorInfo) {\n    this.props.logger.error(`An unexpected error occurred. Error: ${error && error.message}. `, error, errorInfo);\n  }\n\n  render() {\n    var _this$state;\n\n    if (this.props.hasError || (_this$state = this.state) != null && _this$state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.render(this.props.componentProps || this.state);\n    }\n\n    return this.props.children;\n  }\n\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridLogger } from '../../hooks/utils/useGridLogger';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { ErrorBoundary } from '../ErrorBoundary';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridErrorHandler(props) {\n  const {\n    children\n  } = props;\n  const apiRef = useGridApiContext();\n  const logger = useGridLogger(apiRef, 'GridErrorHandler');\n  const rootProps = useGridRootProps();\n  const error = apiRef.current.state.error;\n  return /*#__PURE__*/_jsx(ErrorBoundary, {\n    hasError: error != null,\n    componentProps: error,\n    api: apiRef,\n    logger: logger,\n    render: errorProps => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(GridMainContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.components.ErrorOverlay, _extends({}, errorProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.errorOverlay))\n      });\n    },\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridErrorHandler.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node\n} : void 0;\nexport { GridErrorHandler };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridHeaderPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerRef = React.useRef(null);\n  apiRef.current.headerRef = headerRef;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: headerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Header, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.header))\n  });\n}","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n *\n * TODO replace with https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n * once browser support allows it.\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  var resetTriggers = function resetTriggers(element) {\n    var triggers = element.__resizeTriggers__,\n        expand = triggers.firstElementChild,\n        contract = triggers.lastElementChild,\n        expandChild = expand.firstElementChild;\n    contract.scrollLeft = contract.scrollWidth;\n    contract.scrollTop = contract.scrollHeight;\n    expandChild.style.width = expand.offsetWidth + 1 + 'px';\n    expandChild.style.height = expand.offsetHeight + 1 + 'px';\n    expand.scrollLeft = expand.scrollWidth;\n    expand.scrollTop = expand.scrollHeight;\n  };\n\n  var checkTriggers = function checkTriggers(element) {\n    return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n  };\n\n  var scrollListener = function scrollListener(e) {\n    // Don't measure (which forces) reflow for scrolls that happen inside of children!\n    if (e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n      return;\n    }\n\n    var element = this;\n    resetTriggers(this);\n\n    if (this.__resizeRAF__) {\n      hostWindow.cancelAnimationFrame(this.__resizeRAF__);\n    }\n\n    this.__resizeRAF__ = hostWindow.requestAnimationFrame(function () {\n      if (checkTriggers(element)) {\n        element.__resizeLast__.width = element.offsetWidth;\n        element.__resizeLast__.height = element.offsetHeight;\n\n        element.__resizeListeners__.forEach(function (fn) {\n          fn.call(element, e);\n        });\n      }\n    });\n  };\n  /* Detect CSS Animations support to detect element display/re-attach */\n\n\n  var animation = false,\n      keyframeprefix = '',\n      animationstartevent = 'animationstart',\n      domPrefixes = 'Webkit Moz O ms'.split(' '),\n      startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n      pfx = '';\n  {\n    var elm = document.createElement('fakeelement');\n\n    if (elm.style.animationName !== undefined) {\n      animation = true;\n    }\n\n    if (animation === false) {\n      for (var i = 0; i < domPrefixes.length; i++) {\n        if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n          pfx = domPrefixes[i];\n          keyframeprefix = '-' + pfx.toLowerCase() + '-';\n          animationstartevent = startEvents[i];\n          animation = true;\n          break;\n        }\n      }\n    }\n  }\n  var animationName = 'resizeanim';\n  var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n  var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('muiDetectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.Mui-resizeTriggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.Mui-resizeTriggers, .Mui-resizeTriggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .Mui-resizeTriggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'muiDetectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (!element.__resizeTriggers__) {\n      var doc = element.ownerDocument;\n      var elementStyle = hostWindow.getComputedStyle(element);\n\n      if (elementStyle && elementStyle.position == 'static') {\n        element.style.position = 'relative';\n      }\n\n      createStyles(doc);\n      element.__resizeLast__ = {};\n      element.__resizeListeners__ = [];\n      (element.__resizeTriggers__ = doc.createElement('div')).className = 'Mui-resizeTriggers';\n      element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n      element.appendChild(element.__resizeTriggers__);\n      resetTriggers(element);\n      element.addEventListener('scroll', scrollListener, true);\n      /* Listen for a css animation to detect element display/re-attach */\n\n      if (animationstartevent) {\n        element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n          if (e.animationName == animationName) {\n            resetTriggers(element);\n          }\n        };\n\n        element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n      }\n    }\n\n    element.__resizeListeners__.push(fn);\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n    if (!element.__resizeListeners__.length) {\n      element.removeEventListener('scroll', scrollListener, true);\n\n      if (element.__resizeTriggers__.__animationListener__) {\n        element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n        element.__resizeTriggers__.__animationListener__ = null;\n      }\n\n      try {\n        element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n      } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n      }\n    }\n  };\n\n  return {\n    addResizeListener,\n    removeResizeListener\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"defaultHeight\", \"defaultWidth\", \"disableHeight\", \"disableWidth\", \"nonce\", \"onResize\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForkRef, ownerWindow, useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport createDetectElementResize from '../lib/createDetectElementResize'; // TODO replace with https://caniuse.com/resizeobserver.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridAutoSizer = /*#__PURE__*/React.forwardRef(function AutoSizer(props, ref) {\n  const {\n    children,\n    defaultHeight = null,\n    defaultWidth = null,\n    disableHeight = false,\n    disableWidth = false,\n    nonce,\n    onResize,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [state, setState] = React.useState({\n    height: defaultHeight,\n    width: defaultWidth\n  });\n  const rootRef = React.useRef(null);\n  const parentElement = React.useRef(null);\n  const handleResize = useEventCallback(() => {\n    // Guard against AutoSizer component being removed from the DOM immediately after being added.\n    // This can result in invalid style values which can result in NaN values if we don't handle them.\n    // See issue #150 for more context.\n    if (parentElement.current) {\n      const height = parentElement.current.offsetHeight || 0;\n      const width = parentElement.current.offsetWidth || 0;\n      const win = ownerWindow(parentElement.current);\n      const computedStyle = win.getComputedStyle(parentElement.current);\n      const paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n      const paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n      const paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n      const paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n      const newHeight = height - paddingTop - paddingBottom;\n      const newWidth = width - paddingLeft - paddingRight;\n\n      if (!disableHeight && state.height !== newHeight || !disableWidth && state.width !== newWidth) {\n        setState({\n          height: newHeight,\n          width: newWidth\n        });\n\n        if (onResize) {\n          onResize({\n            height: newHeight,\n            width: newWidth\n          });\n        }\n      }\n    }\n  });\n  useEnhancedEffect(() => {\n    var _parentElement$curren;\n\n    parentElement.current = rootRef.current.parentElement;\n\n    if (!parentElement) {\n      return undefined;\n    }\n\n    const win = ownerWindow((_parentElement$curren = parentElement.current) != null ? _parentElement$curren : undefined);\n    const detectElementResize = createDetectElementResize(nonce, win);\n    detectElementResize.addResizeListener(parentElement.current, handleResize);\n    handleResize();\n    return () => {\n      detectElementResize.removeResizeListener(parentElement.current, handleResize);\n    };\n  }, [nonce, handleResize]); // Outer div should not force width/height since that may prevent containers from shrinking.\n  // Inner component should overflow and use calculated width/height.\n  // See issue #68 for more information.\n\n  const outerStyle = {\n    overflow: 'visible'\n  };\n  const childParams = {};\n\n  if (!disableHeight) {\n    outerStyle.height = 0;\n    childParams.height = state.height;\n  }\n\n  if (!disableWidth) {\n    outerStyle.width = 0;\n    childParams.width = state.width;\n  }\n\n  const handleRef = useForkRef(rootRef, ref);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    style: _extends({}, outerStyle, style)\n  }, other, {\n    children: state.height === null && state.width === null ? null : children(childParams)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridAutoSizer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Default height to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * Default width to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultWidth: PropTypes.number,\n\n  /**\n   * If `true`, disable dynamic :height property.\n   * @default false\n   */\n  disableHeight: PropTypes.bool,\n\n  /**\n   * If `true`, disable dynamic :width property.\n   * @default false\n   */\n  disableWidth: PropTypes.bool,\n\n  /**\n   * Nonce of the inlined stylesheet for Content Security Policy.\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback to be invoked on-resize.\n   * @param {AutoSizerSize} size The grid's size.\n   */\n  onResize: PropTypes.func\n} : void 0;\nexport { GridAutoSizer };","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\n\nexport const gridSortingStateSelector = state => state.sorting;\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowEntriesSelector = createSelector(gridSortedRowIdsSelector, gridRowsLookupSelector, (sortedIds, idRowsLookup) => sortedIds.map(id => ({\n  id,\n  model: idRowsLookup[id]\n})));\n/**\n * Get the current sorting model.\n * @category Sorting\n */\n\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelector(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Filtering\n */\n\nexport const gridFilterStateSelector = state => state.filter;\n/**\n * Get the current filter model.\n * @category Filtering\n */\n\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridVisibleRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.visibleRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowEntriesSelector = createSelector(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowIdsSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowEntriesSelector = createSelector(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowIdsSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n/**\n * @category Filtering\n * @deprecated Use `gridVisibleSortedRowIdsSelector` instead\n * @ignore - do not document.\n * TODO: Add deprecation warning once we have the new selectors without the \"visible\" keyword.\n */\n\nexport const gridVisibleRowsSelector = gridVisibleSortedRowIdsSelector;\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleSortedTopLevelRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridRowTreeSelector, gridRowTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n\n  return visibleSortedRows.filter(row => {\n    var _rowTree$row$id;\n\n    return ((_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth) === 0;\n  });\n});\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleRowCountSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleTopLevelRowCountSelector = createSelector(gridVisibleSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilterActiveItemsSelector = createSelector(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => {\n  var _filterModel$items;\n\n  return (_filterModel$items = filterModel.items) == null ? void 0 : _filterModel$items.filter(item => {\n    var _column$filterOperato, _item$value;\n\n    if (!item.columnField) {\n      return false;\n    }\n\n    const column = columnLookup[item.columnField];\n\n    if (!(column != null && column.filterOperators) || (column == null ? void 0 : (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.length) === 0) {\n      return false;\n    }\n\n    const filterOperator = column.filterOperators.find(operator => operator.value === item.operatorValue);\n\n    if (!filterOperator) {\n      return false;\n    }\n\n    return !filterOperator.InputComponent || item.value != null && ((_item$value = item.value) == null ? void 0 : _item$value.toString()) !== '';\n  });\n});\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelector(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.columnField]) {\n      res[filterItem.columnField] = [filterItem];\n    } else {\n      res[filterItem.columnField].push(filterItem);\n    }\n\n    return res;\n  }, {});\n  return result;\n});","import { createSelector } from '../../../utils/createSelector';\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityValueSelector = createSelector(gridDensitySelector, density => density.value);\nexport const gridDensityRowHeightSelector = createSelector(gridDensitySelector, density => density.rowHeight);\nexport const gridDensityHeaderHeightSelector = createSelector(gridDensitySelector, density => density.headerHeight);\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => density.factor);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridVisibleRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n\n  if (rootProps.autoHeight && height === 0) {\n    height = 'auto';\n  }\n\n  if (!viewportInnerSize) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    style: {\n      height,\n      width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0,\n      position: 'absolute',\n      top: headerHeight,\n      bottom: height === 'auto' ? 0 : undefined\n    }\n  }, props));\n}\n\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridVisibleRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n\n  if (showNoRowsOverlay) {\n    var _rootProps$components;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoRowsOverlay, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.noRowsOverlay));\n  }\n\n  if (showNoResultsOverlay) {\n    var _rootProps$components2;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoResultsOverlay, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.noResultsOverlay));\n  }\n\n  if (rootProps.loading) {\n    var _rootProps$components3;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.LoadingOverlay, _extends({}, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.loadingOverlay));\n  }\n\n  if (overlay === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent('resize', size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - headerHeight : 'auto',\n          marginTop: headerHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const footerRef = React.useRef(null);\n  apiRef.current.footerRef = footerRef;\n\n  if (rootProps.hideFooter) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: footerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Footer, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.footer))\n  });\n}","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridContextProvider = ({\n  apiRef,\n  props,\n  children\n}) => {\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n      value: apiRef,\n      children: children\n    })\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\n\nconst noop = () => {};\n\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\n\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n\n    return loggerObj;\n  }, {});\n  return logger;\n}\n\nexport const useGridLoggerFactory = (apiRef, props) => {\n  apiRef.current.getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n};","import * as React from 'react';\nexport function useGridApiMethod(apiRef, apiMethods, // TODO: Remove `apiName\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\napiName) {\n  const apiMethodsRef = React.useRef(apiMethods);\n  const [apiMethodsNames] = React.useState(Object.keys(apiMethods));\n  const installMethods = React.useCallback(() => {\n    if (!apiRef.current) {\n      return;\n    }\n\n    apiMethodsNames.forEach(methodName => {\n      if (!apiRef.current.hasOwnProperty(methodName)) {\n        apiRef.current[methodName] = (...args) => apiMethodsRef.current[methodName](...args);\n      }\n    });\n  }, [apiMethodsNames, apiRef]);\n  React.useEffect(() => {\n    apiMethodsRef.current = apiMethods;\n  }, [apiMethods]);\n  React.useEffect(() => {\n    installMethods();\n  }, [installMethods]);\n  installMethods();\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature;\n\n(function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n})(GridSignature || (GridSignature = {}));\n\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {} // Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\n\n\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          var _handlerRef$current;\n\n          (_handlerRef$current = handlerRef.current) == null ? void 0 : _handlerRef$current.call(handlerRef, params, event, details);\n        }\n      };\n\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact, // The callback below will be called once this reference stops being retained\n      () => {\n        var _subscription$current;\n\n        (_subscription$current = subscription.current) == null ? void 0 : _subscription$current.call(subscription);\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            var _handlerRef$current2;\n\n            (_handlerRef$current2 = handlerRef.current) == null ? void 0 : _handlerRef$current2.call(handlerRef, params, event, details);\n          }\n        };\n\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n\n      return () => {\n        var _subscription$current2;\n\n        (_subscription$current2 = subscription.current) == null ? void 0 : _subscription$current2.call(subscription);\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n}; // TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCleanupTracking = () => {\n  var _registryContainer$re;\n\n  (_registryContainer$re = registryContainer.registry) == null ? void 0 : _registryContainer$re.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  reset() {}\n\n}","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 10;\n    this.warnOnce = false;\n    this.events = {};\n  }\n\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`, `Use emitter.setMaxListeners() to increase limit.`].join('\\n'));\n      }\n    }\n  }\n\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n\n  removeAllListeners() {\n    this.events = {};\n  }\n\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n\n    if (!collection) {\n      return;\n    }\n\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\n\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\n\nlet globalId = 0;\nexport function useGridApiInitialization(inputApiRef, props) {\n  const apiRef = React.useRef();\n\n  if (!apiRef.current) {\n    apiRef.current = {\n      unstable_eventManager: new EventManager(),\n      unstable_caches: {},\n      state: {},\n      instanceId: globalId\n    };\n    globalId += 1;\n  }\n\n  React.useImperativeHandle(inputApiRef, () => apiRef.current, [apiRef]);\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: apiRef.current\n    } : {};\n    apiRef.current.unstable_eventManager.emit(name, params, event, details);\n  }, [apiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    apiRef.current.unstable_eventManager.on(event, handler, options);\n    const api = apiRef.current;\n    return () => {\n      api.unstable_eventManager.removeListener(event, handler);\n    };\n  }, [apiRef]);\n  const showError = React.useCallback(args => {\n    apiRef.current.publishEvent('componentError', args);\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    subscribeEvent,\n    publishEvent,\n    showError\n  }, 'GridCoreApi');\n  React.useEffect(() => {\n    const api = apiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [apiRef]);\n  return apiRef;\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n\n    return props.localeText[key];\n  }, [props.localeText]);\n  const localeTextApi = {\n    getLocaleText\n  };\n  useGridApiMethod(apiRef, localeTextApi, 'LocaleTextApi');\n};","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.unstable_requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.unstable_requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const runAppliers = React.useCallback(groupCache => {\n    if (!groupCache) {\n      return;\n    }\n\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: {},\n        appliers: {}\n      };\n    }\n\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors[id];\n\n    if (oldProcessor !== processor) {\n      groupCache.processors[id] = processor;\n      runAppliers(groupCache);\n    }\n\n    return () => {\n      const _processors = processorsCache.current[group].processors,\n            otherProcessors = _objectWithoutPropertiesLoose(_processors, [id].map(_toPropertyKey));\n\n      processorsCache.current[group].processors = otherProcessors;\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: {},\n        appliers: {}\n      };\n    }\n\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n            otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n\n    const preProcessors = Object.values(processorsCache.current[group].processors);\n    return preProcessors.reduce((acc, preProcessor) => {\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingApi = {\n    unstable_registerPipeProcessor: registerPipeProcessor,\n    unstable_registerPipeApplier: registerPipeApplier,\n    unstable_requestPipeProcessorsApplication: requestPipeProcessorsApplication,\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingApi, 'GridPipeProcessingApi');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree'\n};\n\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.unstable_setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.unstable_applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n            otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n\n    if (strategyName === apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n\n    const groupCache = strategiesCache.current[processorName];\n\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    var _availableStrategyEnt;\n\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n\n      return strategy.isAvailable();\n    });\n    return (_availableStrategyEnt = availableStrategyEntry == null ? void 0 : availableStrategyEntry[0]) != null ? _availableStrategyEnt : GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    unstable_registerStrategyProcessor: registerStrategyProcessor,\n    unstable_applyStrategyProcessor: applyStrategyProcessor,\n    unstable_getActiveStrategy: getActiveStrategy,\n    unstable_setStrategyAvailability: setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'GridStrategyProcessing');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"stateId\"];\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const updateControlState = React.useCallback(controlStateItem => {\n    const {\n      stateId\n    } = controlStateItem,\n          others = _objectWithoutPropertiesLoose(controlStateItem, _excluded);\n\n    controlStateMapRef.current[stateId] = _extends({}, others, {\n      stateId\n    });\n  }, []);\n  const setState = React.useCallback(state => {\n    let newState;\n\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n\n    let ignoreSetState = false; // Apply the control state constraints\n\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (newSubState === oldSubState) {\n        return;\n      }\n\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      }); // The state is controlled, the prop should always win\n\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n    }\n\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current\n        } : {};\n        controlState.propOnChange(model, details);\n      }\n\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model);\n      }\n    }\n\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const stateApi = {\n    setState,\n    forceUpdate,\n    unstable_updateControlState: updateControlState\n  };\n  useGridApiMethod(apiRef, stateApi, 'GridStateApi');\n};","import { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridErrorHandler } from './useGridErrorHandler';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\n\nexport const useGridInitialization = (inputApiRef, props) => {\n  const apiRef = useGridApiInitialization(inputApiRef, props);\n  useGridLoggerFactory(apiRef, props);\n  useGridErrorHandler(apiRef, props);\n  useGridStateInitialization(apiRef, props);\n  useGridPipeProcessing(apiRef);\n  useGridStrategyProcessing(apiRef);\n  useGridLocaleText(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../utils/useGridApiEventHandler';\nexport function useGridErrorHandler(apiRef, props) {\n  const handleError = React.useCallback(args => {\n    // We are handling error here, to set up the handler as early as possible and be able to catch error thrown at init time.\n    apiRef.current.setState(state => _extends({}, state, {\n      error: args\n    }));\n  }, [apiRef]);\n  React.useEffect(() => {\n    handleError(props.error);\n  }, [handleError, props.error]);\n  useGridApiEventHandler(apiRef, 'componentError', handleError);\n}","import * as React from 'react';\nexport const useGridInitializeState = (initializer, apiRef, props) => {\n  const isInitialized = React.useRef(false);\n\n  if (!isInitialized.current) {\n    apiRef.current.state = initializer(apiRef.current.state, props, apiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nimport { useGridApiMethod, useGridNativeEventListener } from '../../utils';\n\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\n\n\nexport const useGridClipboard = apiRef => {\n  const copySelectedRowsToClipboard = React.useCallback((includeHeaders = false) => {\n    if (apiRef.current.getSelectedRows().size === 0) {\n      return;\n    }\n\n    const data = apiRef.current.getDataAsCsv({\n      includeHeaders,\n      delimiter: '\\t'\n    });\n\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(data).catch(() => {\n        writeToClipboardPolyfill(data);\n      });\n    } else {\n      writeToClipboardPolyfill(data);\n    }\n  }, [apiRef]);\n  const handleKeydown = React.useCallback(event => {\n    var _window$getSelection;\n\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey; // event.key === 'c' is not enough as alt+c can lead to ©, ç, or other characters on macOS.\n    // event.code === 'KeyC' is not enough as event.code assume a QWERTY keyboard layout which would\n    // be wrong with a Dvorak keyboard (as if pressing J).\n\n    if (String.fromCharCode(event.keyCode) !== 'C' || !isModifierKeyPressed) {\n      return;\n    } // Do nothing if there's a native selection\n\n\n    if (((_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.toString()) !== '') {\n      return;\n    }\n\n    apiRef.current.unstable_copySelectedRowsToClipboard(event.altKey);\n  }, [apiRef]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleKeydown);\n  const clipboardApi = {\n    unstable_copySelectedRowsToClipboard: copySelectedRowsToClipboard\n  };\n  useGridApiMethod(apiRef, clipboardApi, 'GridClipboardApi');\n};","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(args => {\n    return handlerRef.current && handlerRef.current(args);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n\n    if (targetElement && wrapHandler && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\n\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n  /**\n   * API METHODS\n   */\n\n  const showColumnMenu = React.useCallback(field => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (state.columnMenu.open && state.columnMenu.field === field) {\n        return state;\n      }\n\n      logger.debug('Opening Column Menu');\n      return _extends({}, state, {\n        columnMenu: {\n          open: true,\n          field\n        }\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (!state.columnMenu.open && state.columnMenu.field === undefined) {\n        return state;\n      }\n\n      logger.debug('Hiding Column Menu');\n      return _extends({}, state, {\n        columnMenu: _extends({}, state.columnMenu, {\n          open: false,\n          field: undefined\n        })\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'GridColumnMenuApi');\n  /**\n   * EVENTS\n   */\n\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","export function getValueFromOption(option) {\n  if (typeof option === 'object' && option !== null) {\n    return option.value;\n  }\n\n  return option;\n}\nexport function getValueFromValueOptions(value, valueOptions) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n\n  const result = valueOptions.find(option => {\n    const optionValue = getValueFromOption(option);\n    return String(optionValue) === String(value);\n  });\n  return getValueFromOption(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst warnedOnce = {};\n\nfunction warnDeprecatedTypeSupport(type) {\n  console.warn([`MUI: Using GridFilterInputValue with a \"${type}\" column is deprecated.`, 'Use GridFilterInputSingleSelect instead.'].join('\\n'));\n  warnedOnce[type] = true;\n}\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nexport const SUBMIT_FILTER_STROKE_TIME = 500;\n\nfunction GridFilterInputValue(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  if (process.env.NODE_ENV !== 'production' && ['date', 'datetime-local', 'singleSelect'].includes(type) && !warnedOnce[type]) {\n    warnDeprecatedTypeSupport(type);\n  }\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const singleSelectProps = type === 'singleSelect' ? {\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  } : {};\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    if (type === 'singleSelect') {\n      const column = apiRef.current.getColumn(item.columnField);\n      const columnValueOptions = typeof column.valueOptions === 'function' ? column.valueOptions({\n        field: column.field\n      }) : column.valueOptions;\n      value = getValueFromValueOptions(value, columnValueOptions);\n    }\n\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true); // TODO singleSelect doesn't debounce\n\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_STROKE_TIME);\n  }, [apiRef, applyValue, item, type]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  const InputProps = applying ? {\n    endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n  } : others.InputProps;\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    type: type || 'text',\n    variant: \"standard\",\n    InputProps: InputProps,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, singleSelectProps, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.any.isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridLoadIcon } from '../icons/index';\nimport { SUBMIT_FILTER_STROKE_TIME } from '../panel/filterPanel/GridFilterInputValue';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\n\nfunction GridEditInputCell(props) {\n  var _rootProps$experiment;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    id,\n    value,\n    api,\n    field,\n    colDef,\n    hasFocus,\n    debounceMs = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi ? 200 : SUBMIT_FILTER_STROKE_TIME,\n    isProcessingProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    setValueState(newValue);\n    api.setEditCellValue({\n      id,\n      field,\n      value: newValue,\n      debounceMs\n    }, event);\n  }, [api, debounceMs, field, id, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    inputRef: inputRef,\n    className: classes.root,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState != null ? valueState : '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(GridLoadIcon, {}) : undefined\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    sortModelDisableMultiColumnsSortingWarning();\n    return [model[0]];\n  }\n\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\n\nconst isDesc = direction => direction === 'desc';\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\n\n\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n\n  if (!column) {\n    return null;\n  }\n\n  const comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridSortCellParams} row1Params The params of the 1st row for each sort item.\n * @param {GridSortCellParams} row2Params The params of the 2nd row for each sort item.\n */\n\n\nconst compareRows = (parsedSortItems, row1Params, row2Params) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n\n    const sortCellParams1 = row1Params[index];\n    const sortCellParams2 = row2Params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\n\n\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n\n  if (comparatorList.length === 0) {\n    return null;\n  }\n\n  return rowList => rowList.map(value => ({\n    value,\n    params: comparatorList.map(el => el.getSortCellParams(value.id))\n  })).sort((a, b) => compareRows(comparatorList, a.params, b.params)).map(row => row.value.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n\n  return sortingOrder[currentIdx + 1];\n};\n\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n\n  return null;\n};\n\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (value1 > value2) {\n    return 1;\n  }\n\n  if (value1 < value2) {\n    return -1;\n  }\n\n  return 0;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport TextField from '@mui/material/TextField';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridFilterInputMultipleValue(props) {\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  React.useEffect(() => {\n    var _item$value;\n\n    const itemValue = (_item$value = item.value) != null ? _item$value : [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    limitTags: 1,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(TextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text',\n      variant: \"standard\"\n    }))\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.any.isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = () => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterRegex = new RegExp(escapeRegExp(filterItem.value), 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => {\n      return value != null ? collator.compare(filterItem.value, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItem.value)}.*$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItem.value)}$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value === '' || value == null;\n    };\n  }\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value !== '' && value != null;\n    };\n  }\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => value != null ? filterItem.value.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hide: false,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { wrapWithWarningOnCall } from '../utils/warning';\n\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n\n  return Number(value);\n};\n\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  label: '=',\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '!=',\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>',\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>=',\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<',\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<=',\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  }\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  }\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];\n/**\n * @deprecated Use `getGridNumericOperators` instead.\n */\n\nexport const getGridNumericColumnOperators = wrapWithWarningOnCall(getGridNumericOperators, ['MUI: The method getGridNumericColumnOperators is deprecated and will be removed in the next major version.', 'Use getGridNumericOperators instead.']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: ({\n    value\n  }) => value && isNumber(value) && value.toLocaleString() || value,\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SUBMIT_FILTER_DATE_STROKE_TIME = 500;\n\nfunction GridFilterInputDate(props) {\n  var _item$value, _rootProps$components;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef,\n    InputProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_DATE_STROKE_TIME);\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    type: type || 'text',\n    variant: \"standard\",\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying ? {\n      endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n    } : {}, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31'\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    })\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.any.isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nconst dateRegex = /(\\d+)-(\\d+)-(\\d+)/;\nconst dateTimeRegex = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+)/;\n\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n\n  const [year, month, day, hour, minute] = filterItem.value.match(showTime ? dateTimeRegex : dateRegex).slice(1).map(Number);\n  const time = new Date(year, month - 1, day, hour || 0, minute || 0).getTime();\n  return ({\n    value\n  }) => {\n    if (!value) {\n      return false;\n    }\n\n    const valueAsDate = value instanceof Date ? value : new Date(value.toString());\n\n    if (keepHours) {\n      return compareFn(valueAsDate.getTime(), time);\n    } // Make a copy of the date to not reset the hours in the original object\n\n\n    const dateCopy = value instanceof Date ? new Date(valueAsDate) : valueAsDate;\n    const timeToCompare = dateCopy.setHours(showTime ? valueAsDate.getHours() : 0, showTime ? valueAsDate.getMinutes() : 0, 0, 0);\n    return compareFn(timeToCompare, time);\n  };\n}\n\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  }\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditDateCell(props) {\n  const {\n    id,\n    value: valueProp,\n    api,\n    field,\n    colDef,\n    hasFocus,\n    inputProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isDateTime = colDef.type === 'dateTime';\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp != null ? valueProp : '').toString());\n    }\n\n    let formattedDate;\n\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    let newParsedDate;\n\n    if (newFormattedDate === '') {\n      newParsedDate = null;\n    } else {\n      const [date, time] = newFormattedDate.split('T');\n      const [year, month, day] = date.split('-');\n      newParsedDate = new Date();\n      newParsedDate.setFullYear(year, Number(month) - 1, day);\n      newParsedDate.setHours(0, 0, 0, 0);\n\n      if (time) {\n        const [hours, minutes] = time.split(':');\n        newParsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n      }\n    }\n\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    api.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [api, field, id, onValueChange]);\n  React.useEffect(() => {\n    setValueState(state => {\n      var _valueTransformed$par, _state$parsed;\n\n      if (valueTransformed.parsed !== state.parsed && ((_valueTransformed$par = valueTransformed.parsed) == null ? void 0 : _valueTransformed$par.getTime()) !== ((_state$parsed = state.parsed) == null ? void 0 : _state$parsed.getTime())) {\n        return valueTransformed;\n      }\n\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(InputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nexport function gridDateFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleDateString();\n  }\n\n  return value != null ? value : '';\n}\nexport function gridDateTimeFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleString();\n  }\n\n  return value != null ? value : '';\n}\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"getValue\"];\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport const GridBooleanCell = /*#__PURE__*/React.memo(props => {\n  const {\n    value,\n    api\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.components.BooleanCellTrueIcon : rootProps.components.BooleanCellFalseIcon, [rootProps.components.BooleanCellFalseIcon, rootProps.components.BooleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: api.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n});\nexport const renderBooleanCell = params => {\n  if (params.rowNode.isAutoGenerated) {\n    return '';\n  }\n\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditBooleanCell(props) {\n  var _rootProps$components;\n\n  const {\n    id: idProp,\n    value,\n    api,\n    field,\n    className,\n    hasFocus,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    setValueState(newValue);\n    await api.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [api, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridFilterInputBoolean(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isSelectNative ? 'option' : MenuItem;\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  return /*#__PURE__*/_jsxs(rootProps.components.BaseTextField, _extends({\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative,\n      displayEmpty: true\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: [/*#__PURE__*/_jsx(OptionComponent, {\n      value: \"\",\n      children: apiRef.current.getLocaleText('filterValueAny')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"true\",\n      children: apiRef.current.getLocaleText('filterValueTrue')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"false\",\n      children: apiRef.current.getLocaleText('filterValueFalse')\n    })]\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\n\nfunction gridBooleanFormatter({\n  value,\n  api\n}) {\n  return value ? api.getLocaleText('booleanCellTrueLabel') : api.getLocaleText('booleanCellFalseLabel');\n}\n\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined\n});","// TODO v6: rename to GridEditingState\nvar GridEditModes;\n\n(function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n})(GridEditModes || (GridEditModes = {}));\n\nvar GridCellModes;\n\n(function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n})(GridCellModes || (GridCellModes = {}));\n\nvar GridRowModes;\n\n(function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n})(GridRowModes || (GridRowModes = {}));\n\nexport { GridEditModes, GridCellModes, GridRowModes };","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const valueAsBoolean = filterItem.value === 'true';\n    return ({\n      value\n    }) => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","export const isEscapeKey = key => key === 'Escape'; // TODO remove\n\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\n\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace';\nconst printableCharRegex = /^(\\p{L}|\\p{M}\\p{L}|\\p{M}|\\p{N}|\\p{Z}|\\p{S}|\\p{P})$/iu;\nexport const isPrintableKey = key => printableCharRegex.test(key);\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = key => isEnterKey(key) || isDeleteKeys(key) || isPrintableKey(key);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions } from '../panel/filterPanel/filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = (option, OptionComponent) => {\n  const isOptionTypeObject = typeof option === 'object';\n  const key = isOptionTypeObject ? option.value : option;\n  const value = isOptionTypeObject ? option.value : option;\n  const content = isOptionTypeObject ? option.label : option;\n  return /*#__PURE__*/_jsx(OptionComponent, {\n    value: value,\n    children: content\n  }, key);\n};\n\nfunction GridEditSingleSelectCell(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2;\n\n  const {\n    id,\n    value,\n    api,\n    field,\n    row,\n    colDef,\n    hasFocus,\n    error,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const rootProps = useGridRootProps();\n  const [open, setOpen] = React.useState(rootProps.editMode === 'cell');\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : false;\n  let valueOptionsFormatted;\n\n  if (typeof colDef.valueOptions === 'function') {\n    valueOptionsFormatted = colDef.valueOptions({\n      id,\n      row,\n      field\n    });\n  } else {\n    valueOptionsFormatted = colDef.valueOptions;\n  }\n\n  if (colDef.valueFormatter) {\n    valueOptionsFormatted = valueOptionsFormatted.map(option => {\n      if (typeof option === 'object') {\n        return option;\n      }\n\n      const params = {\n        field,\n        api,\n        value: option\n      };\n      return {\n        value: option,\n        label: String(colDef.valueFormatter(params))\n      };\n    });\n  }\n\n  const handleChange = async event => {\n    var _rootProps$experiment;\n\n    setOpen(false);\n    const target = event.target; // NativeSelect casts the value to a string.\n\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptionsFormatted);\n\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n\n    const isValid = await api.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n\n    if ((_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi) {\n      return;\n    } // We use isValid === false because the default return is undefined which evaluates to true with !isValid\n\n\n    if (rootProps.editMode === GridEditModes.Row || isValid === false) {\n      return;\n    }\n\n    const canCommit = await Promise.resolve(api.commitCellChange({\n      id,\n      field\n    }, event));\n\n    if (canCommit) {\n      api.setCellMode(id, field, 'view');\n\n      if (event.key) {\n        // TODO v6: remove once we stop ignoring events fired from portals\n        const params = api.getCellParams(id, field);\n        api.publishEvent('cellNavigationKeyDown', params, event);\n      }\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      var _rootProps$experiment2;\n\n      if ((_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.newEditingApi) {\n        api.stopCellEditMode({\n          id,\n          field,\n          ignoreModifications: true\n        });\n      } else {\n        api.setCellMode(id, field, 'view');\n      }\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: value,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: {\n      onClose: handleClose\n    },\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect, {\n    children: valueOptionsFormatted.map(valueOptions => renderSingleSelectOptions(valueOptions, isSelectNative ? 'option' : MenuItem))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentValueOptions = React.useMemo(() => {\n    return typeof currentColumn.valueOptions === 'function' ? currentColumn.valueOptions({\n      field: currentColumn.field\n    }) : currentColumn.valueOptions;\n  }, [currentColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    value = getValueFromValueOptions(value, currentValueOptions);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item, currentValueOptions]);\n  React.useEffect(() => {\n    var _itemValue;\n\n    let itemValue;\n\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions);\n\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    type: type || 'text',\n    variant: \"standard\",\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect)\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.any.isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport TextField from '@mui/material/TextField';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { getValueFromOption } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst isOptionEqualToValue = (option, value) => getValueFromOption(option) === getValueFromOption(value);\n\nconst filter = createFilterOptions();\n\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const id = useId();\n  const resolvedColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const resolvedValueOptions = React.useMemo(() => {\n    return typeof (resolvedColumn == null ? void 0 : resolvedColumn.valueOptions) === 'function' ? resolvedColumn.valueOptions({\n      field: resolvedColumn.field\n    }) : resolvedColumn == null ? void 0 : resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const resolvedFormattedValueOptions = React.useMemo(() => {\n    return resolvedValueOptions == null ? void 0 : resolvedValueOptions.map(getValueFromOption);\n  }, [resolvedValueOptions]);\n  const {\n    valueFormatter,\n    field\n  } = apiRef.current.getColumn(item.columnField);\n\n  const filterValueOptionFormatter = option => {\n    if (typeof option === 'object') {\n      return option.label;\n    }\n\n    return valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api: apiRef.current\n    }) : option;\n  }; // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n\n\n  const filterValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n\n    if (resolvedValueOptions !== undefined) {\n      const itemValueIndexes = item.value.map(element => {\n        // get the index matching between values and valueoptions\n        const formattedElement = getValueFromOption(element);\n        const index = (resolvedFormattedValueOptions == null ? void 0 : resolvedFormattedValueOptions.findIndex(formatedOption => formatedOption === formattedElement)) || 0;\n        return index;\n      });\n      return itemValueIndexes.filter(index => index >= 0).map(index => resolvedValueOptions[index]);\n    }\n\n    return item.value;\n  }, [item.value, resolvedValueOptions, resolvedFormattedValueOptions]);\n  React.useEffect(() => {\n    if (!Array.isArray(item.value) || filterValues.length !== item.value.length) {\n      // update the state if the filter value has been cleaned by the component\n      applyValue(_extends({}, item, {\n        value: filterValues.map(getValueFromOption)\n      }));\n    }\n  }, [item, filterValues, applyValue]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: [...value.map(getValueFromOption)]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: false,\n    limitTags: 1,\n    options: resolvedValueOptions // TODO: avoid `any`?\n    ,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filterValues,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: filterValueOptionFormatter(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(TextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: 'singleSelect',\n      variant: \"standard\"\n    }))\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\n\nconst parseObjectValue = value => {\n  if (value == null || typeof value !== 'object') {\n    return value;\n  }\n\n  return value.value;\n};\n\nexport const getGridSingleSelectQuickFilterFn = (value, column, apiRef) => {\n  if (!value) {\n    return null;\n  }\n\n  const {\n    valueOptions,\n    valueFormatter,\n    field\n  } = column;\n  const potentialValues = [parseObjectValue(value).toString()];\n  const iterableColumnValues = typeof valueOptions === 'function' ? valueOptions({\n    field\n  }) : valueOptions || [];\n\n  if (iterableColumnValues) {\n    iterableColumnValues.forEach(option => {\n      // for each valueOption, check if the formatted value\n      let optionValue;\n      let optionLabel;\n\n      if (typeof option === 'object') {\n        optionValue = option.value;\n        optionLabel = option.label;\n      } else {\n        optionValue = option;\n\n        if (valueFormatter) {\n          optionLabel = valueFormatter({\n            value: option,\n            field,\n            api: apiRef.current\n          });\n        } else {\n          optionLabel = option;\n        }\n      }\n\n      if (optionLabel.slice(0, value.length).toLowerCase() === value.toLowerCase()) {\n        if (!potentialValues.includes(optionValue)) {\n          potentialValues.push(optionValue.toString());\n        }\n      }\n    });\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? potentialValues.includes(parseObjectValue(columnValue).toString()) : false;\n  };\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return ({\n      value\n    }) => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators, getGridSingleSelectQuickFilterFn } from './gridSingleSelectOperators';\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  getApplyQuickFilterFn: getGridSingleSelectQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClickAway\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { HTMLElementType } from '@mui/utils';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (props, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\n\nconst GridMenu = props => {\n  var _rootProps$components;\n\n  const {\n    open,\n    target,\n    onClickAway,\n    children,\n    position,\n    className,\n    onExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevTarget = React.useRef(target);\n  const prevOpen = React.useRef(open);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useEffect(() => {\n    if (prevOpen.current && prevTarget.current) {\n      prevTarget.current.focus();\n    }\n\n    prevOpen.current = open;\n    prevTarget.current = target;\n  }, [open, target]);\n\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.components.BasePopper,\n    className: clsx(className, classes.root),\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: onClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps == null ? void 0 : TransitionProps.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  onClickAway: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colDef\", \"id\", \"api\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"getValue\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport MenuList from '@mui/material/MenuList';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst hasActions = colDef => typeof colDef.getActions === 'function';\n\nconst GridActionsCell = props => {\n  const {\n    colDef,\n    id,\n    hasFocus,\n    tabIndex,\n    position = 'bottom-end',\n    focusElementRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref == null ? void 0 : ref.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus();\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        setFocusedButtonIndex(0);\n      }\n    }\n\n  }), []);\n\n  if (!hasActions(colDef)) {\n    throw new Error('MUI: Missing the `getActions` property in the `GridColDef`.');\n  }\n\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n\n  const hideMenu = () => {\n    setOpen(false);\n  };\n\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n\n    let newIndex = focusedButtonIndex;\n\n    if (event.key === 'ArrowRight') {\n      newIndex += 1;\n    } else if (event.key === 'ArrowLeft') {\n      newIndex -= 1;\n    }\n\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n\n      event.stopPropagation(); // Don't stop propagation for other keys, e.g. ArrowUp\n\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n\n    if (['Tab', 'Enter', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(IconButton, {\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-controls\": menuId,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1,\n      children: /*#__PURE__*/_jsx(rootProps.components.MoreActionsIcon, {\n        fontSize: \"small\"\n      })\n    }), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      onClickAway: hideMenu,\n      onClick: hideMenu,\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index\n        }))\n      })\n    })]\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  width: 100,\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = '__default__';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    [DEFAULT_GRID_COL_TYPE_KEY]: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nexport const computeColumnTypes = (customColumnTypes = {}) => {\n  const mergedColumnTypes = _extends({}, getGridDefaultColumnTypes());\n\n  Object.entries(customColumnTypes).forEach(([colType, colTypeDef]) => {\n    if (mergedColumnTypes[colType]) {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colType], colTypeDef);\n    } else {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colTypeDef.extendType || DEFAULT_GRID_COL_TYPE_KEY], colTypeDef);\n    }\n  });\n  return mergedColumnTypes;\n};\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\n\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  }; // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === flexColumns.length) {\n      return;\n    }\n\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0; // 5b: Calculate the remaining free space\n\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        // eslint-disable-next-line no-continue\n        continue;\n      } // 5c: Distribute remaining free space proportional to the flex factors\n\n\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex; // 5d: Fix min/max violations\n\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    } // 5e: Freeze over-flexed items\n\n\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    } // 5f: Return to the start of this loop\n\n\n    loopOverFlexItems();\n  }\n\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\n\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = []; // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n\n  rawState.all.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width, newColumn.minWidth, newColumn.maxWidth);\n      }\n\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0); // Allocate the remaining space to the flex columns\n\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\nlet columnTypeWarnedOnce = false;\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\n\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i]; // Ignores the fields in the initialState that matches no field on the current column state\n\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.all : [...cleanOrderedFields, ...columnsState.all.filter(field => !orderedFieldsLookup[field])];\n\n  const newColumnLookup = _extends({}, columnsState.lookup);\n\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n\n  const newColumnsState = {\n    all: newOrderedFields,\n    lookup: newColumnLookup\n  };\n  return newColumnsState;\n};\n/**\n * @deprecated Should have been internal only, you can inline the logic.\n */\n\nexport const getGridColDef = (columnTypes, type) => {\n  if (!type) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!columnTypeWarnedOnce && !columnTypes[type]) {\n      console.warn([`MUI: The column type \"${type}\" you are using is not supported.`, `Column type \"string\" is being used instead.`].join('\\n'));\n      columnTypeWarnedOnce = true;\n    }\n  }\n\n  if (!columnTypes[type]) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  return columnTypes[type];\n};\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnTypes,\n  currentColumnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  shouldRegenColumnVisibilityModelFromColumns,\n  keepOnlyColumnsToUpsert = false\n}) => {\n  var _apiRef$current$getRo, _apiRef$current$getRo2, _apiRef$current, _apiRef$current$getRo3;\n\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsStateWithoutColumnVisibilityModel;\n\n  if (isInsideStateInitializer) {\n    columnsStateWithoutColumnVisibilityModel = {\n      all: [],\n      lookup: {}\n    };\n  } else {\n    const currentState = gridColumnsSelector(apiRef.current.state);\n    columnsStateWithoutColumnVisibilityModel = {\n      all: keepOnlyColumnsToUpsert ? [] : [...currentState.all],\n      lookup: _extends({}, currentState.lookup) // Will be cleaned later if keepOnlyColumnsToUpsert=true\n\n    };\n  }\n\n  let columnsToKeep = {};\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsStateWithoutColumnVisibilityModel.lookup[field];\n\n    if (existingState == null) {\n      // New Column\n      existingState = _extends({}, getGridColDef(columnTypes, newColumn.type), {\n        // TODO v6: Inline `getGridColDef`\n        field,\n        hasBeenResized: false\n      });\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    }\n\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsStateWithoutColumnVisibilityModel.lookup[field] = _extends({}, existingState, {\n      hide: newColumn.hide == null ? false : newColumn.hide\n    }, newColumn, {\n      hasBeenResized\n    });\n  });\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsStateWithoutColumnVisibilityModel.lookup[field];\n      }\n    });\n  }\n\n  const columnsLookupBeforePreProcessing = _extends({}, columnsStateWithoutColumnVisibilityModel.lookup);\n\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsStateWithoutColumnVisibilityModel); // TODO v6: remove the sync between the columns `hide` option and the model.\n\n  let columnVisibilityModel = {};\n\n  if (shouldRegenColumnVisibilityModelFromColumns) {\n    let hasModelChanged = false;\n\n    const newColumnVisibilityModel = _extends({}, currentColumnVisibilityModel);\n\n    if (isInsideStateInitializer) {\n      columnsStateWithPreProcessing.all.forEach(field => {\n        newColumnVisibilityModel[field] = !columnsStateWithoutColumnVisibilityModel.lookup[field].hide;\n      });\n    } else if (keepOnlyColumnsToUpsert) {\n      // At this point, `keepOnlyColumnsToUpsert` has a new meaning: keep the columns\n      // passed via `columnToUpsert` + columns added by the pre-processors. We do the following\n      // cleanup because a given column may have been removed from the `columns` prop but it still\n      // exists in the state.\n      Object.keys(newColumnVisibilityModel).forEach(field => {\n        if (!columnsStateWithPreProcessing.lookup[field]) {\n          delete newColumnVisibilityModel[field];\n          hasModelChanged = true;\n        }\n      });\n    }\n\n    columnsStateWithPreProcessing.all.forEach(field => {\n      // If neither the `columnsToUpsert` nor the pre-processors updated the column,\n      // Then we don't want to update the visibility status of the column in the model.\n      if (!columnsToUpsertLookup[field] && columnsLookupBeforePreProcessing[field] === columnsStateWithPreProcessing.lookup[field]) {\n        return;\n      } // We always assume that a column not in the model is visible by default. However, there's an\n      // edge case where the column is not in the model but it also doesn't exist in the `columns`\n      // prop, meaning that the column is being added. In that case, we assume that the column was\n      // not visible before for it be added to the model.\n\n\n      let isVisibleBefore = currentColumnVisibilityModel[field];\n\n      if (isVisibleBefore === undefined) {\n        if (isInsideStateInitializer) {\n          isVisibleBefore = true;\n        } else {\n          const currentState = gridColumnsSelector(apiRef.current.state);\n          isVisibleBefore = !!currentState.lookup[field];\n        }\n      }\n\n      const isVisibleAfter = !columnsStateWithPreProcessing.lookup[field].hide;\n\n      if (isVisibleAfter !== isVisibleBefore) {\n        hasModelChanged = true;\n        newColumnVisibilityModel[field] = isVisibleAfter;\n      }\n    });\n\n    if (hasModelChanged || isInsideStateInitializer) {\n      columnVisibilityModel = newColumnVisibilityModel;\n    } else {\n      columnVisibilityModel = currentColumnVisibilityModel;\n    }\n  } else {\n    columnVisibilityModel = currentColumnVisibilityModel;\n  }\n\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n\n  const columnsState = _extends({}, columnsStateWithPortableColumns, {\n    columnVisibilityModel\n  });\n\n  return hydrateColumnsWidth(columnsState, (_apiRef$current$getRo = (_apiRef$current$getRo2 = (_apiRef$current = apiRef.current).getRootDimensions) == null ? void 0 : (_apiRef$current$getRo3 = _apiRef$current$getRo2.call(_apiRef$current)) == null ? void 0 : _apiRef$current$getRo3.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0);\n};\nexport const mergeColumnsState = columnsState => state => _extends({}, state, {\n  columns: columnsState\n});\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n\n  return firstNonSpannedColumnToRender;\n}\nexport function getFirstColumnIndexToRender({\n  firstColumnIndex,\n  minColumnIndex,\n  columnBuffer,\n  firstRowToRender,\n  lastRowToRender,\n  apiRef,\n  visibleRows\n}) {\n  const initialFirstColumnToRender = Math.max(firstColumnIndex - columnBuffer, minColumnIndex);\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  });\n  return firstColumnToRender;\n}","var GridPreferencePanelsValue;\n\n(function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n})(GridPreferencePanelsValue || (GridPreferencePanelsValue = {}));\n\nexport { GridPreferencePanelsValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsMetaSelector, gridColumnsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { hydrateColumnsWidth, computeColumnTypes, createColumnsState, mergeColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  var _props$initialState, _props$initialState$c, _props$initialState2, _ref, _props$columnVisibili, _props$initialState3, _props$initialState3$;\n\n  const isUsingColumnVisibilityModel = !!props.columnVisibilityModel || !!((_props$initialState = props.initialState) != null && (_props$initialState$c = _props$initialState.columns) != null && _props$initialState$c.columnVisibilityModel);\n  const columnsTypes = computeColumnTypes(props.columnTypes);\n  const columnsState = createColumnsState({\n    apiRef,\n    columnTypes: columnsTypes,\n    columnsToUpsert: props.columns,\n    initialState: (_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.columns,\n    shouldRegenColumnVisibilityModelFromColumns: !isUsingColumnVisibilityModel,\n    currentColumnVisibilityModel: (_ref = (_props$columnVisibili = props.columnVisibilityModel) != null ? _props$columnVisibili : (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.columns) == null ? void 0 : _props$initialState3$.columnVisibilityModel) != null ? _ref : {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState\n  });\n};\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\n\nexport function useGridColumns(apiRef, props) {\n  var _props$initialState4, _props$initialState4$, _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const columnTypes = React.useMemo(() => computeColumnTypes(props.columnTypes), [props.columnTypes]);\n  const previousColumnsProp = React.useRef(props.columns);\n  const previousColumnTypesProp = React.useRef(columnTypes);\n  /**\n   * If `initialState.columns.columnVisibilityModel` or `columnVisibilityModel` was defined during the 1st render, we are directly updating the model\n   * If not, we keep the old behavior and update the `GridColDef.hide` option (which will update the state model through the `GridColDef.hide` => `columnVisibilityModel` sync in `createColumnsState`\n   */\n\n  const isUsingColumnVisibilityModel = React.useRef(!!props.columnVisibilityModel || !!((_props$initialState4 = props.initialState) != null && (_props$initialState4$ = _props$initialState4.columns) != null && _props$initialState4$.columnVisibilityModel));\n  apiRef.current.unstable_updateControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('columnsChange', columnsState.all);\n  }, [logger, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnsMeta = React.useCallback(() => gridColumnsMetaSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnTypes,\n          columnsToUpsert: [],\n          initialState: undefined,\n          shouldRegenColumnVisibilityModelFromColumns: false,\n          currentColumnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, columnTypes]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: true,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState, columnTypes]);\n  const updateColumn = React.useCallback(column => apiRef.current.updateColumns([column]), [apiRef]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    // We keep updating the `hide` option of `GridColDef` when not controlling the model to avoid any breaking change.\n    // `updateColumns` take care of updating the model itself if needs be.\n    // TODO v6: stop using the `hide` field even when the model is not defined\n    if (isUsingColumnVisibilityModel.current) {\n      var _columnVisibilityMode;\n\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const isCurrentlyVisible = (_columnVisibilityMode = columnVisibilityModel[field]) != null ? _columnVisibilityMode : true;\n\n      if (isVisible !== isCurrentlyVisible) {\n        const newModel = _extends({}, columnVisibilityModel, {\n          [field]: isVisible\n        });\n\n        apiRef.current.setColumnVisibilityModel(newModel);\n      }\n    } else {\n      const column = apiRef.current.getColumn(field);\n\n      const newColumn = _extends({}, column, {\n        hide: !isVisible\n      });\n\n      apiRef.current.updateColumns([newColumn]);\n      const params = {\n        field,\n        colDef: newColumn,\n        isVisible\n      };\n      apiRef.current.publishEvent('columnVisibilityChange', params);\n    }\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = allColumns.findIndex(col => col === field);\n\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    updatedColumns.splice(targetIndexPosition, 0, updatedColumns.splice(oldIndexPosition, 1)[0]);\n    setGridColumnsState(_extends({}, gridColumnsSelector(apiRef.current.state), {\n      all: updatedColumns\n    }));\n    const params = {\n      field,\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: apiRef.current.getColumn(field),\n      targetIndex: targetIndexPosition,\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnOrderChange', params);\n  }, [apiRef, logger, setGridColumnsState]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const column = apiRef.current.getColumn(field);\n\n    const newColumn = _extends({}, column, {\n      width\n    });\n\n    apiRef.current.updateColumns([newColumn]);\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnsMeta,\n    updateColumn,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnIndex,\n    setColumnWidth\n  };\n  useGridApiMethod(apiRef, columnApi, 'GridColumnApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const columnsStateToExport = {};\n\n    if (isUsingColumnVisibilityModel.current) {\n      const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n      const hasHiddenColumns = Object.values(columnVisibilityModelToExport).some(value => value === false);\n\n      if (hasHiddenColumns) {\n        columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n      }\n    }\n\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const columnVisibilityModelToImport = isUsingColumnVisibilityModel.current ? (_context$stateToResto = context.stateToRestore.columns) == null ? void 0 : _context$stateToResto.columnVisibilityModel : undefined;\n    const initialState = context.stateToRestore.columns;\n\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState,\n      shouldRegenColumnVisibilityModelFromColumns: !isUsingColumnVisibilityModel.current,\n      currentColumnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.all);\n    }\n\n    return params;\n  }, [apiRef, columnTypes]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      var _props$componentsProp;\n\n      const ColumnsPanel = props.components.ColumnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.columnsPanel));\n    }\n\n    return initialValue;\n  }, [props.components.ColumnsPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.columnsPanel]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiOptionHandler(apiRef, 'columnVisibilityChange', props.onColumnVisibilityChange);\n  /**\n   * APPLIERS\n   */\n\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: !isUsingColumnVisibilityModel.current,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState, columnTypes]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n\n    if (previousColumnsProp.current === props.columns && previousColumnTypesProp.current === columnTypes) {\n      return;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      shouldRegenColumnVisibilityModelFromColumns: !isUsingColumnVisibilityModel.current,\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    previousColumnTypesProp.current = columnTypes;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns, columnTypes]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}","/**\n * Available densities.\n */\n\n/**\n * Density enum.\n */\nvar GridDensityTypes;\n\n(function (GridDensityTypes) {\n  GridDensityTypes[\"Compact\"] = \"compact\";\n  GridDensityTypes[\"Standard\"] = \"standard\";\n  GridDensityTypes[\"Comfortable\"] = \"comfortable\";\n})(GridDensityTypes || (GridDensityTypes = {}));\n\nexport { GridDensityTypes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridDensityTypes } from '../../../models/gridDensity';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { isDeepEqual } from '../../../utils/utils';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3; // TODO v6: revise keeping headerHeight and rowHeight in state\n\nconst getUpdatedDensityState = (newDensity, newHeaderHeight, newRowHeight) => {\n  switch (newDensity) {\n    case GridDensityTypes.Compact:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMPACT_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMPACT_DENSITY_FACTOR),\n        factor: COMPACT_DENSITY_FACTOR\n      };\n\n    case GridDensityTypes.Comfortable:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMFORTABLE_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMFORTABLE_DENSITY_FACTOR),\n        factor: COMFORTABLE_DENSITY_FACTOR\n      };\n\n    default:\n      return {\n        value: newDensity,\n        headerHeight: newHeaderHeight,\n        rowHeight: newRowHeight,\n        factor: 1\n      };\n  }\n};\n\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: getUpdatedDensityState(props.density, props.headerHeight, props.rowHeight)\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  const setDensity = React.useCallback((newDensity, newHeaderHeight = props.headerHeight, newRowHeight = props.rowHeight) => {\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => {\n      const currentDensityState = gridDensitySelector(state);\n      const newDensityState = getUpdatedDensityState(newDensity, newHeaderHeight, newRowHeight);\n\n      if (isDeepEqual(currentDensityState, newDensityState)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        density: newDensityState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef, props.headerHeight, props.rowHeight]);\n  React.useEffect(() => {\n    apiRef.current.setDensity(props.density, props.headerHeight, props.rowHeight);\n  }, [apiRef, props.density, props.rowHeight, props.headerHeight]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'GridDensityApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"getValue\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useForkRef } from '@mui/material/utils';\nimport { isNavigationKey, isSpaceKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  var _rootProps$components;\n\n  const {\n    field,\n    id,\n    value: isChecked,\n    hasFocus,\n    tabIndex\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef();\n  const handleRef = useForkRef(checkboxElement, ref);\n  const element = apiRef.current.getCellElement(id, field);\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [element, tabIndex]);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      var _checkboxElement$curr;\n\n      const input = (_checkboxElement$curr = checkboxElement.current) == null ? void 0 : _checkboxElement$curr.querySelector('input');\n      input == null ? void 0 : input.focus();\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isSpaceKey(event.key)) {\n      event.stopPropagation();\n    }\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props]);\n  const isSelectable = !rootProps.isRowSelectable || rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    color: \"primary\",\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = /*#__PURE__*/React.memo(GridCellCheckboxForwardRef);","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridSelectionStateSelector = state => state.selection;\nexport const selectedGridRowsCountSelector = createSelector(gridSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { createSelector } from '../../../utils/createSelector';\nimport { gridVisibleSortedRowEntriesSelector, gridVisibleSortedRowIdsSelector, gridVisibleSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Pagination\n * @ignore - do not document.\n */\n\nexport const gridPaginationSelector = state => state.pagination;\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSelector = createSelector(gridPaginationSelector, pagination => pagination.page);\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSizeSelector = createSelector(gridPaginationSelector, pagination => pagination.pageSize);\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageCountSelector = createSelector(gridPaginationSelector, pagination => pagination.pageCount);\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginationRowRangeSelector = createSelector(gridPaginationSelector, gridRowTreeSelector, gridRowTreeDepthSelector, gridVisibleSortedRowEntriesSelector, gridVisibleSortedTopLevelRowEntriesSelector, (pagination, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(pagination.pageSize * pagination.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + pagination.pageSize - 1, visibleTopLevelRowCount - 1); // The range contains no element\n\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  } // The tree is flat, there is no need to look for children\n\n\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id].depth;\n\n    if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n      lastRowIndex += 1;\n    }\n\n    if (depth === 0) {\n      topLevelRowAdded += 1;\n    }\n  }\n\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelector(gridVisibleSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridSelectionStateSelector } from '../../hooks/features/selection/gridSelectionSelector';\nimport { isNavigationKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridVisibleSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  var _rootProps$components;\n\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridVisibleSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]); // All the rows that could be selected / unselected by toggling this checkbox\n\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds; // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]); // Amount of rows selected and that are visible in the current page\n\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    } // TODO v6 remove columnHeaderNavigationKeyDown events which are not used internally anymore\n\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('columnHeaderNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('selectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    color: \"primary\",\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: '__check__',\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\n\nconst serializeCellValue = (value, delimiterCharacter) => {\n  if (typeof value === 'string') {\n    const formattedValue = value.replace(/\"/g, '\"\"'); // Make sure value containing delimiter or line break won't be split into multiple rows\n\n    if ([delimiterCharacter, '\\n', '\\r'].some(delimiter => formattedValue.includes(delimiter))) {\n      return `\"${formattedValue}\"`;\n    }\n\n    return formattedValue;\n  }\n\n  return value;\n};\n\nconst objectFormattedValueWarning = buildWarning(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n\nconst serializeRow = (id, columns, getCellParams, delimiterCharacter) => columns.map(column => {\n  const cellParams = getCellParams(id, column.field);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (String(cellParams.formattedValue) === '[object Object]') {\n      objectFormattedValueWarning();\n    }\n  }\n\n  return serializeCellValue(cellParams.formattedValue, delimiterCharacter);\n});\n\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    getCellParams,\n    delimiterCharacter,\n    includeHeaders\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow(id, columns, getCellParams, delimiterCharacter).join(delimiterCharacter)}\\r\\n`, '').trim();\n\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n\n  const CSVHead = `${columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field).map(column => serializeCellValue(column.headerName || column.field, delimiterCharacter)).join(delimiterCharacter)}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n\n  if (options.fields) {\n    return options.fields.map(field => columns.find(column => column.field === field)).filter(column => !!column);\n  }\n\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n\n  if (selectedRows.size > 0) {\n    return filteredSortedRowIds.filter(id => selectedRows.has(id));\n  }\n\n  return filteredSortedRowIds;\n};","/**\n * Filter item definition interface.\n */\nvar GridLinkOperator;\n\n(function (GridLinkOperator) {\n  GridLinkOperator[\"And\"] = \"and\";\n  GridLinkOperator[\"Or\"] = \"or\";\n})(GridLinkOperator || (GridLinkOperator = {}));\n\nexport { GridLinkOperator };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridCsvExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n  const {\n    hideMenu,\n    options\n  } = props;\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu == null ? void 0 : hideMenu();\n    },\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  });\n};\nexport const GridPrintExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n  const {\n    hideMenu,\n    options\n  } = props;\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu == null ? void 0 : hideMenu();\n    },\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  });\n};\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n    csvOptions = {},\n    printOptions = {},\n    excelOptions\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useGridCsvExport = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    var _options$getRowsToExp, _options$includeHeade;\n\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = (_options$getRowsToExp = options.getRowsToExport) != null ? _options$getRowsToExp : defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      getCellParams: apiRef.current.getCellParams,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: (_options$includeHeade = options.includeHeaders) != null ? _options$includeHeade : true\n    });\n  }, [logger, apiRef]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options != null && options.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options == null ? void 0 : options.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'GridCsvExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$csvOptions;\n\n    if ((_options$csvOptions = options.csvOptions) != null && _options$csvOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`; // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob); // Create a new anchor element\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName; // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n\n    a.click(); // https://github.com/eligrey/FileSaver.js/issues/205\n\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n\n  throw new Error('MUI: exportAs not supported');\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","export const GridFeatureModeConstant = {\n  client: 'client',\n  server: 'server'\n};","import { GridLinkOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  linkOperator: GridLinkOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLinkOperator.And\n});","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.unstable_registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLinkOperator } from '../../../models';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridColumnFieldsSelector } from '../columns';\n\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operatorValue.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nconst cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n\n  if (cleanItem.operatorValue == null) {\n    // we select a default operator\n    const column = apiRef.current.getColumn(cleanItem.columnField);\n    cleanItem.operatorValue = column && column.filterOperators[0].value;\n  }\n\n  return cleanItem;\n};\n\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning(\"MUI: The 'id' field is required on `filterModel.items` when you use multiple filters.\", 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning(['MUI: One of your filtering item have no `operatorValue` provided.', 'This property will become required on `@mui/x-data-grid@6.X`.']);\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operatorValue == null);\n\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => state => _extends({}, state, {\n  filter: _extends({}, state.filter, {\n    filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n  })\n});\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\nexport const buildAggregatedFilterItemsApplier = (filterModel, apiRef) => {\n  const {\n    items,\n    linkOperator = GridLinkOperator.And\n  } = filterModel;\n\n  const getFilterCallbackFromItem = filterItem => {\n    if (!filterItem.columnField || !filterItem.operatorValue) {\n      return null;\n    }\n\n    const column = apiRef.current.getColumn(filterItem.columnField);\n\n    if (!column) {\n      return null;\n    }\n\n    let parsedValue;\n\n    if (column.valueParser) {\n      var _filterItem$value;\n\n      const parser = column.valueParser;\n      parsedValue = Array.isArray(filterItem.value) ? (_filterItem$value = filterItem.value) == null ? void 0 : _filterItem$value.map(x => parser(x)) : parser(filterItem.value);\n    } else {\n      parsedValue = filterItem.value;\n    }\n\n    const newFilterItem = _extends({}, filterItem, {\n      value: parsedValue\n    });\n\n    const filterOperators = column.filterOperators;\n\n    if (!(filterOperators != null && filterOperators.length)) {\n      throw new Error(`MUI: No filter operators found for column '${column.field}'.`);\n    }\n\n    const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operatorValue);\n\n    if (!filterOperator) {\n      throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operatorValue}'.`);\n    }\n\n    const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n\n    if (typeof applyFilterOnRow !== 'function') {\n      return null;\n    }\n\n    const fn = rowId => {\n      const cellParams = apiRef.current.getCellParams(rowId, newFilterItem.columnField);\n      return applyFilterOnRow(cellParams);\n    };\n\n    return {\n      fn,\n      item: newFilterItem\n    };\n  };\n\n  const appliers = items.map(getFilterCallbackFromItem).filter(callback => !!callback);\n\n  if (appliers.length === 0) {\n    return null;\n  }\n\n  return (rowId, shouldApplyFilter) => {\n    const filteredAppliers = shouldApplyFilter ? appliers.filter(applier => shouldApplyFilter(applier.item.columnField)) : appliers; // Return `false` as soon as we have a failing filter\n\n    if (linkOperator === GridLinkOperator.And) {\n      return filteredAppliers.every(applier => applier.fn(rowId));\n    } // Return `true` as soon as we have a passing filter\n\n\n    return filteredAppliers.some(applier => applier.fn(rowId));\n  };\n};\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} values The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\nexport const buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const {\n    quickFilterValues = [],\n    quickFilterLogicOperator = GridLinkOperator.And\n  } = filterModel;\n\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n\n  const columnsFields = gridColumnFieldsSelector(apiRef);\n  const appliersPerColumnField = {};\n  columnsFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column == null ? void 0 : column.getApplyQuickFilterFn;\n\n    if (!getApplyQuickFilterFn) {\n      return;\n    }\n\n    appliersPerColumnField[field] = quickFilterValues.map(value => getApplyQuickFilterFn(value, column, apiRef));\n  }); // If some value does not have an applier we ignore them\n\n  const sanitizedQuickFilterValues = quickFilterValues.filter((value, index) => Object.keys(appliersPerColumnField).some(field => appliersPerColumnField[field][index] != null));\n  return (rowId, shouldApplyFilter) => {\n    const usedCellParams = {};\n    Object.keys(appliersPerColumnField).forEach(columnField => {\n      if (!shouldApplyFilter || shouldApplyFilter(columnField)) {\n        usedCellParams[columnField] = apiRef.current.getCellParams(rowId, columnField);\n      }\n    }); // Return `false` as soon as we have a quick filter value that does not match any column\n\n    if (quickFilterLogicOperator === GridLinkOperator.And) {\n      return sanitizedQuickFilterValues.every((value, index) => Object.keys(appliersPerColumnField).some(field => {\n        var _appliersPerColumnFie, _appliersPerColumnFie2;\n\n        if (appliersPerColumnField[field][index] == null) {\n          return false;\n        }\n\n        return (_appliersPerColumnFie = (_appliersPerColumnFie2 = appliersPerColumnField[field])[index]) == null ? void 0 : _appliersPerColumnFie.call(_appliersPerColumnFie2, usedCellParams[field]);\n      }));\n    } // Return `true` as soon as we have have a quick filter value that match any column\n\n\n    return sanitizedQuickFilterValues.some((value, index) => Object.keys(appliersPerColumnField).some(field => {\n      var _appliersPerColumnFie3, _appliersPerColumnFie4;\n\n      if (appliersPerColumnField[field][index] == null) {\n        return false;\n      }\n\n      return (_appliersPerColumnFie3 = (_appliersPerColumnFie4 = appliersPerColumnField[field])[index]) == null ? void 0 : _appliersPerColumnFie3.call(_appliersPerColumnFie4, usedCellParams[field]);\n    }));\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n\n  if (isRowMatchingFilterItems == null && isRowMatchingQuickFilter == null) {\n    return null;\n  }\n\n  if (isRowMatchingFilterItems == null) {\n    return isRowMatchingQuickFilter;\n  }\n\n  if (isRowMatchingQuickFilter == null) {\n    return isRowMatchingFilterItems;\n  }\n\n  return (rowId, shouldApplyFilter) => isRowMatchingFilterItems(rowId, shouldApplyFilter) && isRowMatchingQuickFilter(rowId, shouldApplyFilter);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFilterableColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector, gridVisibleSortedRowEntriesSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowIdsSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$filterModel, _props$initialState, _props$initialState$f;\n\n  const filterModel = (_ref = (_props$filterModel = props.filterModel) != null ? _props$filterModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$f = _props$initialState.filter) == null ? void 0 : _props$initialState$f.filterModel) != null ? _ref : getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      visibleRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    }\n  });\n};\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\n\nexport const useGridFilter = (apiRef, props) => {\n  var _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.unstable_updateControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === GridFeatureModeConstant.client ? buildAggregatedFilterApplier(filterModel, apiRef) : null;\n      const filteringResult = apiRef.current.unstable_applyStrategyProcessor('filtering', {\n        isRowMatchingFilters\n      });\n      return _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [props.filterMode, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }));\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }));\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback(targetColumnField => {\n    logger.debug('Displaying filter panel');\n\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => item.value !== undefined);\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.columnField === targetColumnField);\n\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [{\n          columnField: targetColumnField\n        }];\n      } else {\n        newFilterItems = [...filterItemsWithValue, {\n          columnField: targetColumnField\n        }];\n      }\n\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLinkOperator = React.useCallback(linkOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (filterModel.linkOperator === linkOperator) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      linkOperator\n    }));\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback(model => {\n    const currentModel = gridFilterModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.setState(mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef));\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getVisibleRowModels = React.useCallback(() => {\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    return new Map(visibleSortedRows.map(row => [row.id, row.model]));\n  }, [apiRef]);\n  const filterApi = {\n    setFilterLinkOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    getVisibleRowModels,\n    setQuickFilterValues\n  };\n  useGridApiMethod(apiRef, filterApi, 'GridFilterApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n\n    if (filterModelToExport.items.length === 0 && filterModelToExport.linkOperator === getDefaultGridFilterModel().linkOperator) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const filterModel = (_context$stateToResto = context.stateToRestore.filter) == null ? void 0 : _context$stateToResto.filterModel;\n\n    if (filterModel == null) {\n      return params;\n    }\n\n    apiRef.current.setState(mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      var _props$componentsProp;\n\n      const FilterPanel = props.components.FilterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.filterPanel));\n    }\n\n    return initialValue;\n  }, [props.components.FilterPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.filterPanel]);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode === GridFeatureModeConstant.client && params.isRowMatchingFilters) {\n      const rowIds = gridRowIdsSelector(apiRef);\n      const filteredRowsLookup = {};\n\n      for (let i = 0; i < rowIds.length; i += 1) {\n        const rowId = rowIds[i];\n        filteredRowsLookup[rowId] = params.isRowMatchingFilters(rowId);\n      }\n\n      return {\n        filteredRowsLookup,\n        // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` since no row is collapsed.\n        visibleRowsLookup: filteredRowsLookup,\n        filteredDescendantCountLookup: {}\n      };\n    }\n\n    return {\n      visibleRowsLookup: {},\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const filterableColumnsLookup = gridFilterableColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.columnField && filterableColumnsLookup[item.columnField]);\n\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]); // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', apiRef.current.unstable_applyFilters);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridVisibleSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridVisibleSortedRowEntriesSelector(apiRef);\n\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n\n  return {\n    rows,\n    range\n  };\n};\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\n\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null\n  }\n});\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\n\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate(); // The row might have been deleted\n\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    let rowIndexToFocus = apiRef.current.getRowIndexRelativeToVisibleRows(id);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n\n      if (rowIndexToFocus < currentPage.rows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPage.rows.length - 1);\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const rowToFocus = currentPage.rows[rowIndexToFocus];\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || isNavigationKey(event.key)) {\n      return;\n    }\n\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback(() => {\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseUp = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n\n      return;\n    }\n\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n\n    if (!apiRef.current.getRow(focusedCell.id)) {\n      return;\n    } // There's a focused cell but another cell was clicked\n    // Publishes an event to notify that the focus was lost\n\n\n    apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(focusedCell.id, focusedCell.field), event);\n\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n\n    const cell = gridFocusCellSelector(apiRef);\n\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef); // If the focused cell is in a row which does not exist anymore, then remove the focus\n\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    setCellFocus,\n    setColumnHeaderFocus,\n    unstable_moveFocusToRelativeCell: moveFocusToRelativeCell\n  }, 'GridFocusApi');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('click', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('click', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseUp', handleCellMouseUp);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler, useGridSelector } from '../../utils';\nimport { gridPageSizeSelector } from './gridPaginationSelector';\nimport { gridDensityRowHeightSelector } from '../density';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\n\nconst mergeStateWithPageSize = pageSize => state => _extends({}, state, {\n  pagination: _extends({}, state.pagination, {\n    pageSize\n  })\n});\n/**\n * @requires useGridDimensions (event) - can be after\n */\n\n\nexport const useGridPageSize = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPageSize');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  apiRef.current.unstable_updateControlState({\n    stateId: 'pageSize',\n    propModel: props.pageSize,\n    propOnChange: props.onPageSizeChange,\n    stateSelector: gridPageSizeSelector,\n    changeEvent: 'pageSizeChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPageSize = React.useCallback(pageSize => {\n    if (pageSize === gridPageSizeSelector(apiRef)) {\n      return;\n    }\n\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageSizeApi = {\n    setPageSize\n  };\n  useGridApiMethod(apiRef, pageSizeApi, 'GridPageSizeApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageSizeToExport = gridPageSizeSelector(apiRef);\n    const shouldExportPageSize = // Always export if the page size is controlled\n    props.pageSize != null || // Always export if the page size has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null || // Export if the page size value is not equal to the default value\n    pageSizeToExport !== defaultPageSize(props.autoPageSize);\n\n    if (!shouldExportPageSize) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        pageSize: pageSizeToExport\n      })\n    });\n  }, [apiRef, props.pageSize, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.pageSize, props.autoPageSize]);\n  /**\n   * TODO: Add error if `prop.autoHeight = true`\n   */\n\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const pageSize = (_context$stateToResto = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto.pageSize;\n\n    if (pageSize != null) {\n      apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!props.autoPageSize || !dimensions) {\n      return;\n    }\n\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.pageSize != null && !props.autoPageSize) {\n      apiRef.current.setPageSize(props.pageSize);\n    }\n  }, [apiRef, props.autoPageSize, props.pageSize]);\n  React.useEffect(() => {\n    handleUpdateAutoPageSize();\n  }, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridVisibleTopLevelRowCountSelector } from '../filter';\nimport { gridPageSelector, gridPageSizeSelector } from './gridPaginationSelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { buildWarning } from '../../../utils/warning';\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n\n  return 0;\n};\n\nconst applyValidPage = paginationState => {\n  if (!paginationState.pageCount) {\n    return paginationState;\n  }\n\n  return _extends({}, paginationState, {\n    page: Math.max(Math.min(paginationState.page, paginationState.pageCount - 1), 0)\n  });\n};\n\nconst mergeStateWithPage = page => state => _extends({}, state, {\n  pagination: applyValidPage(_extends({}, state.pagination, {\n    page\n  }))\n});\n\nconst noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\n/**\n * @requires useGridPageSize (event)\n */\n\nexport const useGridPage = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPage');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  apiRef.current.unstable_updateControlState({\n    stateId: 'page',\n    propModel: props.page,\n    propOnChange: props.onPageChange,\n    stateSelector: gridPageSelector,\n    changeEvent: 'pageChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPage = React.useCallback(page => {\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setState(mergeStateWithPage(page));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageApi = {\n    setPage\n  };\n  useGridApiMethod(apiRef, pageApi, 'GridPageApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageToExport = gridPageSelector(apiRef);\n    const shouldExportPage = // Always export if the page is controlled\n    props.page != null || // Always export if the page has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.page) != null || // Export if the page value is not equal to the default value\n    pageToExport !== 0;\n\n    if (!shouldExportPage) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        page: pageToExport\n      })\n    });\n  }, [apiRef, props.page, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2;\n\n    // We apply the constraint even if the page did not change in case the pageSize changed.\n    const page = (_context$stateToResto = (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.page) != null ? _context$stateToResto : gridPageSelector(apiRef);\n    apiRef.current.setState(mergeStateWithPage(page));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handlePageSizeChange = pageSize => {\n    apiRef.current.setState(state => {\n      const pageCount = getPageCount(state.pagination.rowCount, pageSize);\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          pageCount,\n          page: state.pagination.page\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  };\n\n  const handlePageChange = () => apiRef.current.scrollToIndexes({\n    rowIndex: gridPageSelector(apiRef) * gridPageSizeSelector(apiRef)\n  });\n\n  useGridApiEventHandler(apiRef, 'pageSizeChange', handlePageSizeChange);\n  useGridApiEventHandler(apiRef, 'pageChange', handlePageChange);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    apiRef.current.setState(state => {\n      const rowCount = props.rowCount !== undefined ? props.rowCount : visibleTopLevelRowCount;\n      const pageCount = getPageCount(rowCount, state.pagination.pageSize);\n      const page = props.page == null ? state.pagination.page : props.page;\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          page,\n          rowCount,\n          pageCount\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [visibleTopLevelRowCount, props.rowCount, props.page, props.paginationMode, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useGridPageSize, defaultPageSize } from './useGridPageSize';\nimport { useGridPage, getPageCount } from './useGridPage';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$initialState, _props$initialState$p, _ref, _props$page, _props$initialState2, _props$initialState2$, _props$rowCount, _props$rowCount2;\n\n  let pageSize;\n\n  if (props.pageSize != null) {\n    pageSize = props.pageSize;\n  } else if (((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null) {\n    pageSize = props.initialState.pagination.pageSize;\n  } else {\n    pageSize = defaultPageSize(props.autoPageSize);\n  }\n\n  return _extends({}, state, {\n    pagination: {\n      pageSize,\n      page: (_ref = (_props$page = props.page) != null ? _props$page : (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page) != null ? _ref : 0,\n      pageCount: getPageCount((_props$rowCount = props.rowCount) != null ? _props$rowCount : 0, pageSize),\n      rowCount: (_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : 0\n    }\n  });\n};\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\n\nexport const useGridPagination = (apiRef, props) => {\n  useGridPageSize(apiRef, props);\n  useGridPage(apiRef, props);\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\n\nexport const useGridPreferencesPanel = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n  /**\n   * API METHODS\n   */\n\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]); // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []); // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback(newValue => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'ColumnMenuApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (!preferencePanelToExport.open && !preferencePanelToExport.openedPanelValue) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isPrintableKey, isCellEnterEditModeKeys, isCellExitEditModeKeys, isCellEditCommitKeys, isDeleteKeys } from '../../../utils/keyboardUtils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\n\nfunction isPromise(promise) {\n  return typeof promise.then === 'function';\n}\n\nexport const useCellEditing = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const setCellMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) === mode) {\n      return;\n    }\n\n    logger.debug(`Switching cell id: ${id} field: ${field} to mode: ${mode}`);\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      newEditRowsState[id] = _extends({}, newEditRowsState[id]);\n\n      if (mode === GridCellModes.Edit) {\n        newEditRowsState[id][field] = {\n          value: apiRef.current.getCellValue(id, field)\n        };\n      } else {\n        delete newEditRowsState[id][field];\n\n        if (!Object.keys(newEditRowsState[id]).length) {\n          delete newEditRowsState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('cellModeChange', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger]);\n  const getCellMode = React.useCallback((id, field) => {\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editRowsState[id] && editRowsState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]); // TODO v6: it should always return a promise\n\n  const commitCellChange = React.useCallback((params, event = {}) => {\n    var _props$experimentalFe;\n\n    const {\n      id,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    const model = apiRef.current.getEditRowsModel();\n\n    if (!model[id] || !model[id][field]) {\n      throw new Error(`MUI: Cell at id: ${id} and field: ${field} is not in edit mode.`);\n    }\n\n    const editCellProps = model[id][field];\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const cellProps = model[id][field];\n\n      if (cellProps.isValidating || cellProps.error) {\n        return false;\n      }\n    }\n\n    const commitParams = _extends({}, params, {\n      value: editCellProps.value\n    });\n\n    let hasError = !!editCellProps.error;\n\n    if (!hasError && typeof column.preProcessEditCellProps === 'function') {\n      const result = column.preProcessEditCellProps({\n        id,\n        row,\n        props: editCellProps\n      });\n\n      if (isPromise(result)) {\n        return result.then(newEditCellProps => {\n          apiRef.current.unstable_setEditCellProps({\n            id,\n            field,\n            props: newEditCellProps\n          });\n\n          if (newEditCellProps.error) {\n            return false;\n          }\n\n          apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n          return true;\n        });\n      }\n\n      apiRef.current.unstable_setEditCellProps({\n        id,\n        field,\n        props: result\n      });\n      hasError = !!result.error;\n    }\n\n    if (!hasError) {\n      apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n      return true;\n    }\n\n    return false;\n  }, [apiRef, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setCellEditingEditCellValue = React.useCallback(params => {\n    const column = apiRef.current.getColumn(params.field);\n    const row = apiRef.current.getRow(params.id);\n    return new Promise(resolve => {\n      let newEditCellProps = {\n        value: params.value\n      };\n      const model = apiRef.current.getEditRowsModel();\n      const editCellProps = model[params.id][params.field];\n\n      if (typeof column.preProcessEditCellProps !== 'function') {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n        resolve(true);\n        return;\n      } // setEditCellProps runs the value parser and returns the updated props\n\n\n      newEditCellProps = apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: _extends({}, editCellProps, {\n          isValidating: true\n        })\n      }));\n      Promise.resolve(column.preProcessEditCellProps({\n        id: params.id,\n        row,\n        props: _extends({}, newEditCellProps, {\n          value: apiRef.current.unstable_parseValue(params.id, params.field, params.value)\n        })\n      })).then(newEditCellPropsProcessed => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: _extends({}, newEditCellPropsProcessed, {\n            isValidating: false\n          })\n        }));\n        resolve(!newEditCellPropsProcessed.error);\n      });\n    });\n  }, [apiRef]);\n  const cellEditingApi = {\n    setCellMode,\n    getCellMode,\n    commitCellChange,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, cellEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    const {\n      id,\n      field,\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey;\n\n    if (!isEditMode && isCellEnterEditModeKeys(event.key) && !isModifierKeyPressed && !(event.key === ' ' && event.shiftKey)) {\n      apiRef.current.publishEvent('cellEditStart', params, event);\n    }\n\n    if (!isEditMode && isDeleteKeys(event.key)) {\n      apiRef.current.setEditCellValue({\n        id,\n        field,\n        value: ''\n      });\n      apiRef.current.commitCellChange({\n        id,\n        field\n      }, event);\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n\n    if (isEditMode && isCellEditCommitKeys(event.key)) {\n      const commitParams = {\n        id,\n        field\n      };\n      const isValid = await apiRef.current.commitCellChange(commitParams, event);\n\n      if (!isValid) {\n        return;\n      }\n    }\n\n    if (isEditMode && isCellExitEditModeKeys(event.key)) {\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.publishEvent('cellEditStart', params, event);\n  }, [apiRef]);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    await apiRef.current.commitCellChange(params, event);\n    apiRef.current.publishEvent('cellEditStop', params, event);\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  const handleCellEditStart = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.Edit);\n\n    if (isKeyboardEvent(event) && isPrintableKey(event.key)) {\n      apiRef.current.unstable_setEditCellProps({\n        id: params.id,\n        field: params.field,\n        props: {\n          value: ''\n        }\n      });\n    }\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback((params, event) => {\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.View);\n\n    if (!isKeyboardEvent(event)) {\n      return;\n    }\n\n    if (isCellEditCommitKeys(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      return;\n    }\n\n    if (event.key === 'Escape' || isDeleteKeys(event.key)) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleCellEditCommit = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params;\n    const model = apiRef.current.getEditRowsModel();\n    const {\n      value\n    } = model[id][field];\n    logger.debug(`Setting cell id: ${id} field: ${field} to value: ${value == null ? void 0 : value.toString()}`);\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      const column = apiRef.current.getColumn(params.field);\n\n      let rowUpdate = _extends({}, row, {\n        [field]: value\n      });\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          row,\n          value\n        });\n      }\n\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef, logger]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const column = apiRef.current.getColumn(params.field);\n    const editCellProps = column.preProcessEditCellProps ? column.preProcessEditCellProps({\n      id: params.id,\n      row,\n      props: params.props\n    }) : params.props;\n\n    if (isPromise(editCellProps)) {\n      editCellProps.then(newEditCellProps => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n      });\n    } else {\n      apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: editCellProps\n      }));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiEventHandler(apiRef, 'cellEditStart', buildCallback(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', buildCallback(handleCellEditStop));\n  useGridApiEventHandler(apiRef, 'cellEditCommit', buildCallback(handleCellEditCommit));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiOptionHandler(apiRef, 'cellEditCommit', props.onCellEditCommit);\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n};","// TODO v6 - remove\n\n/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\n// TODO v6 - remove\n// TODO v6 - remove\nvar GridCellEditStartReasons;\n/**\n * Params passed to the `cellEditStart` event.\n */\n\n(function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridCellEditStartReasons || (GridCellEditStartReasons = {}));\n\nvar GridCellEditStopReasons;\n/**\n * Params passed to the `cellEditStop event.\n */\n\n(function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridCellEditStopReasons || (GridCellEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { useCellEditing } from './useGridCellEditing.old';\nimport { useGridRowEditing } from './useGridRowEditing.old';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\n/**\n * @requires useGridFocus - can be after, async only\n * @requires useGridParamsApi (method)\n * @requires useGridColumns (state)\n */\n\nexport function useGridEditing(apiRef, props) {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n  useCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  apiRef.current.unstable_updateControlState({\n    stateId: 'editRows',\n    propModel: props.editRowsModel,\n    propOnChange: props.onEditRowsModelChange,\n    stateSelector: gridEditRowsStateSelector,\n    changeEvent: 'editRowsModelChange'\n  });\n  const isCellEditable = React.useCallback(params => !params.rowNode.isAutoGenerated && !!params.colDef.editable && !!params.colDef.renderEditCell && (!props.isCellEditable || props.isCellEditable(params)), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [props.isCellEditable]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    const callbackToRunImmediately = () => {\n      callback();\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, callbackToRunImmediately];\n  };\n\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, callback] = debounceMap.current[id][debouncedField];\n        callback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, callback] = debounceMap.current[id][field];\n      callback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback((params, event = {}) => {\n    maybeDebounce(params.id, params.field, params.debounceMs, () => {\n      var _props$experimentalFe;\n\n      if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n        if (props.editMode === 'row') {\n          return apiRef.current.unstable_setRowEditingEditCellValue(params);\n        }\n\n        return apiRef.current.unstable_setCellEditingEditCellValue(params);\n      }\n\n      const newParams = {\n        id: params.id,\n        field: params.field,\n        props: {\n          value: params.value\n        }\n      };\n      return apiRef.current.publishEvent('editCellPropsChange', newParams, event);\n    });\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const parseValue = React.useCallback((id, field, value) => {\n    const column = apiRef.current.getColumn(field);\n    return column.valueParser ? column.valueParser(value, apiRef.current.getCellParams(id, field)) : value;\n  }, [apiRef]);\n  const setEditCellProps = React.useCallback(params => {\n    const {\n      id,\n      field,\n      props: editProps\n    } = params;\n    logger.debug(`Setting cell props on id: ${id} field: ${field}`);\n    apiRef.current.setState(state => {\n      const editRowsModel = _extends({}, state.editRows);\n\n      editRowsModel[id] = _extends({}, state.editRows[id]);\n      editRowsModel[id][field] = _extends({}, editProps, {\n        value: parseValue(id, field, editProps.value)\n      });\n      return _extends({}, state, {\n        editRows: editRowsModel\n      });\n    });\n    apiRef.current.forceUpdate();\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id][field];\n  }, [apiRef, logger, parseValue]);\n  const setEditRowsModel = React.useCallback(model => {\n    const currentModel = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting editRows model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        editRows: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const getEditRowsModel = React.useCallback(() => gridEditRowsStateSelector(apiRef.current.state), [apiRef]);\n  const preventTextSelection = React.useCallback((params, event) => {\n    const isMoreThanOneClick = event.detail > 1;\n\n    if (params.isEditable && params.cellMode === GridCellModes.View && isMoreThanOneClick) {\n      // If we click more than one time, then we prevent the default behavior of selecting the text cell.\n      event.preventDefault();\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventTextSelection);\n  useGridApiOptionHandler(apiRef, 'editCellPropsChange', props.onEditCellPropsChange); // TODO v6: remove, use `preProcessEditCellProps` instead\n\n  const editingSharedApi = {\n    isCellEditable,\n    setEditRowsModel,\n    getEditRowsModel,\n    setEditCellValue,\n    unstable_setEditCellProps: setEditCellProps,\n    unstable_parseValue: parseValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditRowApi');\n  React.useEffect(() => {\n    if (props.editRowsModel !== undefined) {\n      apiRef.current.setEditRowsModel(props.editRowsModel);\n    }\n  }, [apiRef, props.editRowsModel]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { GridRowModes, GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nexport const useGridRowEditing = (apiRef, props) => {\n  var _props$experimentalFe2, _props$experimentalFe4;\n\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const setRowMode = React.useCallback((id, mode) => {\n    if (mode === apiRef.current.getRowMode(id)) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      if (mode === GridRowModes.Edit) {\n        newEditRowsState[id] = {};\n        columns.forEach(column => {\n          const cellParams = apiRef.current.getCellParams(id, column.field);\n\n          if (cellParams.isEditable) {\n            newEditRowsState[id][column.field] = {\n              value: cellParams.value\n            };\n          }\n        });\n      } else {\n        delete newEditRowsState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, columns]);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id] ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const commitRowChange = React.useCallback((id, event = {}) => {\n    var _props$experimentalFe;\n\n    if (props.editMode === GridEditModes.Cell) {\n      throw new Error(`MUI: You can't commit changes when the edit mode is 'cell'.`);\n    }\n\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRowProps = model[id];\n\n    if (!editRowProps) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const isValid = Object.keys(editRowProps).reduce((acc, field) => {\n        return acc && !editRowProps[field].isValidating && !editRowProps[field].error;\n      }, true);\n\n      if (!isValid) {\n        return false;\n      }\n    }\n\n    const hasFieldWithError = Object.values(editRowProps).some(value => !!value.error);\n\n    if (hasFieldWithError) {\n      return false;\n    }\n\n    const fieldsWithValidator = Object.keys(editRowProps).filter(field => {\n      const column = apiRef.current.getColumn(field);\n      return typeof column.preProcessEditCellProps === 'function';\n    });\n\n    if (fieldsWithValidator.length > 0) {\n      const row = apiRef.current.getRow(id);\n      const validatorErrors = fieldsWithValidator.map(async field => {\n        const column = apiRef.current.getColumn(field);\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: editRowProps[field]\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id,\n          field,\n          props: newEditCellProps\n        });\n        return newEditCellProps.error;\n      });\n      return Promise.all(validatorErrors).then(errors => {\n        if (errors.some(error => !!error)) {\n          return false;\n        }\n\n        apiRef.current.publishEvent('rowEditCommit', id, event);\n        return true;\n      });\n    }\n\n    apiRef.current.publishEvent('rowEditCommit', id, event);\n    return true;\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    const row = apiRef.current.getRow(params.id);\n    let isValid = true;\n    return new Promise(resolve => {\n      Object.keys(editRow).forEach(async field => {\n        const column = apiRef.current.getColumn(field);\n        let editCellProps = field === params.field ? {\n          value: params.value\n        } : editRow[field]; // setEditCellProps runs the value parser and returns the updated props\n\n        editCellProps = apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: true\n          })\n        });\n\n        if (column.preProcessEditCellProps) {\n          editCellProps = await Promise.resolve(column.preProcessEditCellProps({\n            id: params.id,\n            row,\n            props: _extends({}, editCellProps, {\n              value: field === params.field ? apiRef.current.unstable_parseValue(params.id, field, params.value) : editCellProps.value\n            })\n          }));\n        }\n\n        if (editCellProps.error) {\n          isValid = false;\n        }\n\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: false\n          })\n        });\n      });\n      resolve(isValid);\n    });\n  }, [apiRef]);\n  const rowEditingApi = {\n    setRowMode,\n    getRowMode,\n    commitRowChange,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, rowEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    const {\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    if (isEditMode) {\n      if (event.key === 'Enter') {\n        var _props$experimentalFe3;\n\n        // TODO: check the return before firing 'rowEditStop'\n        // On cell editing, it won't exits the edit mode with error\n        const isValid = await apiRef.current.commitRowChange(params.id);\n\n        if (!isValid && (_props$experimentalFe3 = props.experimentalFeatures) != null && _props$experimentalFe3.preventCommitWhileValidating) {\n          return;\n        }\n\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      } else if (event.key === 'Escape') {\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    } else if (event.key === 'Enter') {\n      apiRef.current.publishEvent('rowEditStart', rowParams, event);\n    }\n  }, [apiRef, (_props$experimentalFe4 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe4.preventCommitWhileValidating]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n    apiRef.current.publishEvent('rowEditStart', rowParams, event);\n  }, [apiRef]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    Object.keys(editRow).forEach(async field => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.preProcessEditCellProps) {\n        const editCellProps = field === params.field ? params.props : editRow[field];\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id: params.id,\n          row,\n          props: editCellProps\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: newEditCellProps\n        });\n      } else if (field === params.field) {\n        apiRef.current.unstable_setEditCellProps(params);\n      }\n    });\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    apiRef.current.setRowMode(params.id, GridRowModes.Edit);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback((params, event) => {\n    apiRef.current.setRowMode(params.id, GridRowModes.View);\n\n    if (event.key === 'Enter') {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n    }\n  }, [apiRef]);\n  const handleRowEditCommit = React.useCallback(id => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[id];\n\n    if (!editRow) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      let rowUpdate = _extends({}, row);\n\n      Object.keys(editRow).forEach(field => {\n        const column = apiRef.current.getColumn(field);\n        const value = editRow[field].value;\n\n        if (column.valueSetter) {\n          rowUpdate = column.valueSetter({\n            row: rowUpdate,\n            value\n          });\n        } else {\n          rowUpdate[field] = value;\n        }\n      });\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(async () => {\n      var _nextFocusedCell$curr;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        await apiRef.current.commitRowChange(params.id, event);\n        const rowParams = apiRef.current.getRowParams(params.id);\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    });\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiEventHandler(apiRef, 'rowEditStart', buildCallback(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', buildCallback(handleRowEditStop));\n  useGridApiEventHandler(apiRef, 'rowEditCommit', buildCallback(handleRowEditCommit));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', buildCallback(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiOptionHandler(apiRef, 'rowEditCommit', props.onRowEditCommit);\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n      _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (isPrintableKey(event.key)) {\n        if (event.shiftKey || event.ctrlKey || event.metaKey || event.altKey) {\n          return;\n        }\n\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n\n    if (reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.printableKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    let cellToFocusAfter;\n\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (editingState[id][field].isProcessingProps) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications.\n      ignoreModifications = true;\n    }\n\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = React.useCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onCellModesModelChange(newModel, details);\n    }\n\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setCellModesModel(newModel);\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  }, [apiRef, onCellModesModelChange, props.cellModesModel, signature]);\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    const newModel = _extends({}, cellModesModel);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _cellModesModel$id = cellModesModel[id],\n            otherFields = _objectWithoutPropertiesLoose(_cellModesModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n\n\n      newModel[id] = otherFields;\n\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n\n    updateCellModesModel(newModel);\n  }, [cellModesModel, updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue\n    } = params;\n    const newProps = {\n      value: deleteValue ? '' : apiRef.current.getCellValue(id, field),\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef, updateOrDeleteFieldState]);\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n\n    const finishCellEditMode = () => {\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n    };\n\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n\n    if (error || isProcessingProps) {\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  }, [apiRef, onProcessRowUpdateError, processRowUpdate, throwIfNotInMode, updateFieldInCellModesModel, updateOrDeleteFieldState]);\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue\n    });\n\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    } // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n\n\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    }); // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id][field].error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      value\n    } = editingState[id][field];\n    const row = apiRef.current.getRow(id);\n    return column.valueSetter ? column.valueSetter({\n      value,\n      row\n    }) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromCellEditing: getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef);\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        var _prevCellModesModel$c, _prevCellModesModel$c2, _idToIdLookup$id;\n\n        const prevMode = ((_prevCellModesModel$c = prevCellModesModel.current[id]) == null ? void 0 : (_prevCellModesModel$c2 = _prevCellModesModel$c[field]) == null ? void 0 : _prevCellModesModel$c2.mode) || GridCellModes.View;\n        const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n    prevCellModesModel.current = cellModesModel;\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n */\n\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n */\n\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons;\n/**\n * Params passed to the `rowEditStart` event.\n */\n\n(function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridRowEditStartReasons || (GridRowEditStartReasons = {}));\n\nvar GridRowEditStopReasons;\n\n(function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridRowEditStopReasons || (GridRowEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n      _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    } // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      var _nextFocusedCell$curr;\n\n      focusTimeout.current = null;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridColumnFieldsSelector(apiRef).filter(field => apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field)));\n\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        if (reason) {\n          event.preventDefault(); // Prevent going to the next element in the tab sequence\n        }\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          reason,\n          field: params.field\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (isPrintableKey(event.key)) {\n        if (event.shiftKey || event.ctrlKey || event.metaKey || event.altKey) {\n          return;\n        }\n\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n\n    if (reason === GridRowEditStartReasons.deleteKeyDown || reason === GridRowEditStartReasons.printableKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (!ignoreModifications) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications if any field is processing its props.\n      ignoreModifications = Object.values(editingState[id]).some(fieldProps => {\n        return fieldProps.isProcessingProps;\n      });\n    }\n\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = React.useCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onRowModesModelChange(newModel, details);\n    }\n\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setRowModesModel(newModel);\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  }, [apiRef, onRowModesModelChange, props.rowModesModel, signature]);\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModel);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n\n    updateRowModesModel(newModel);\n  }, [rowModesModel, updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = React.useCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n\n      const shouldDeleteValue = deleteValue && fieldToFocus === field;\n      acc[field] = {\n        value: shouldDeleteValue ? '' : apiRef.current.getCellValue(id, field),\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  }, [apiRef, updateOrDeleteRowState]);\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = React.useCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n\n    if (isSomeFieldProcessingProps) {\n      return;\n    }\n\n    const hasSomeFieldWithError = Object.values(editingState[id]).some(fieldProps => fieldProps.error);\n\n    if (hasSomeFieldWithError) {\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  }, [apiRef, onProcessRowUpdateError, processRowUpdate, updateOrDeleteRowState, updateRowInRowModesModel]);\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue\n    });\n\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n\n    return new Promise(resolve => {\n      const promises = [];\n\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n\n        const _editingState$id = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          }); // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n\n        const fieldColumn = apiRef.current.getColumn(thisField);\n\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n        const _editingState$id2 = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n\n    let rowUpdate = _extends({}, row);\n\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          value: fieldProps.value,\n          row: rowUpdate\n        });\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromRowEditing: getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef);\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      var _prevRowModesModel$cu, _idToIdLookup$id;\n\n      const prevMode = ((_prevRowModesModel$cu = prevRowModesModel.current[id]) == null ? void 0 : _prevRowModesModel$cu.mode) || GridRowModes.View;\n      const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n    prevRowModesModel.current = rowModesModel;\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing.new';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing.new';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (params.rowNode.isAutoGenerated) {\n      return false;\n    }\n\n    if (!params.colDef.editable) {\n      return false;\n    }\n\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n\n    return true;\n  }, [isCellEditableProp]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    } // To run the callback immediatelly without waiting the timeout\n\n\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.unstable_setRowEditingEditCellValue : apiRef.current.unstable_setCellEditingEditCellValue; // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation,\n    unstable_getRowWithUpdatedValues: getRowWithUpdatedValues\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditingApi');\n};","/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  var _tree$parentId;\n\n  const children = (_tree$parentId = tree[parentId]) == null ? void 0 : _tree$parentId.children;\n\n  if (children == null) {\n    return [];\n  }\n\n  const validDescendants = [];\n\n  for (let i = 0; i < children.length; i += 1) {\n    const child = children[i];\n    const childNode = tree[child];\n\n    if (!skipAutoGeneratedRows || !childNode.isAutoGenerated) {\n      validDescendants.push(child);\n    }\n\n    validDescendants.push(...getTreeNodeDescendants(tree, childNode.id, skipAutoGeneratedRows));\n  }\n\n  return validDescendants;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowIdsSelector, gridRowGroupingNameSelector } from './gridRowsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { checkGridRowIdIsValid, getTreeNodeDescendants } from './gridRowsUtils';\n\nfunction getGridRowId(rowModel, getRowId, detailErrorMessage) {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n}\n\nconst convertRowsPropToState = ({\n  prevCache: prevState,\n  rows,\n  getRowId\n}) => {\n  let value;\n\n  if (rows) {\n    value = {\n      idRowsLookup: {},\n      idToIdLookup: {},\n      ids: []\n    };\n\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getGridRowId(row, getRowId);\n      value.idRowsLookup[id] = row;\n      value.idToIdLookup[id] = id;\n      value.ids.push(id);\n    }\n  } else {\n    value = prevState.value;\n  }\n\n  return {\n    value,\n    rowsBeforePartialUpdates: rows != null ? rows : prevState.rowsBeforePartialUpdates\n  };\n};\n\nconst getRowsStateFromCache = (rowsCache, previousTree, apiRef, rowCountProp, loadingProp) => {\n  const {\n    value\n  } = rowsCache;\n  const rowCount = rowCountProp != null ? rowCountProp : 0;\n  const groupingResponse = apiRef.current.unstable_applyStrategyProcessor('rowTreeCreation', _extends({}, value, {\n    previousTree\n  }));\n  const dataTopLevelRowCount = groupingResponse.treeDepth === 1 ? groupingResponse.ids.length : Object.values(groupingResponse.tree).filter(node => node.parent == null).length;\n  return _extends({}, groupingResponse, {\n    loading: loadingProp,\n    totalRowCount: Math.max(rowCount, groupingResponse.ids.length),\n    totalTopLevelRowCount: Math.max(rowCount, dataTopLevelRowCount)\n  });\n};\n\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.unstable_caches.rows = convertRowsPropToState({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    prevCache: {\n      value: {\n        idRowsLookup: {},\n        idToIdLookup: {},\n        ids: []\n      },\n      rowsBeforePartialUpdates: []\n    }\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache(apiRef.current.unstable_caches.rows, null, apiRef, props.rowCount, props.loading)\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    // Freeze rows for immutability\n    Object.freeze(props.rows);\n  }\n\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = React.useRef(null);\n  const getRow = React.useCallback(id => {\n    var _ref;\n\n    return (_ref = gridRowsLookupSelector(apiRef)[id]) != null ? _ref : null;\n  }, [apiRef]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback((newCache, throttle) => {\n    const run = () => {\n      timeout.current = null;\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache(apiRef.current.unstable_caches.rows, gridRowTreeSelector(apiRef), apiRef, props.rowCount, props.loading)\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n\n    apiRef.current.unstable_caches.rows = newCache;\n\n    if (!throttle) {\n      run();\n      return;\n    }\n\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n\n    if (throttleRemainingTimeMs > 0) {\n      timeout.current = setTimeout(run, throttleRemainingTimeMs);\n      return;\n    }\n\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    throttledRowsChange(convertRowsPropToState({\n      rows,\n      prevCache: apiRef.current.unstable_caches.rows,\n      getRowId: props.getRowId\n    }), true);\n  }, [apiRef, logger, props.getRowId, throttledRowsChange]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      // TODO: Add test with direct call to `apiRef.current.updateRows` in DataGrid after enabling the `apiRef` on the free plan.\n      throw new Error([\"MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.\", 'You need to upgrade to the DataGridPro component to unlock this feature.'].join('\\n'));\n    } // we remove duplicate updates. A server can batch updates, and send several updates for the same row in one fn call.\n\n\n    const uniqUpdates = new Map();\n    updates.forEach(update => {\n      const id = getGridRowId(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n\n      if (uniqUpdates.has(id)) {\n        uniqUpdates.set(id, _extends({}, uniqUpdates.get(id), update));\n      } else {\n        uniqUpdates.set(id, update);\n      }\n    });\n    const deletedRowIds = [];\n    const newStateValue = {\n      idRowsLookup: _extends({}, apiRef.current.unstable_caches.rows.value.idRowsLookup),\n      idToIdLookup: _extends({}, apiRef.current.unstable_caches.rows.value.idToIdLookup),\n      ids: [...apiRef.current.unstable_caches.rows.value.ids]\n    };\n    uniqUpdates.forEach((partialRow, id) => {\n      // eslint-disable-next-line no-underscore-dangle\n      if (partialRow._action === 'delete') {\n        delete newStateValue.idRowsLookup[id];\n        delete newStateValue.idToIdLookup[id];\n        deletedRowIds.push(id);\n        return;\n      }\n\n      const oldRow = apiRef.current.getRow(id);\n\n      if (!oldRow) {\n        newStateValue.idRowsLookup[id] = partialRow;\n        newStateValue.idToIdLookup[id] = id;\n        newStateValue.ids.push(id);\n        return;\n      }\n\n      newStateValue.idRowsLookup[id] = _extends({}, apiRef.current.getRow(id), partialRow);\n    });\n\n    if (deletedRowIds.length > 0) {\n      newStateValue.ids = newStateValue.ids.filter(id => !deletedRowIds.includes(id));\n    }\n\n    const state = _extends({}, apiRef.current.unstable_caches.rows, {\n      value: newStateValue\n    });\n\n    throttledRowsChange(state, true);\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(allRows.map(id => [id, idRowsLookup[id]]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n\n    if (!currentNode) {\n      throw new Error(`MUI: No row with id #${id} found`);\n    }\n\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => {\n    var _gridRowTreeSelector$;\n\n    return (_gridRowTreeSelector$ = gridRowTreeSelector(apiRef)[id]) != null ? _gridRowTreeSelector$ : null;\n  }, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n\n    if (applySorting) {\n      const groupNode = tree[groupId];\n\n      if (!groupNode) {\n        return [];\n      }\n\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        const node = tree[id];\n\n        if (!skipAutoGeneratedRows || !node.isAutoGenerated) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const oldIndex = allRows.findIndex(row => row === rowId);\n\n    if (oldIndex === -1 || oldIndex === targetIndex) {\n      return;\n    }\n\n    logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n    const updatedRows = [...allRows];\n    updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        ids: updatedRows\n      })\n    }));\n    apiRef.current.applySorting();\n  }, [apiRef, logger]);\n  const rowApi = {\n    getRow,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    setRowIndex,\n    updateRows,\n    setRowChildrenExpansion,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    getRowGroupChildren\n  };\n  /**\n   * EVENTS\n   */\n\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let rows;\n\n    if (apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` has not changed since the last row grouping\n      // We can keep the potential updates stored in `inputRowsAfterUpdates` on the new grouping\n      rows = undefined;\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      rows = props.rows;\n    }\n\n    throttledRowsChange(convertRowsPropToState({\n      rows,\n      getRowId: props.getRowId,\n      prevCache: apiRef.current.unstable_caches.rows\n    }), false);\n  }, [logger, apiRef, props.rows, props.getRowId, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.unstable_getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n  useGridApiMethod(apiRef, rowApi, 'GridRowApi');\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      if (timeout.current !== null) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []); // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    } // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n\n\n    if (apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows) {\n      return;\n    }\n\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange(convertRowsPropToState({\n      rows: props.rows,\n      getRowId: props.getRowId,\n      prevCache: apiRef.current.unstable_caches.rows\n    }), false);\n  }, [props.rows, props.rowCount, props.getRowId, logger, throttledRowsChange, apiRef]);\n};","import { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\n\nconst flatRowTreeCreationMethod = ({\n  ids,\n  idRowsLookup,\n  idToIdLookup,\n  previousTree\n}) => {\n  const tree = {};\n\n  for (let i = 0; i < ids.length; i += 1) {\n    const rowId = ids[i];\n\n    if (previousTree && previousTree[rowId]) {\n      tree[rowId] = previousTree[rowId];\n    } else {\n      tree[rowId] = {\n        id: rowId,\n        depth: 0,\n        parent: null,\n        groupingKey: '',\n        groupingField: null\n      };\n    }\n  }\n\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepth: 1,\n    idRowsLookup,\n    idToIdLookup,\n    ids\n  };\n};\n\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n\n  return findParentElementFromClassName(cell, gridClasses.row);\n} // TODO remove\n\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\n\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\n\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(`.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`);\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const row = getGridRowElement(root, id);\n\n  if (!row) {\n    return null;\n  }\n\n  return row.querySelector(`.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { buildWarning } from '../../../utils/warning';\nlet warnedOnceMissingColumn = false;\n\nfunction warnMissingColumn(field) {\n  console.warn([`MUI: You are calling getValue('${field}') but the column \\`${field}\\` is not defined.`, `Instead, you can access the data from \\`params.row.${field}\\`.`].join('\\n'));\n  warnedOnceMissingColumn = true;\n}\n\nconst getCellValueWarning = buildWarning([`MUI: You are calling getValue. This method is deprecated and will be removed in the next major version.`, 'Instead, you can access the data from `params.row`.']);\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\n\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  /**\n   * We want to remove the `getValue` param from `getRowParams`, `getCellParams` and `getBaseCellParams`\n   */\n\n  const getCellValueWithDeprecationWarning = React.useCallback((...args) => {\n    if (process.env.NODE_ENV !== 'production') {\n      getCellValueWarning();\n    }\n\n    return apiRef.current.getCellValue(...args);\n  }, [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n\n    if (!row) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row,\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getBaseCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      value: row[field],\n      colDef: apiRef.current.getColumn(field),\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      api: apiRef.current,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const value = apiRef.current.getCellValue(id, field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value\n    };\n\n    if (colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter({\n        id,\n        field: params.field,\n        value: params.value,\n        api: apiRef.current\n      });\n    }\n\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!colDef && !warnedOnceMissingColumn) {\n        warnMissingColumn(field);\n      }\n    }\n\n    if (!colDef || !colDef.valueGetter) {\n      const rowModel = apiRef.current.getRow(id);\n\n      if (!rowModel) {\n        throw new Error(`No row with id #${id} found`);\n      }\n\n      return rowModel[field];\n    }\n\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [apiRef, getBaseCellParams]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'GridParamsApi');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridVisibleSortedRowIdsSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { getVisibleRows, useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\n\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n\n  return [selectionModelProp];\n};\n\nexport const selectionStateInitializer = (state, props) => {\n  var _getSelectionModelPro;\n\n  return _extends({}, state, {\n    selection: (_getSelectionModelPro = getSelectionModelPropValue(props.selectionModel)) != null ? _getSelectionModelPro : []\n  });\n};\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\n\nexport const useGridSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const propSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.selectionModel, gridSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.selectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.unstable_updateControlState({\n    stateId: 'selection',\n    propModel: propSelectionModel,\n    propOnChange: props.onSelectionModelChange,\n    stateSelector: gridSelectionStateSelector,\n    changeEvent: 'selectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableMultipleSelection,\n    disableSelectionOnClick,\n    isRowSelectable,\n    pagination,\n    paginationMode\n  } = props;\n  const canHaveMultipleSelection = !disableMultipleSelection || checkboxSelection;\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    var _lastRowToggled$curre;\n\n    let endId = id;\n    const startId = (_lastRowToggled$curre = lastRowToggled.current) != null ? _lastRowToggled$curre : id;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (isSelected) {\n      const visibleRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n\n      if (startIndex === endIndex) {\n        return;\n      }\n\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setSelectionModel = React.useCallback(model => {\n    const currentModel = gridSelectionStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        selection: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const isRowSelected = React.useCallback(id => gridSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (isRowSelectable && !isRowSelectable(apiRef.current.getRowParams(id))) {\n      return;\n    }\n\n    lastRowToggled.current = id;\n\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n\n      if (isSelected) {\n        newSelection.push(id);\n      }\n\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n      if (isSelectionValid) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = isRowSelectable ? ids.filter(id => isRowSelectable(apiRef.current.getRowParams(id))) : ids;\n    let newSelection;\n\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n    if (isSelectionValid) {\n      apiRef.current.setSelectionModel(newSelection);\n    }\n  }, [apiRef, isRowSelectable, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`); // Using rows from all pages allow to select a range across several pages\n\n    const allPagesRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionApi = {\n    selectRow,\n    selectRows,\n    selectRowRange,\n    setSelectionModel,\n    getSelectedRows,\n    isRowSelected\n  };\n  useGridApiMethod(apiRef, selectionApi, 'GridSelectionApi');\n  /**\n   * EVENTS\n   */\n\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef); // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n\n    if (hasChanged) {\n      apiRef.current.setSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey; // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleCellClick = React.useCallback((params, event) => {\n    if (disableSelectionOnClick) {\n      return;\n    }\n\n    if (params.field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n\n    if (params.field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n\n    if (params.field) {\n      const column = apiRef.current.getColumn(params.field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    if (event.shiftKey && (canHaveMultipleSelection || checkboxSelection)) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableSelectionOnClick, canHaveMultipleSelection, checkboxSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      var _window$getSelection;\n\n      (_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value);\n    }\n  }, [apiRef, expandMouseRowRangeSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridVisibleSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    } // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n\n\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n\n    if (event.key.toLowerCase() === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', removeOutdatedSelection);\n  useGridApiEventHandler(apiRef, 'cellClick', handleCellClick);\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', handleRowSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventSelectionOnShift);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (propSelectionModel !== undefined) {\n      apiRef.current.setSelectionModel(propSelectionModel);\n    }\n  }, [apiRef, propSelectionModel]);\n  const isStateControlled = propSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled) {\n      return;\n    } // isRowSelectable changed\n\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(apiRef.current.getRowParams(id)));\n\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled]);\n  React.useEffect(() => {\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      const {\n        rows: currentPageRows\n      } = getVisibleRows(apiRef, {\n        pagination,\n        paginationMode\n      });\n      const currentPageRowsLookup = currentPageRows.reduce((acc, {\n        id\n      }) => {\n        acc[id] = true;\n        return acc;\n      }, {});\n      const firstSelectableRow = currentSelection.find(id => {\n        let isSelectable = true;\n\n        if (isRowSelectable) {\n          isSelectable = isRowSelectable(apiRef.current.getRowParams(id));\n        }\n\n        return isSelectable && currentPageRowsLookup[id]; // Check if the row is in the current page\n      });\n      apiRef.current.setSelectionModel(firstSelectableRow !== undefined ? [firstSelectableRow] : []);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, disableMultipleSelection, isRowSelectable, pagination, paginationMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef';\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\n\nexport const useGridSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[selectionColumn.field] != null;\n\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[selectionColumn.field] = selectionColumn;\n      columnsState.all = [selectionColumn.field, ...columnsState.all];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[selectionColumn.field];\n      columnsState.all = columnsState.all.filter(field => field !== selectionColumn.field);\n    }\n\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { isEnterKey } from '../../../utils/keyboardUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { gridRowIdsSelector, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const sortingStateInitializer = (state, props) => {\n  var _ref, _props$sortModel, _props$initialState, _props$initialState$s;\n\n  const sortModel = (_ref = (_props$sortModel = props.sortModel) != null ? _props$sortModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$s = _props$initialState.sorting) == null ? void 0 : _props$initialState$s.sortModel) != null ? _ref : [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\n\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.unstable_updateControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n\n    if (existingIdx > -1) {\n      if (!sortItem) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    var _col$sortingOrder2;\n\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n\n    if (existing) {\n      var _col$sortingOrder;\n\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder = col.sortingOrder) != null ? _col$sortingOrder : props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort == null ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder2 = col.sortingOrder) != null ? _col$sortingOrder2 : props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  /**\n   * API METHODS\n   */\n\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === GridFeatureModeConstant.server) {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: gridRowIdsSelector(state, apiRef.current.instanceId)\n          })\n        });\n      }\n\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.unstable_applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((column, direction, allowMultipleSorting) => {\n    if (!column.sortable) {\n      return;\n    }\n\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = !sortItem ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndex = React.useCallback(id => apiRef.current.getSortedRowIds().indexOf(id), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIndex,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'GridSortApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n\n    if (sortModelToExport.length === 0) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const sortModel = (_context$stateToResto = context.stateToRestore.sorting) == null ? void 0 : _context$stateToResto.sortModel;\n\n    if (sortModel == null) {\n      return params;\n    }\n\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    if (!params.sortRowList) {\n      return gridRowIdsSelector(apiRef);\n    }\n\n    const rowTree = gridRowTreeSelector(apiRef);\n    return params.sortRowList(Object.values(rowTree));\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderClick = React.useCallback(({\n    colDef\n  }, event) => {\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(colDef, undefined, allowMultipleSorting);\n  }, [sortColumn]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    colDef\n  }, event) => {\n    // Ctrl + Enter opens the column menu\n    if (isEnterKey(event.key) && !event.ctrlKey && !event.metaKey) {\n      sortColumn(colDef, undefined, event.shiftKey);\n    }\n  }, [sortColumn]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector'; // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight; // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n\n  return undefined;\n}\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\n\n\nexport const useGridScroll = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const windowRef = apiRef.current.windowRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridVisibleSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: windowRef.current.clientWidth,\n        scrollTop: windowRef.current.scrollLeft,\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n\n    if (params.rowIndex != null) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: windowRef.current.clientHeight,\n        scrollTop: windowRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n\n    return false;\n  }, [logger, apiRef, windowRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (windowRef.current && params.left != null && colRef.current) {\n      colRef.current.scrollLeft = params.left;\n      windowRef.current.scrollLeft = params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n\n    if (windowRef.current && params.top != null) {\n      windowRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [windowRef, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(windowRef != null && windowRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n\n    return {\n      top: windowRef.current.scrollTop,\n      left: windowRef.current.scrollLeft\n    };\n  }, [windowRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'GridScrollApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityRowHeightSelector, gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterStateSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortingStateSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\n\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight,\n    getRowSpacing\n  } = props;\n  const rowsHeightLookup = React.useRef({});\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const filterState = useGridSelector(apiRef, gridFilterStateSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortingState = useGridSelector(apiRef, gridSortingStateSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const hydrateRowsMeta = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const positions = [];\n      const densityFactor = gridDensityFactorSelector(state, apiRef.current.instanceId);\n      const currentRowHeight = gridDensityRowHeightSelector(state, apiRef.current.instanceId);\n      const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n        positions.push(acc);\n        let baseRowHeight;\n        const isResized = rowsHeightLookup.current[row.id] && rowsHeightLookup.current[row.id].isResized || false;\n\n        if (isResized) {\n          // do not recalculate resized row height and use the value from the lookup\n          baseRowHeight = rowsHeightLookup.current[row.id].value;\n        } else {\n          baseRowHeight = currentRowHeight;\n\n          if (getRowHeight) {\n            var _getRowHeight;\n\n            // Default back to base rowHeight if getRowHeight returns null or undefined.\n            baseRowHeight = (_getRowHeight = getRowHeight(_extends({}, row, {\n              densityFactor\n            }))) != null ? _getRowHeight : currentRowHeight;\n          }\n        } // We use an object to make simple to check if a height is already added or not\n\n\n        const initialHeights = {\n          base: baseRowHeight\n        };\n\n        if (getRowSpacing) {\n          var _spacing$top, _spacing$bottom;\n\n          const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n          const spacing = getRowSpacing(_extends({}, row, {\n            isFirstVisible: indexRelativeToCurrentPage === 0,\n            isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n            indexRelativeToCurrentPage\n          }));\n          initialHeights.spacingTop = (_spacing$top = spacing.top) != null ? _spacing$top : 0;\n          initialHeights.spacingBottom = (_spacing$bottom = spacing.bottom) != null ? _spacing$bottom : 0;\n        }\n\n        const sizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n        const finalRowHeight = Object.values(sizes).reduce((acc2, value) => acc2 + value, 0);\n        rowsHeightLookup.current[row.id] = {\n          value: baseRowHeight,\n          sizes,\n          isResized\n        };\n        return acc + finalRowHeight;\n      }, 0);\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, getRowSpacing, getRowHeight]);\n\n  const getTargetRowHeight = rowId => {\n    var _rowsHeightLookup$cur;\n\n    return ((_rowsHeightLookup$cur = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur.value) || rowHeight;\n  };\n\n  const getRowInternalSizes = rowId => {\n    var _rowsHeightLookup$cur2;\n\n    return (_rowsHeightLookup$cur2 = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur2.sizes;\n  };\n\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id] = {\n      value: height,\n      isResized: true,\n      sizes: _extends({}, rowsHeightLookup.current[id].sizes, {\n        base: height\n      })\n    };\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]); // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterState, paginationState, sortingState, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_getRowHeight: getTargetRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'GridRowsMetaApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"align\", \"children\", \"colIndex\", \"colDef\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onKeyDown\", \"onDragEnter\", \"onDragOver\"];\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { ownerDocument, capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\n\nfunction doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n\n    });\n  }\n\n  return cachedSupportsPreventScroll;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', showRightBorder && 'withBorder'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nlet warnedOnce = false;\n\nfunction GridCell(props) {\n  var _rootProps$experiment;\n\n  const {\n    align,\n    children,\n    colIndex,\n    cellMode,\n    field,\n    formattedValue,\n    hasFocus,\n    height,\n    isEditable,\n    rowId,\n    tabIndex,\n    value,\n    width,\n    className,\n    showRightBorder,\n    colSpan,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onMouseUp,\n    onKeyDown,\n    onDragEnter,\n    onDragOver\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = {\n    minWidth: width,\n    maxWidth: width,\n    minHeight: height,\n    maxHeight: height\n  };\n  React.useLayoutEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n\n        return;\n      }\n\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n\n  const column = apiRef.current.getColumn(field);\n  const managesOwnFocus = column.type === 'actions';\n\n  const renderChildren = () => {\n    if (children == null) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: classes.content,\n        children: valueToRender == null ? void 0 : valueToRender.toString()\n      });\n    }\n\n    if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        focusElementRef\n      });\n    }\n\n    return children;\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: cellRef,\n    className: clsx(className, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    tabIndex: (cellMode === 'view' || !isEditable) && !managesOwnFocus ? tabIndex : -1,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseDown: publish('cellMouseDown', onMouseDown),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  }, other, {\n    onFocus: handleFocus,\n    children: renderChildren()\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  formattedValue: PropTypes.any,\n  hasFocus: PropTypes.bool,\n  height: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridCell };","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing as useGridEditing_old, editingStateInitializer as editingStateInitializer_old } from '../hooks/features/editRows/useGridEditing.old';\nimport { useGridEditing as useGridEditing_new, editingStateInitializer as editingStateInitializer_new } from '../hooks/features/editRows/useGridEditing.new';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { selectionStateInitializer, useGridSelection } from '../hooks/features/selection/useGridSelection';\nimport { useGridSelectionPreProcessors } from '../hooks/features/selection/useGridSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nexport const useDataGridComponent = props => {\n  var _props$experimentalFe, _props$experimentalFe2;\n\n  const apiRef = useGridInitialization(undefined, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(selectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.newEditingApi ? editingStateInitializer_new : editingStateInitializer_old, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  const useGridEditing = (_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.newEditingApi ? useGridEditing_new : useGridEditing_old;\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  return apiRef;\n};","import * as React from 'react';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\n\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   */\n\n  const goToCell = React.useCallback((colIndex, rowIndex, closestColumnToUse = 'left') => {\n    var _visibleSortedRows$ro;\n\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    const rowId = (_visibleSortedRows$ro = visibleSortedRows[rowIndex]) == null ? void 0 : _visibleSortedRows$ro.id;\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n\n    logger.debug(`Navigating to cell row ${rowIndex}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const handleCellNavigationKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!currentPage.range || !dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = visibleSortedRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = currentPage.range.firstRowIndex;\n    const lastRowIndexInPage = currentPage.range.lastRowIndex;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'Enter':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, rowIndexBefore + 1);\n          }\n\n          break;\n        }\n\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, rowIndexBefore - 1);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, rowIndexBefore, 'right');\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, rowIndexBefore);\n          }\n\n          break;\n        }\n\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, rowIndexBefore, 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, rowIndexBefore, 'right');\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          const field = params.field;\n\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n\n          const colDef = params.colDef;\n\n          if (colDef && colDef.type === 'treeDataGroup') {\n            break;\n          }\n\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, nextRowIndex);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, firstRowIndexInPage);\n          } else {\n            goToCell(firstColIndex, rowIndexBefore);\n          }\n\n          break;\n        }\n\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, lastRowIndexInPage);\n          } else {\n            goToCell(lastColIndex, rowIndexBefore);\n          }\n\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPage, goToCell, goToHeader]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    var _currentPage$range$fi, _currentPage$range, _currentPage$range$la, _currentPage$range2;\n\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = (_currentPage$range$fi = (_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) != null ? _currentPage$range$fi : null;\n    const lastRowIndexInPage = (_currentPage$range$la = (_currentPage$range2 = currentPage.range) == null ? void 0 : _currentPage$range2.lastRowIndex) != null ? _currentPage$range$la : null;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            goToCell(colIndexBefore, firstRowIndexInPage);\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToHeader(colIndexBefore + 1, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToHeader(colIndexBefore - 1, event);\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPage, goToCell, goToHeader]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // Get the most recent params because the cell mode may have changed by another listener\n\n\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n\n    if (cellParams.cellMode !== GridCellModes.Edit && isNavigationKey(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', cellParams, event);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellNavigationKeyDown', handleCellNavigationKeyDown);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const setCellColSpanInfo = React.useCallback((rowId, columnIndex, cellColSpanInfo) => {\n    const sizes = lookup.current;\n\n    if (!sizes[rowId]) {\n      sizes[rowId] = {};\n    }\n\n    sizes[rowId][columnIndex] = cellColSpanInfo;\n  }, []);\n  const getCellColSpanInfo = React.useCallback((rowId, columnIndex) => {\n    var _lookup$current$rowId;\n\n    return (_lookup$current$rowId = lookup.current[rowId]) == null ? void 0 : _lookup$current$rowId[columnIndex];\n  }, []); // Calculate `colSpan` for the cell.\n\n  const calculateCellColSpan = React.useCallback(params => {\n    const {\n      columnIndex,\n      rowId,\n      minFirstColumnIndex,\n      maxLastColumnIndex\n    } = params;\n    const visibleColumns = apiRef.current.getVisibleColumns();\n    const columnsLength = visibleColumns.length;\n    const column = visibleColumns[columnIndex];\n    const colSpan = typeof column.colSpan === 'function' ? column.colSpan(apiRef.current.getCellParams(rowId, column.field)) : column.colSpan;\n\n    if (!colSpan || colSpan === 1) {\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan: 1,\n          width: column.computedWidth\n        }\n      });\n      return {\n        colSpan: 1\n      };\n    }\n\n    let width = column.computedWidth;\n\n    for (let j = 1; j < colSpan; j += 1) {\n      const nextColumnIndex = columnIndex + j; // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n\n      if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n        const nextColumn = visibleColumns[nextColumnIndex];\n        width += nextColumn.computedWidth;\n        setCellColSpanInfo(rowId, columnIndex + j, {\n          spannedByColSpan: true,\n          rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n          leftVisibleCellIndex: columnIndex\n        });\n      }\n\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan,\n          width\n        }\n      });\n    }\n\n    return {\n      colSpan\n    };\n  }, [apiRef, setCellColSpanInfo]); // Calculate `colSpan` for each cell in the row\n\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn\n      });\n\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [calculateCellColSpan]);\n  const columnSpanningApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo,\n    unstable_calculateColSpan: calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningApi, 'GridColumnSpanningAPI');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridVisibleRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityHeaderHeightSelector } from '../density/densitySelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]); // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns) => new Promise(resolve => {\n    if (!fields && !allColumns) {\n      resolve();\n      return;\n    }\n\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const buildPrintWindow = React.useCallback(title => {\n    const iframeEl = document.createElement('iframe');\n    iframeEl.id = 'grid-print-window'; // Without this 'onload' event won't fire in some browsers\n\n    iframeEl.src = window.location.href;\n    iframeEl.style.position = 'absolute';\n    iframeEl.style.width = '0px';\n    iframeEl.style.height = '0px';\n    iframeEl.title = title || document.title;\n    return iframeEl;\n  }, []);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _printWindow$contentW, _querySelector, _querySelector2;\n\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options); // Some agents, such as IE11 and Enzyme (as of 2 Jun 2020) continuously call the\n    // `onload` callback. This ensures that it is only called once.\n\n\n    printWindow.onload = null;\n    const printDoc = printWindow.contentDocument || ((_printWindow$contentW = printWindow.contentWindow) == null ? void 0 : _printWindow$contentW.document);\n\n    if (!printDoc) {\n      return;\n    }\n\n    const headerHeight = gridDensityHeaderHeightSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n    const gridCloneViewport = gridClone.querySelector(`.${gridClasses.virtualScroller}`); // Expand the viewport window to prevent clipping\n\n    gridCloneViewport.style.height = 'auto';\n    gridCloneViewport.style.width = 'auto';\n    gridCloneViewport.parentElement.style.width = 'auto';\n    gridCloneViewport.parentElement.style.height = 'auto'; // Allow to overflow to not hide the border of the last row\n\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    } // Expand container height to accommodate all rows\n\n\n    gridClone.style.height = `${rowsMeta.currentPageTotalHeight + headerHeight + gridToolbarElementHeight + gridFooterElementHeight}px`; // Remove all loaded elements from the current host\n\n    printDoc.body.innerHTML = '';\n    printDoc.body.appendChild(gridClone);\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n\n    if (normalizeOptions.copyStyles) {\n      const headStyleElements = doc.current.querySelectorAll(\"style, link[rel='stylesheet']\");\n\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n\n          if (sheet) {\n            let styleCSS = ''; // NOTE: for-of is not supported by IE\n\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    } // Trigger print\n\n\n    if (process.env.NODE_ENV !== 'test') {\n      printWindow.contentWindow.print();\n    }\n  }, [apiRef, doc]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu, _previousGridState$cu2;\n\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow); // Revert grid to previous state\n\n    apiRef.current.restoreState(previousGridState.current || {});\n\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu2 = _previousGridState$cu.columns) != null && _previousGridState$cu2.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n\n    apiRef.current.unstable_enableVirtualization(); // Clear local state\n\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n\n    previousGridState.current = apiRef.current.exportState(); // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n\n    if (props.pagination) {\n      const visibleRowCount = gridVisibleRowCountSelector(apiRef);\n      apiRef.current.setPageSize(visibleRowCount);\n    }\n\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n    apiRef.current.unstable_disableVirtualization();\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n    doc.current.body.appendChild(printWindow);\n\n    if (process.env.NODE_ENV === 'test') {\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => handlePrintWindowLoad(printWindow, options);\n\n      printWindow.contentWindow.onafterprint = () => handlePrintWindowAfterPrint(printWindow);\n    }\n  }, [props, logger, apiRef, buildPrintWindow, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'GridPrintExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { debounce, ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector } from '../columns';\nimport { gridDensityHeaderHeightSelector, gridDensityRowHeightSelector } from '../density';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nconst isTestEnvironment = process.env.NODE_ENV === 'test';\n\nconst hasScroll = ({\n  content,\n  container,\n  scrollBarSize\n}) => {\n  const hasScrollXIfNoYScrollBar = content.width > container.width;\n  const hasScrollYIfNoXScrollBar = content.height > container.height;\n  let hasScrollX = false;\n  let hasScrollY = false;\n\n  if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n    hasScrollX = hasScrollXIfNoYScrollBar;\n    hasScrollY = content.height + (hasScrollX ? scrollBarSize : 0) > container.height; // We recalculate the scroll x to consider the size of the y scrollbar.\n\n    if (hasScrollY) {\n      hasScrollX = content.width + scrollBarSize > container.width;\n    }\n  }\n\n  return {\n    hasScrollX,\n    hasScrollY\n  };\n};\n\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const warningShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(null);\n  const fullDimensionsRef = React.useRef(null);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const updateGridDimensionsRef = React.useCallback(() => {\n    var _apiRef$current$rootE;\n\n    const rootElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null ? void 0 : _apiRef$current$rootE.current;\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n\n    if (!rootDimensionsRef.current) {\n      return;\n    }\n\n    let scrollBarSize;\n\n    if (props.scrollbarSize != null) {\n      scrollBarSize = props.scrollbarSize;\n    } else if (!columnsTotalWidth || !rootElement) {\n      scrollBarSize = 0;\n    } else {\n      const doc = ownerDocument(rootElement);\n      const scrollDiv = doc.createElement('div');\n      scrollDiv.style.width = '99px';\n      scrollDiv.style.height = '99px';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.className = 'scrollDiv';\n      rootElement.appendChild(scrollDiv);\n      scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      rootElement.removeChild(scrollDiv);\n    }\n\n    const viewportOuterSize = {\n      width: rootDimensionsRef.current.width,\n      height: props.autoHeight ? rowsMeta.currentPageTotalHeight : rootDimensionsRef.current.height - headerHeight\n    };\n    const {\n      hasScrollX,\n      hasScrollY\n    } = hasScroll({\n      content: {\n        width: Math.round(columnsTotalWidth),\n        height: rowsMeta.currentPageTotalHeight\n      },\n      container: viewportOuterSize,\n      scrollBarSize\n    });\n    const viewportInnerSize = {\n      width: viewportOuterSize.width - (hasScrollY ? scrollBarSize : 0),\n      height: viewportOuterSize.height - (hasScrollX ? scrollBarSize : 0)\n    };\n    const newFullDimensions = {\n      viewportOuterSize,\n      viewportInnerSize,\n      hasScrollX,\n      hasScrollY\n    };\n    const prevDimensions = fullDimensionsRef.current;\n    fullDimensionsRef.current = newFullDimensions;\n\n    if (newFullDimensions.viewportInnerSize.width !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.width) || newFullDimensions.viewportInnerSize.height !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.height)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newFullDimensions.viewportInnerSize);\n    }\n  }, [apiRef, props.scrollbarSize, props.autoHeight, headerHeight, rowsMeta.currentPageTotalHeight]);\n  const resize = React.useCallback(() => {\n    updateGridDimensionsRef();\n    apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n  }, [apiRef, updateGridDimensionsRef]);\n  const getRootDimensions = React.useCallback(() => fullDimensionsRef.current, []);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return 0;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    }); // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n\n    if (props.getRowHeight) {\n      const renderContext = apiRef.current.unstable_getRenderContext();\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / gridDensityRowHeightSelector(apiRef));\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight]);\n  const dimensionsApi = {\n    resize,\n    getRootDimensions,\n    unstable_getViewportPageSize: getViewportPageSize,\n    unstable_updateGridDimensionsRef: updateGridDimensionsRef\n  };\n  useGridApiMethod(apiRef, dimensionsApi, 'GridDimensionsApi');\n  const debounceResize = React.useMemo(() => debounce(resize, 60), [resize]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size; // jsdom has no layout capabilities\n\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n\n    if (size.height === 0 && !warningShown.current && !props.autoHeight && !isJSDOM) {\n      logger.warn(['The parent of the grid has an empty height.', 'You need to make sure the container has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'You can find a solution in the docs:', 'https://mui.com/x/react-data-grid/layout/'].join('\\n'));\n      warningShown.current = true;\n    }\n\n    if (size.width === 0 && !warningShown.current && !isJSDOM) {\n      logger.warn(['The parent of the grid has an empty width.', 'You need to make sure the container has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'You can find a solution in the docs:', 'https://mui.com/x/react-data-grid/layout/'].join('\\n'));\n      warningShown.current = true;\n    }\n\n    if (isTestEnvironment) {\n      // We don't need to debounce the resize for tests.\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    debounceResize();\n  }, [props.autoHeight, debounceResize, logger, resize]);\n  useEnhancedEffect(() => updateGridDimensionsRef(), [updateGridDimensionsRef]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageSizeChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateGridDimensionsRef);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'columnOrderChange', props.onColumnOrderChange);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'cellFocusOut', props.onCellFocusOut);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'componentError', props.onError);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback(() => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {});\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'GridStatePersistenceApi');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  errorOverlayDefaultLabel: 'An error occurred.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search...',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Find column',\n  columnsPanelTextFieldPlaceholder: 'Column title',\n  columnsPanelDragIconLabel: 'Reorder column',\n  columnsPanelShowAllButton: 'Show all',\n  columnsPanelHideAllButton: 'Hide all',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Operator',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"currentColumn\", \"open\", \"id\", \"labelledby\", \"className\", \"children\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n    hideMenu,\n    open,\n    id,\n    labelledby,\n    className,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(MenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPreferencePanelsValue } from '../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridColumnsMenuItem = props => {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showColumns,\n    children: apiRef.current.getLocaleText('columnMenuShowColumns')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnsMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridFilterMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(column == null ? void 0 : column.field);\n  }, [apiRef, column == null ? void 0 : column.field, onClick]);\n\n  if (rootProps.disableColumnFilter || !(column != null && column.filterable)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showFilter,\n    children: apiRef.current.getLocaleText('columnMenuFilter')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridFilterMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst HideGridColMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const timeoutRef = React.useRef();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true); // do not allow to hide the last column with menu\n\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n\n    onClick(event); // time for the transition\n\n    timeoutRef.current = setTimeout(() => {\n      apiRef.current.setColumnVisibility(column == null ? void 0 : column.field, false);\n    }, 100);\n  }, [apiRef, column == null ? void 0 : column.field, onClick, disabled]);\n  React.useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  if (column.hideable === false) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HideGridColMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { HideGridColMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst SortGridMenuItems = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const sortDirection = React.useMemo(() => {\n    if (!column) {\n      return null;\n    }\n\n    const sortItem = sortModel.find(item => item.field === column.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [column, sortModel]);\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(column, direction);\n  }, [apiRef, column, onClick]);\n\n  if (!column || !column.sortable) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      disabled: sortDirection == null,\n      children: apiRef.current.getLocaleText('columnMenuUnsort')\n    }), /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      disabled: sortDirection === 'asc',\n      children: apiRef.current.getLocaleText('columnMenuSortAsc')\n    }), /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      disabled: sortDirection === 'desc',\n      children: apiRef.current.getLocaleText('columnMenuSortDesc')\n    })]\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? SortGridMenuItems.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { SortGridMenuItems };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnsMenuItem } from './GridColumnsMenuItem';\nimport { GridFilterMenuItem } from './GridFilterMenuItem';\nimport { HideGridColMenuItem } from './HideGridColMenuItem';\nimport { SortGridMenuItems } from './SortGridMenuItems';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  const {\n    hideMenu,\n    currentColumn\n  } = props;\n  const apiRef = useGridApiContext();\n  const defaultButtons = [/*#__PURE__*/_jsx(SortGridMenuItems, {\n    onClick: hideMenu,\n    column: currentColumn\n  }),\n  /*#__PURE__*/\n  // TODO update types to allow `onClick` and `column` to be optional\n  _jsx(GridFilterMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(HideGridColMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(GridColumnsMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  })];\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('columnMenu', defaultButtons, currentColumn);\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, props, {\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      onClick: hideMenu,\n      column: currentColumn\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n    className,\n    rowCount,\n    visibleRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  if (rowCount === 0) {\n    return null;\n  }\n\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n    className,\n    selectedRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    minHeight: 52,\n    // Match TablePagination min height\n    borderTop: `1px solid ${borderColor}`\n  };\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { gridVisibleTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridRowCount } from './GridRowCount';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(GridRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  }) : null;\n\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.components.Pagination && /*#__PURE__*/_jsx(rootProps.components.Pagination, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.pagination));\n\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridHeader = /*#__PURE__*/React.forwardRef(function GridHeader(props, ref) {\n  var _rootProps$components, _rootProps$components2;\n\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, props, {\n    children: [/*#__PURE__*/_jsx(rootProps.components.PreferencesPanel, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.preferencesPanel)), rootProps.components.Toolbar && /*#__PURE__*/_jsx(rootProps.components.Toolbar, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.toolbar))]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$components, _rootProps$components2;\n\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.components.Panel, _extends({\n    ref: ref,\n    as: rootProps.components.BasePopper,\n    open: columns.length > 0 && preferencePanelState.open\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.panel, props, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.basePopper, {\n    children: panelContent\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { alpha, styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (props, styles) => styles.overlay\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  height: '100%',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: alpha(theme.palette.background.default, theme.palette.action.disabledOpacity)\n}));\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  var _rootProps$rowsPerPag;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const lastPage = React.useMemo(() => Math.floor(paginationState.rowCount / (paginationState.pageSize || 1)), [paginationState.rowCount, paginationState.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const newPageSize = Number(event.target.value);\n    apiRef.current.setPageSize(newPageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((event, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pageSize;\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingPageSizeInRowsPerPageOptions = React.useRef(false);\n\n    if (!warnedOnceMissingPageSizeInRowsPerPageOptions.current && !rootProps.autoPageSize && !rootProps.rowsPerPageOptions.includes((_rootProps$pageSize = rootProps.pageSize) != null ? _rootProps$pageSize : paginationState.pageSize)) {\n      var _rootProps$pageSize2;\n\n      console.warn([`MUI: The page size \\`${(_rootProps$pageSize2 = rootProps.pageSize) != null ? _rootProps$pageSize2 : paginationState.pageSize}\\` is not preset in the \\`rowsPerPageOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingPageSizeInRowsPerPageOptions.current = true;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref // @ts-ignore\n    ,\n    component: \"div\",\n    count: paginationState.rowCount,\n    page: paginationState.page <= lastPage ? paginationState.page : lastPage,\n    rowsPerPageOptions: (_rootProps$rowsPerPag = rootProps.rowsPerPageOptions) != null && _rootProps$rowsPerPag.includes(paginationState.pageSize) ? rootProps.rowsPerPageOptions : [],\n    rowsPerPage: paginationState.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\n\nfunction GridPanelContent(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\n\nfunction GridPanelFooter(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\n\nconst isEnabled = () => true;\n\nfunction GridPanelWrapper(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TrapFocus, {\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled,\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      tabIndex: -1,\n      className: clsx(className, classes.root)\n    }, other))\n  });\n}\n\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    linkOperatorInput: ['filterFormLinkOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLinkOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLinkOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLinkOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\n\nconst getLinkOperatorLocaleKey = linkOperator => {\n  switch (linkOperator) {\n    case GridLinkOperator.And:\n      return 'filterPanelOperatorAnd';\n\n    case GridLinkOperator.Or:\n      return 'filterPanelOperatorOr';\n\n    default:\n      throw new Error('MUI: Invalid `linkOperator` property in the `GridFilterPanel`.');\n  }\n};\n\nconst getColumnLabel = col => col.headerName || col.field;\n\nconst collator = new Intl.Collator();\n\nfunction GridFilterForm(props) {\n  var _rootProps$components, _rootProps$components2, _baseSelectProps$nati, _rootProps$components3, _rootProps$components4, _rootProps$components5, _currentColumn$filter2;\n\n  const {\n    item,\n    hasMultipleFilters,\n    deleteFilter,\n    applyFilterChanges,\n    multiFilterOperator,\n    showMultiFilterOperators,\n    disableMultiFilterOperator,\n    applyMultiFilterOperatorChanges,\n    focusElementRef,\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    deleteIconProps = {},\n    linkOperatorInputProps = {},\n    operatorInputProps = {},\n    columnInputProps = {},\n    valueInputProps = {}\n  } = props;\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLinkOperatorColumn = hasMultipleFilters && linkOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isBaseSelectNative ? 'option' : MenuItem;\n  const sortedFilterableColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filterableColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      case 'desc':\n        return filterableColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      default:\n        return filterableColumns;\n    }\n  }, [filterableColumns, columnsSort]);\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n\n    if (!item.operatorValue || !currentColumn) {\n      return null;\n    }\n\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operatorValue);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const columnField = event.target.value;\n    const column = apiRef.current.getColumn(columnField);\n\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    } // try to keep the same operator when column change\n\n\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operatorValue) || column.filterOperators[0]; // Erase filter value if the input component is modified\n\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      columnField,\n      operatorValue: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operatorValue = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(operator => operator.value === operatorValue);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operatorValue,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLinkOperator = React.useCallback(event => {\n    const linkOperator = event.target.value === GridLinkOperator.And.toString() ? GridLinkOperator.And : GridLinkOperator.Or;\n    applyMultiFilterOperatorChanges(linkOperator);\n  }, [applyMultiFilterOperatorChanges]);\n\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n\n        valueRef == null ? void 0 : (_valueRef$current = valueRef.current) == null ? void 0 : _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        children: /*#__PURE__*/_jsx(rootProps.components.FilterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      })\n    })), /*#__PURE__*/_jsx(FilterFormLinkOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, linkOperatorInputProps, {\n      sx: _extends({\n        display: hasLinkOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, linkOperatorInputProps.sx || {}),\n      className: clsx(classes.linkOperatorInput, baseFormControlProps.className, linkOperatorInputProps.className),\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLinkOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLinkOperator,\n        disabled: !!disableMultiFilterOperator || linkOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseSelect, {\n        children: linkOperators.map(linkOperator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: linkOperator.toString(),\n          children: apiRef.current.getLocaleText(getLinkOperatorLocaleKey(linkOperator))\n        }, linkOperator.toString()))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.columnField || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseSelect, {\n        children: sortedFilterableColumns.map(col => /*#__PURE__*/_jsx(OptionComponent, {\n          value: col.field,\n          children: getColumnLabel(col)\n        }, col.field))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperators')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperators'),\n        id: operatorSelectId,\n        value: item.operatorValue,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$components5 = rootProps.componentsProps) == null ? void 0 : _rootProps$components5.baseSelect, {\n        children: currentColumn == null ? void 0 : (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: operator.value,\n          children: operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)\n        }, operator.value))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, valueInputProps, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputProps.className),\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps)) : null\n    }))]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  applyFilterChanges: PropTypes.func.isRequired,\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  columnInputProps: PropTypes.any,\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  deleteFilter: PropTypes.func.isRequired,\n  deleteIconProps: PropTypes.any,\n  disableMultiFilterOperator: PropTypes.bool,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  linkOperatorInputProps: PropTypes.any,\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n  operatorInputProps: PropTypes.any,\n  showMultiFilterOperators: PropTypes.bool,\n  valueInputProps: PropTypes.any\n} : void 0;\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"linkOperators\", \"columnsSort\", \"filterFormProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridAddIcon } from '../../icons';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridFilterPanel(props) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const lastFilterRef = React.useRef(null);\n\n  const {\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    filterFormProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const applyFilter = React.useCallback(item => {\n    apiRef.current.upsertFilterItem(item);\n  }, [apiRef]);\n  const applyFilterLinkOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLinkOperator(operator);\n  }, [apiRef]);\n  const getDefaultItem = React.useCallback(() => {\n    const firstColumnWithOperator = filterableColumns.find(colDef => {\n      var _colDef$filterOperato;\n\n      return (_colDef$filterOperato = colDef.filterOperators) == null ? void 0 : _colDef$filterOperato.length;\n    });\n\n    if (!firstColumnWithOperator) {\n      return null;\n    }\n\n    return {\n      columnField: firstColumnWithOperator.field,\n      operatorValue: firstColumnWithOperator.filterOperators[0].value,\n      id: Math.round(Math.random() * 1e5)\n    };\n  }, [filterableColumns]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n\n    const defaultItem = getDefaultItem();\n    return defaultItem ? [defaultItem] : [];\n  }, [filterModel.items, getDefaultItem]);\n  const hasMultipleFilters = items.length > 1;\n\n  const addNewFilter = () => {\n    const defaultItem = getDefaultItem();\n\n    if (!defaultItem) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: [...items, defaultItem]\n    }));\n  };\n\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = items.length === 1;\n    apiRef.current.deleteFilterItem(item);\n\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, items.length]);\n  React.useEffect(() => {\n    if (linkOperators.length > 0 && filterModel.linkOperator && !linkOperators.includes(filterModel.linkOperator)) {\n      applyFilterLinkOperator(linkOperators[0]);\n    }\n  }, [linkOperators, applyFilterLinkOperator, filterModel.linkOperator]);\n  React.useEffect(() => {\n    if (items.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [items.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelContent, {\n      children: items.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        multiFilterOperator: filterModel.linkOperator,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLinkOperator,\n        focusElementRef: index === items.length - 1 ? lastFilterRef : null,\n        linkOperators: linkOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id))\n    }), !rootProps.disableMultipleColumnsFiltering && /*#__PURE__*/_jsx(GridPanelFooter, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(GridAddIcon, {}),\n        color: \"primary\"\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      }))\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    linkOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFilterPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\n\nfunction GridPanelHeader(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridDragIcon } from '../icons';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})(() => ({\n  padding: '8px 0px 8px 8px'\n}));\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1px 8px 1px 7px',\n  [`& .${switchClasses.root}`]: {\n    marginRight: theme.spacing(0.5)\n  }\n}));\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nexport function GridColumnsPanel(props) {\n  var _rootProps$components, _rootProps$components3, _rootProps$components4;\n\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n\n  const toggleAllColumns = React.useCallback(isVisible => {\n    // TODO v6: call `setColumnVisibilityModel` directly\n    apiRef.current.updateColumns(columns.map(col => {\n      if (col.hideable !== false) {\n        return {\n          field: col.field,\n          hide: !isVisible\n        };\n      }\n\n      return col;\n    }));\n  }, [apiRef, columns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    if (!searchValue) {\n      return columns;\n    }\n\n    const searchValueToCheck = searchValue.toLowerCase();\n    return columns.filter(column => (column.headerName || column.field).toLowerCase().indexOf(searchValueToCheck) > -1);\n  }, [columns, searchValue]);\n  React.useEffect(() => {\n    searchInputRef.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, props, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        children: currentColumns.map(column => {\n          var _rootProps$components2;\n\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.components.BaseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                color: \"primary\",\n                size: \"small\"\n              }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(GridDragIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(false),\n        color: \"primary\"\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })), /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(true),\n        color: \"primary\"\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      }))]\n    })]\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { generateUtilityClasses } from '@mui/material';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _apiRef$current$colum;\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const anchorEl = (_apiRef$current$colum = apiRef.current.columnHeadersContainerElementRef) == null ? void 0 : _apiRef$current$colum.current;\n\n  if (!anchorEl) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"];\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst EmptyCell = ({\n  width,\n  height\n}) => {\n  if (!width || !height) {\n    return null;\n  }\n\n  const style = {\n    width,\n    height\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nfunction GridRow(props) {\n  var _apiRef$current$getRo;\n\n  const {\n    selected,\n    rowId,\n    row,\n    index,\n    style: styleProp,\n    rowHeight,\n    className,\n    visibleColumns,\n    renderedColumns,\n    containerWidth,\n    firstColumnToRender,\n    cellFocus,\n    cellTabIndex,\n    editRowsState,\n    isLastVisible = false,\n    onClick,\n    onDoubleClick,\n    onMouseEnter,\n    onMouseLeave\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ariaRowIndex = index + 2; // 1 for the header row and 1 as it's 1-based\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight,\n    minHeight: rowHeight\n  });\n\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    style[property] = sizes.spacingBottom;\n  }\n\n  let rowClassName = null;\n\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - currentPage.range.firstRowIndex;\n\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n\n    rowClassName = rootProps.getRowClassName(rowParams);\n  }\n\n  const cells = [];\n\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n\n      let updatedRow = row;\n\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellState, {\n        api: apiRef.current\n      });\n\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      var _rootProps$components;\n\n      const {\n        colSpan,\n        width\n      } = cellColSpanInfo.cellProps;\n      cells.push( /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n        value: cellParams.value,\n        field: column.field,\n        width: width,\n        rowId: rowId,\n        height: rowHeight,\n        showRightBorder: showRightBorder,\n        formattedValue: cellParams.formattedValue,\n        align: column.align || 'left',\n        cellMode: cellParams.cellMode,\n        colIndex: indexRelativeToAllColumns,\n        isEditable: cellParams.isEditable,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        className: clsx(classNames),\n        colSpan: colSpan\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n        children: content\n      }), column.field));\n    }\n  }\n\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(rowClassName, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style,\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  }, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth,\n      height: rowHeight\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.any.isRequired,\n  rowHeight: PropTypes.number.isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n    sortingOrder\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.components.ColumnSortedAscendingIcon : rootProps.components.ColumnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"message\", \"hasError\", \"errorInfo\"];\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDensityRowHeightSelector } from '../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// TODO v6: rename to GridErrorOverlay\nexport const ErrorOverlay = /*#__PURE__*/React.forwardRef(function ErrorOverlay(props, ref) {\n  const {\n    message\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const defaultLabel = apiRef.current.getLocaleText('errorOverlayDefaultLabel');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    sx: {\n      width: '100%',\n      minHeight: 2 * rowHeight\n    }\n  }, other, {\n    children: message || defaultLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUISwitch from '@mui/material/Switch';\nimport MUIButton from '@mui/material/Button';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport { GridArrowDownwardIcon, GridArrowUpwardIcon, GridCell, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridColumnMenu, GridColumnsPanel, GridFilterAltIcon, GridFilterListIcon, GridFilterPanel, GridFooter, GridHeader, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridPreferencesPanel, GridRow, GridSaveAltIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridMoreVertIcon, GridExpandMoreIcon, GridKeyboardArrowRight, GridAddIcon, GridRemoveIcon, GridDragIcon, GridColumnHeaderFilterIconButton } from '../components';\nimport { GridColumnUnsortedIcon } from '../components/columnHeaders/GridColumnUnsortedIcon';\nimport { ErrorOverlay } from '../components/ErrorOverlay';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nconst DEFAULT_GRID_ICON_SLOTS_COMPONENTS = {\n  BooleanCellTrueIcon: GridCheckIcon,\n  BooleanCellFalseIcon: GridCloseIcon,\n  ColumnMenuIcon: GridTripleDotsVerticalIcon,\n  OpenFilterButtonIcon: GridFilterListIcon,\n  FilterPanelDeleteIcon: GridCloseIcon,\n  ColumnFilteredIcon: GridFilterAltIcon,\n  ColumnSelectorIcon: GridColumnIcon,\n  ColumnUnsortedIcon: GridColumnUnsortedIcon,\n  ColumnSortedAscendingIcon: GridArrowUpwardIcon,\n  ColumnSortedDescendingIcon: GridArrowDownwardIcon,\n  ColumnResizeIcon: GridSeparatorIcon,\n  DensityCompactIcon: GridViewHeadlineIcon,\n  DensityStandardIcon: GridTableRowsIcon,\n  DensityComfortableIcon: GridViewStreamIcon,\n  ExportIcon: GridSaveAltIcon,\n  MoreActionsIcon: GridMoreVertIcon,\n  TreeDataCollapseIcon: GridExpandMoreIcon,\n  TreeDataExpandIcon: GridKeyboardArrowRight,\n  GroupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  GroupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  DetailPanelExpandIcon: GridAddIcon,\n  DetailPanelCollapseIcon: GridRemoveIcon,\n  RowReorderIcon: GridDragIcon\n};\n/**\n * TODO: Differentiate community and pro value and interface\n */\n\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, DEFAULT_GRID_ICON_SLOTS_COMPONENTS, {\n  BaseCheckbox: MUICheckbox,\n  BaseTextField: MUITextField,\n  BaseFormControl: MUIFormControl,\n  BaseSelect: MUISelect,\n  BaseSwitch: MUISwitch,\n  BaseButton: MUIButton,\n  BaseTooltip: MUITooltip,\n  BasePopper: MUIPopper,\n  Cell: GridCell,\n  ColumnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  ColumnMenu: GridColumnMenu,\n  ErrorOverlay,\n  Footer: GridFooter,\n  Header: GridHeader,\n  Toolbar: null,\n  PreferencesPanel: GridPreferencesPanel,\n  LoadingOverlay: GridLoadingOverlay,\n  NoResultsOverlay: GridNoResultsOverlay,\n  NoRowsOverlay: GridNoRowsOverlay,\n  Pagination: GridPagination,\n  FilterPanel: GridFilterPanel,\n  ColumnsPanel: GridColumnsPanel,\n  Panel: GridPanel,\n  Row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderFilterIconButton(props) {\n  var _rootProps$components;\n\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel();\n    }\n\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick]);\n\n  if (!counter) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(rootProps.components.ColumnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  });\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS, GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { GridDensityTypes, GridEditModes, GridFeatureModeConstant } from '../models';\nconst DATA_GRID_FORCED_PROPS = {\n  apiRef: undefined,\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  disableMultipleSelection: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  disableColumnResize: true,\n  signature: 'DataGrid'\n};\nexport const MAX_PAGE_SIZE = 100;\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\n\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBuffer: 3,\n  rowBuffer: 3,\n  columnThreshold: 3,\n  rowThreshold: 3,\n  density: GridDensityTypes.Standard,\n  disableExtendRowFullWidth: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleSelection: false,\n  disableMultipleColumnsSorting: false,\n  disableSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterMode: GridFeatureModeConstant.client,\n  headerHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: GridFeatureModeConstant.client,\n  rowHeight: 52,\n  rowsPerPageOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellRightBorder: false,\n  showColumnRightBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: GridFeatureModeConstant.client,\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false\n};\nexport const useDataGridProps = inProps => {\n  if (inProps.pageSize > MAX_PAGE_SIZE) {\n    throw new Error(`'props.pageSize' cannot exceed 100 in DataGrid.`);\n  }\n\n  const themedProps = useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  });\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const components = React.useMemo(() => {\n    const overrides = themedProps.components;\n\n    if (!overrides) {\n      return _extends({}, DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\n    }\n\n    const mergedComponents = {};\n    Object.entries(DATA_GRID_DEFAULT_SLOTS_COMPONENTS).forEach(([key, defaultComponent]) => {\n      mergedComponents[key] = overrides[key] === undefined ? defaultComponent : overrides[key];\n    });\n    return mergedComponents;\n  }, [themedProps.components]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    components\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, components]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  overflow: 'auto',\n  // See https://github.com/mui/mui-x/issues/4360\n  position: 'relative',\n  '@media print': {\n    overflow: 'hidden'\n  }\n});\nconst GridVirtualScroller = /*#__PURE__*/React.forwardRef(function GridVirtualScroller(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    overflowedContent\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const {\n    className,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    overflowedContent: !rootProps.autoHeight && (style == null ? void 0 : style.minHeight) === 'auto'\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    style: style\n  }, other));\n});\nexport { GridVirtualScrollerContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"style\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef } from '@mui/material/utils';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityRowHeightSelector } from '../density/densitySelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridEditRowsStateSelector } from '../editRows/gridEditRowsSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { clamp } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../selection/gridSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils'; // Uses binary search to avoid looping through all possible positions\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function getIndexFromScroll(offset, positions, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const itemOffset = positions[pivot];\n  return offset <= itemOffset ? getIndexFromScroll(offset, positions, sliceStart, pivot) : getIndexFromScroll(offset, positions, pivot + 1, sliceEnd);\n}\nexport const getRenderableIndexes = ({\n  firstIndex,\n  lastIndex,\n  buffer,\n  minFirstIndex,\n  maxLastIndex\n}) => {\n  return [clamp(firstIndex - buffer, minFirstIndex, maxLastIndex), clamp(lastIndex + buffer, minFirstIndex, maxLastIndex)];\n};\nexport const useGridVirtualScroller = props => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const {\n    ref,\n    disableVirtualization,\n    onRenderZonePositioning,\n    renderZoneMinColumnIndex = 0,\n    renderZoneMaxColumnIndex = visibleColumns.length,\n    getRowProps\n  } = props;\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const renderZoneRef = React.useRef(null);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(ref, rootRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const scrollPosition = React.useRef({\n    top: 0,\n    left: 0\n  });\n  const [containerWidth, setContainerWidth] = React.useState(null);\n  const prevTotalWidth = React.useRef(columnsTotalWidth);\n  const computeRenderContext = React.useCallback(() => {\n    if (disableVirtualization) {\n      return {\n        firstRowIndex: 0,\n        lastRowIndex: currentPage.rows.length,\n        firstColumnIndex: 0,\n        lastColumnIndex: visibleColumns.length\n      };\n    }\n\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const firstRowIndex = getIndexFromScroll(top, rowsMeta.positions);\n    const lastRowIndex = rootProps.autoHeight ? firstRowIndex + currentPage.rows.length : getIndexFromScroll(top + rootRef.current.clientHeight, rowsMeta.positions);\n    const firstColumnIndex = getIndexFromScroll(left, columnPositions);\n    const lastColumnIndex = getIndexFromScroll(left + containerWidth, columnPositions);\n    return {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }, [disableVirtualization, rowsMeta.positions, rootProps.autoHeight, currentPage.rows.length, columnPositions, containerWidth, visibleColumns.length]);\n  React.useEffect(() => {\n    if (disableVirtualization) {\n      renderZoneRef.current.style.transform = `translate3d(0px, 0px, 0px)`;\n    } else {\n      // TODO a scroll reset should not be necessary\n      rootRef.current.scrollLeft = 0;\n      rootRef.current.scrollTop = 0;\n    }\n  }, [disableVirtualization]);\n  React.useEffect(() => {\n    setContainerWidth(rootRef.current.clientWidth);\n  }, [rowsMeta.currentPageTotalHeight]);\n  const handleResize = React.useCallback(() => {\n    if (rootRef.current) {\n      setContainerWidth(rootRef.current.clientWidth);\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  const updateRenderZonePosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const [initialFirstColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: renderZoneMinColumnIndex,\n      maxLastIndex: renderZoneMaxColumnIndex,\n      buffer: rootProps.columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const top = gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender];\n    const left = gridColumnPositionsSelector(apiRef)[firstColumnToRender]; // Call directly the selector because it might be outdated when this method is called\n\n    renderZoneRef.current.style.transform = `translate3d(${left}px, ${top}px, 0px)`;\n\n    if (typeof onRenderZonePositioning === 'function') {\n      onRenderZonePositioning({\n        top,\n        left\n      });\n    }\n  }, [apiRef, currentPage.rows, onRenderZonePositioning, renderZoneMinColumnIndex, renderZoneMaxColumnIndex, rootProps.columnBuffer, rootProps.rowBuffer]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateRenderZonePosition(renderContext);\n    }\n  }, [renderContext, updateRenderZonePosition]);\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    setRenderContext(nextRenderContext);\n    prevRenderContext.current = nextRenderContext;\n  }, [setRenderContext, prevRenderContext]);\n  React.useEffect(() => {\n    if (containerWidth == null) {\n      return;\n    }\n\n    const initialRenderContext = computeRenderContext();\n    updateRenderContext(initialRenderContext);\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const params = {\n      top,\n      left,\n      renderContext: initialRenderContext\n    };\n    apiRef.current.publishEvent('rowsScroll', params);\n  }, [apiRef, computeRenderContext, containerWidth, updateRenderContext]);\n\n  const handleScroll = event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n    scrollPosition.current.top = scrollTop;\n    scrollPosition.current.left = scrollLeft; // On iOS and macOS, negative offsets are possible when swiping past the start\n\n    if (scrollLeft < 0 || scrollTop < 0 || !prevRenderContext.current) {\n      return;\n    } // When virtualization is disabled, the context never changes during scroll\n\n\n    const nextRenderContext = disableVirtualization ? prevRenderContext.current : computeRenderContext();\n    const topRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstRowIndex - prevRenderContext.current.firstRowIndex);\n    const bottomRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastRowIndex - prevRenderContext.current.lastRowIndex);\n    const topColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstColumnIndex - prevRenderContext.current.firstColumnIndex);\n    const bottomColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastColumnIndex - prevRenderContext.current.lastColumnIndex);\n    const shouldSetState = topRowsScrolledSincePreviousRender >= rootProps.rowThreshold || bottomRowsScrolledSincePreviousRender >= rootProps.rowThreshold || topColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || bottomColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || prevTotalWidth.current !== columnsTotalWidth; // TODO v6: rename event to a wider name, it's not only fired for row scrolling\n\n    apiRef.current.publishEvent('rowsScroll', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: shouldSetState ? nextRenderContext : prevRenderContext.current\n    }, event);\n\n    if (shouldSetState) {\n      // Prevents batching render context changes\n      ReactDOM.flushSync(() => {\n        updateRenderContext(nextRenderContext);\n      });\n      prevTotalWidth.current = columnsTotalWidth;\n    }\n  };\n\n  const handleWheel = event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  };\n\n  const handleTouchMove = event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  };\n\n  const getRows = (params = {\n    renderContext\n  }) => {\n    const {\n      renderContext: nextRenderContext,\n      minFirstColumn = renderZoneMinColumnIndex,\n      maxLastColumn = renderZoneMaxColumnIndex,\n      availableSpace = containerWidth\n    } = params;\n\n    if (!currentPage.range || !nextRenderContext || availableSpace == null) {\n      return null;\n    }\n\n    const rowBuffer = !disableVirtualization ? rootProps.rowBuffer : 0;\n    const columnBuffer = !disableVirtualization ? rootProps.columnBuffer : 0;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rowBuffer\n    });\n    const renderedRows = [];\n\n    for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n      const row = currentPage.rows[i];\n      renderedRows.push(row);\n      apiRef.current.unstable_calculateColSpan({\n        rowId: row.id,\n        minFirstColumn,\n        maxLastColumn\n      });\n    }\n\n    const [initialFirstColumnToRender, lastColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: minFirstColumn,\n      maxLastIndex: maxLastColumn,\n      buffer: columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    const rows = [];\n\n    for (let i = 0; i < renderedRows.length; i += 1) {\n      var _rootProps$components;\n\n      const {\n        id,\n        model\n      } = renderedRows[i];\n      const lastVisibleRowIndex = firstRowToRender + i === currentPage.rows.length - 1;\n      const targetRowHeight = apiRef.current.unstable_getRowHeight(id);\n      let isSelected;\n\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else if (typeof rootProps.isRowSelectable === 'function') {\n        isSelected = rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n      } else {\n        isSelected = true;\n      }\n\n      rows.push( /*#__PURE__*/_jsx(rootProps.components.Row, _extends({\n        row: model,\n        rowId: id,\n        rowHeight: targetRowHeight,\n        cellFocus: cellFocus // TODO move to inside the row\n        ,\n        cellTabIndex: cellTabIndex // TODO move to inside the row\n        ,\n        editRowsState: editRowsState // TODO move to inside the row\n        ,\n        renderedColumns: renderedColumns,\n        visibleColumns: visibleColumns,\n        firstColumnToRender: firstColumnToRender,\n        lastColumnToRender: lastColumnToRender,\n        selected: isSelected,\n        index: currentPage.range.firstRowIndex + firstRowToRender + i,\n        containerWidth: availableSpace,\n        isLastVisible: lastVisibleRowIndex\n      }, typeof getRowProps === 'function' ? getRowProps(id, model) : {}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.row), id));\n    }\n\n    return rows;\n  };\n\n  const needsHorizontalScrollbar = containerWidth && columnsTotalWidth > containerWidth;\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(rowsMeta.currentPageTotalHeight, 1);\n    let shouldExtendContent = false;\n\n    if (rootRef != null && rootRef.current && height <= (rootRef == null ? void 0 : rootRef.current.clientHeight)) {\n      shouldExtendContent = true;\n    }\n\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height,\n      minHeight: shouldExtendContent ? '100%' : 'auto'\n    };\n\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = 2 * rowHeight; // Give room to show the overlay when there's no row.\n    }\n\n    return size;\n  }, [rootRef, columnsTotalWidth, rowsMeta.currentPageTotalHeight, currentPage.rows.length, needsHorizontalScrollbar, rootProps.autoHeight, rowHeight]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n\n  if (rootProps.autoHeight && currentPage.rows.length === 0) {\n    contentSize.height = 2 * rowHeight; // Give room to show the overlay when there no rows.\n  }\n\n  const rootStyle = {};\n\n  if (!needsHorizontalScrollbar) {\n    rootStyle.overflowX = 'hidden';\n  }\n\n  const getRenderContext = React.useCallback(() => {\n    return prevRenderContext.current;\n  }, []);\n  apiRef.current.unstable_getRenderContext = getRenderContext;\n  return {\n    renderContext,\n    updateRenderZonePosition,\n    getRows,\n    getRootProps: (_ref = {}) => {\n      let {\n        style = {}\n      } = _ref,\n          other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n      return _extends({\n        ref: handleRef,\n        onScroll: handleScroll,\n        onWheel: handleWheel,\n        onTouchMove: handleTouchMove,\n        style: _extends({}, style, rootStyle)\n      }, other);\n    },\n    getContentProps: ({\n      style = {}\n    } = {}) => ({\n      style: _extends({}, style, contentSize)\n    }),\n    getRenderZoneProps: () => ({\n      ref: renderZoneRef\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"disableVirtualization\"];\nimport * as React from 'react';\nimport { GridVirtualScroller } from './virtualization/GridVirtualScroller';\nimport { GridVirtualScrollerContent } from './virtualization/GridVirtualScrollerContent';\nimport { GridVirtualScrollerRenderZone } from './virtualization/GridVirtualScrollerRenderZone';\nimport { useGridVirtualScroller } from '../hooks/features/virtualization/useGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DataGridVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridVirtualScroller(props, ref) {\n  const {\n    className,\n    disableVirtualization\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    getRows\n  } = useGridVirtualScroller({\n    ref,\n    disableVirtualization\n  });\n  return /*#__PURE__*/_jsx(GridVirtualScroller, _extends({\n    className: className\n  }, getRootProps(other), {\n    children: /*#__PURE__*/_jsx(GridVirtualScrollerContent, _extends({}, getContentProps(), {\n      children: /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: getRows()\n      }))\n    }))\n  }));\n});\nexport { DataGridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Badge from '@mui/material/Badge';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n\n  if (direction === 'asc') {\n    Icon = icons.ColumnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.ColumnSortedDescendingIcon;\n  } else {\n    Icon = icons.ColumnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\n\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n    direction,\n    index,\n    sortingOrder\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.components, direction, classes.icon, sortingOrder);\n\n  if (!iconElement) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    children: iconElement\n  });\n\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\n\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})(({\n  theme\n}) => ({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: theme.typography.fontWeightMedium\n}));\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\n\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$components;\n\n  const {\n    label,\n    description,\n    columnWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  React.useEffect(() => {\n    if (!description && titleRef && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [titleRef, columnWidth, description, label]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides;\n\n(function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n})(GridColumnHeaderSeparatorSides || (GridColumnHeaderSeparatorSides = {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n    height,\n    side = GridColumnHeaderSeparatorSides.Right\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnRightBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\n\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    column,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(column.field);\n  }, [apiRef, column.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(IconButton, {\n      ref: iconButtonRef,\n      tabIndex: -1,\n      className: classes.button,\n      \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      size: \"small\",\n      onClick: handleMenuIconClick,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      \"aria-controls\": columnMenuId,\n      id: columnMenuButtonId,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnMenuIcon, {\n        fontSize: \"small\"\n      })\n    })\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const currentColumn = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n    apiRef.current.hideColumnMenu();\n  }, [apiRef]);\n\n  if (!target) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${currentColumn.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      currentColumn: currentColumn,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    column,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    filterItemsCounter\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0; // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n\n  const isColumnNumeric = column.type === 'number';\n  const slots = {\n    root: ['columnHeader', column.headerAlign === 'left' && 'columnHeader--alignLeft', column.headerAlign === 'center' && 'columnHeader--alignCenter', column.headerAlign === 'right' && 'columnHeader--alignRight', column.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', showRightBorder && 'withBorder'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderItem(props) {\n  var _apiRef$current$getRo, _column$sortingOrder, _rootProps$components, _column$headerName, _rootProps$components2;\n\n  const {\n    column,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLastColumn,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    extendRowFullWidth,\n    disableReorder,\n    separatorSide\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  let headerComponent = null;\n\n  if (column.renderHeader) {\n    headerComponent = column.renderHeader(apiRef.current.getColumnHeaderParams(column.field));\n  }\n\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(column.field), event);\n  }, [apiRef, column.field]);\n  const mouseEventsHandlers = {\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  };\n  const draggableEventHandlers = {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  };\n  const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n  const showRightBorder = !isLastColumn ? rootProps.showColumnRightBorder : !removeLastBorderRight && !extendRowFullWidth;\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const width = column.computedWidth;\n  let ariaSort = 'none';\n\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !column.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    column: column,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n\n  const sortingOrder = (_column$sortingOrder = column.sortingOrder) != null ? _column$sortingOrder : rootProps.sortingOrder;\n\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.components.ColumnHeaderFilterIconButton, _extends({\n      field: column.field,\n      counter: filterItemsCounter\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.columnHeaderFilterIconButton)), column.sortable && !column.hideSortIcons && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder\n    })]\n  });\n\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null ? void 0 : elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof column.headerClassName === 'function' ? column.headerClassName({\n    field: column.field,\n    colDef: column\n  }) : column.headerClassName;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: headerCellRef,\n    className: clsx(classes.root, headerClassName),\n    \"data-field\": column.field,\n    style: {\n      width,\n      minWidth: width,\n      maxWidth: width\n    },\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, mouseEventsHandlers, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: !rootProps.disableColumnReorder && !disableReorder && !column.disableReorder\n    }, draggableEventHandlers, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent || /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: (_column$headerName = column.headerName) != null ? _column$headerName : column.field,\n            description: column.description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, {\n      resizable: !rootProps.disableColumnResize && !!column.resizable,\n      resizing: isResizing,\n      height: headerHeight,\n      onMouseDown: publish('columnSeparatorMouseDown'),\n      side: separatorSide\n    }), /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n      columnMenuId: columnMenuId,\n      columnMenuButtonId: columnMenuButtonId,\n      field: column.field,\n      open: columnMenuOpen,\n      target: iconButtonRef.current,\n      ContentComponent: rootProps.components.ColumnMenu,\n      contentComponentProps: (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.columnMenu,\n      onExited: handleExited\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colIndex: PropTypes.number.isRequired,\n  column: PropTypes.object.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  extendRowFullWidth: PropTypes.bool.isRequired,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLastColumn: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nexport { GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef } from '@mui/material/utils';\nimport { defaultMemoize } from 'reselect';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector } from '../focus/gridFocusStateSelector';\nimport { gridDensityHeaderHeightSelector } from '../density/densitySelector';\nimport { gridFilterActiveItemsLookupSelector } from '../filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnMenuSelector } from '../columnMenu/columnMenuSelector';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isUIEvent(event) {\n  return !!event.target;\n}\n\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]); // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n\n    if (!innerRef.current) {\n      return;\n    } // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n\n\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n\n    prevScrollLeft.current = left; // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n\n    let canUpdateInnerPosition = false;\n\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    } // Pass directly the render context to avoid waiting for the next render\n\n\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScroll);\n\n  const getColumns = (params, other = {}) => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n\n    if (!nextRenderContext) {\n      return null;\n    }\n\n    const columns = [];\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const column = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const hasTabbableElement = !(tabIndexState === null && cellTabIndexState === null);\n      const tabIndex = tabIndexState !== null && tabIndexState.field === column.field || isFirstColumn && !hasTabbableElement ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === column.field;\n      const open = columnMenuState.open && columnMenuState.field === column.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[column.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[column.field] && filterColumnLookup[column.field].length,\n        headerHeight: headerHeight,\n        isDragging: column.field === dragCol,\n        column: column,\n        colIndex: columnIndex,\n        isResizing: resizeCol === column.field,\n        isLastColumn: columnIndex === visibleColumns.length - 1,\n        extendRowFullWidth: !rootProps.disableExtendRowFullWidth,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), column.field));\n    }\n\n    return columns;\n  };\n\n  const rootStyle = {\n    minHeight: headerHeight,\n    maxHeight: headerHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumns,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      'aria-rowindex': 1,\n      role: 'row'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../hooks/features/density/densitySelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\n\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const height = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n  }, []);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current); // Avoid freeze and inertia.\n\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const toggleDragging = React.useCallback(() => {\n    setDragging(prevDragging => !prevDragging);\n  }, []);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', toggleDragging);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', toggleDragging);\n  return dragging ? /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    onDragOver: handleDragOver,\n    style: {\n      height\n    }\n  }) : null;\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    borderBottom: `1px solid ${borderColor}`,\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  };\n});\nexport const GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"isDragging\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    isDragging,\n    hasScrollX,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeadersInner', isDragging && 'columnHeaderDropZone', hasScrollX && 'columnHeadersInner--scrollable']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersInnerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'columnHeadersInner',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.columnHeaderDropZone}`]: styles.columnHeaderDropZone\n  }, styles.columnHeadersInner]\n})(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  [`&.${gridClasses.columnHeaderDropZone} .${gridClasses.columnHeaderDraggableContainer}`]: {\n    cursor: 'move'\n  },\n  [`&.${gridClasses['columnHeadersInner--scrollable']} .${gridClasses.columnHeader}:last-child`]: {\n    borderRight: 'none'\n  }\n}));\nexport const GridColumnHeadersInner = /*#__PURE__*/React.forwardRef(function GridColumnHeadersInner(props, ref) {\n  var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n  const {\n    isDragging,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    isDragging,\n    hasScrollX: (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.hasScrollX) != null ? _apiRef$current$getRo : false,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersInnerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"innerRef\", \"className\"];\nimport * as React from 'react';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridScrollArea } from './GridScrollArea';\nimport { GridColumnHeaders } from './columnHeaders/GridColumnHeaders';\nimport { GridColumnHeadersInner } from './columnHeaders/GridColumnHeadersInner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DataGridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnsHeader(props, ref) {\n  const {\n    innerRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isDragging,\n    getRootProps,\n    getInnerProps,\n    getColumns\n  } = useGridColumnHeaders({\n    innerRef\n  });\n  return /*#__PURE__*/_jsxs(GridColumnHeaders, _extends({\n    ref: ref\n  }, getRootProps(other), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: getColumns()\n    })), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    })]\n  }));\n});","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { GridBody, GridErrorHandler, GridFooterPlaceholder, GridHeaderPlaceholder, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps, MAX_PAGE_SIZE } from './useDataGridProps';\nimport { DataGridVirtualScroller } from '../components/DataGridVirtualScroller';\nimport { DataGridColumnHeaders } from '../components/DataGridColumnHeaders';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const apiRef = useDataGridComponent(props);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    apiRef: apiRef,\n    props: props,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref,\n      children: /*#__PURE__*/_jsxs(GridErrorHandler, {\n        children: [/*#__PURE__*/_jsx(GridHeaderPlaceholder, {}), /*#__PURE__*/_jsx(GridBody, {\n          ColumnHeadersComponent: DataGridColumnHeaders,\n          VirtualScrollerComponent: DataGridVirtualScroller\n        }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n      })\n    })\n  });\n});\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The label of the grid.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * The id of the element containing a label for the grid.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the grid height is dynamic and follow the number of rows in the grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n\n  /**\n   * If `true`, the grid get a first column with a checkbox that allows to select rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Number of extra columns to be rendered before/after the visible slice.\n   * @default 3\n   */\n  columnBuffer: PropTypes.number,\n\n  /**\n   * Set of columns of type [[GridColumns]].\n   */\n  columns: chainPropTypes(PropTypes.array.isRequired, props => {\n    // @ts-ignore because otherwise `build:api` doesn't work\n    if (props.columns && props.columns.some(column => column.resizable)) {\n      return new Error([`MUI: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to the DataGridPro component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  columnThreshold: PropTypes.number,\n\n  /**\n   * Extend native column types with your new column types.\n   */\n  columnTypes: PropTypes.object,\n\n  /**\n   * Set the column visibility model of the grid.\n   * If defined, the grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n\n  /**\n   * Overrideable components.\n   */\n  components: PropTypes.object,\n\n  /**\n   * Overrideable components props dynamically passed to the component at rendering.\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Set the density of the grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n\n  /**\n   * If `true`, rows will not be extended to fill the full width of the grid container.\n   * @default false\n   */\n  disableExtendRowFullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableSelectionOnClick: PropTypes.bool,\n\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n\n  /**\n   * Set the edit rows model of the grid.\n   */\n  editRowsModel: PropTypes.object,\n\n  /**\n   * An error that will turn the grid into its error state and display the error component.\n   */\n  error: PropTypes.any,\n\n  /**\n   * Features under development.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    newEditingApi: PropTypes.bool,\n    preventCommitWhileValidating: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Set the filter model of the grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      columnField: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operatorValue: PropTypes.string,\n      value: PropTypes.any\n    })).isRequired,\n    linkOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied.\n   */\n  getRowHeight: PropTypes.func,\n\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n\n  /**\n   * Set the height in pixel of the column headers in the grid.\n   * @default 56\n   */\n  headerHeight: PropTypes.number,\n\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Set the locale text of the grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/grid/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"debug\"\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the cell changes are committed.\n   * @param {GridCellEditCommitParams} params With all properties from [[GridCellEditCommitParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when a cell loses focus.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellFocusOut: PropTypes.func,\n\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containig which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n\n  /**\n   * Callback fired when a column visibility changes.\n   * Only works when no `columnVisibilityModel` is provided and if we change the visibility of a single column at a time.\n   * @param {GridColumnVisibilityChangeParams} params With all properties from [[GridColumnVisibilityChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated Use `onColumnVisibilityModelChange` instead.\n   */\n  onColumnVisibilityChange: PropTypes.func,\n\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the edit cell value changes.\n   * @param {GridEditCellPropsParams} params With all properties from [[GridEditCellPropsParams]].\n   * @param {MuiEvent<React.SyntheticEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated use `preProcessEditCellProps` from the [`GridColDef`](/x/api/data-grid/grid-col-def/)\n   */\n  onEditCellPropsChange: PropTypes.func,\n\n  /**\n   * Callback fired when the `editRowsModel` changes.\n   * @param {GridEditRowsModel} editRowsModel With all properties from [[GridEditRowsModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onEditRowsModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when an exception is thrown in the grid.\n   * @param {any} args The arguments passed to the `showError` call.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the current page has changed.\n   * @param {number} page Index of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * Callback fired when the page size has changed.\n   * @param {number} pageSize Size of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageSizeChange: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n\n  /**\n   * Callback fired when the grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the row changes are committed.\n   * @param {GridRowId} id The row id.\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containig which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridSelectionModel} selectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSelectionModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the state of the grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @internal\n   */\n  onStateChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   * @default 0\n   */\n  page: PropTypes.number,\n\n  /**\n   * Set the number of rows in one page.\n   * If some of the rows have children (for instance in the tree data), this number represents the amount of top level rows wanted on each page.\n   * @default 100\n   */\n  pageSize: chainPropTypes(PropTypes.number, props => {\n    if (props.pageSize && props.pageSize > MAX_PAGE_SIZE) {\n      return new Error([`MUI: \\`<DataGrid pageSize={${props.pageSize}} />\\` is not a valid prop.`, `Only page size below ${MAX_PAGE_SIZE} is available in the MIT version.`, '', 'You need to upgrade to the DataGridPro component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n  pagination: props => {\n    if (props.pagination === false) {\n      return new Error(['MUI: `<DataGrid pagination={false} />` is not a valid prop.', 'Infinite scrolling is not available in the MIT version.', '', 'You need to upgrade to the DataGridPro component to disable the pagination.'].join('\\n'));\n    }\n\n    return null;\n  },\n\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * Only applied if `props.experimentalFeatures.newEditingApi: true`.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n\n  /**\n   * Number of extra rows to be rendered before/after the visible slice.\n   * @default 3\n   */\n  rowBuffer: PropTypes.number,\n\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Set the height in pixel of a row in the grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   */\n  rows: PropTypes.array.isRequired,\n\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  rowThreshold: PropTypes.number,\n\n  /**\n   * Override the height/width of the grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n\n  /**\n   * Set the selection model of the grid.\n   */\n  selectionModel: chainPropTypes(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]), props => {\n    if (!props.checkboxSelection && Array.isArray(props.selectionModel) && props.selectionModel.length > 1) {\n      return new Error([`MUI: \\`<DataGrid selectionModel={${JSON.stringify(props.selectionModel)}} />\\` is not a valid prop.`, 'selectionModel can only be of 1 item in DataGrid.', '', 'You need to upgrade to the DataGridPro component to unlock multiple selection.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the right border of the cells are displayed.\n   * @default false\n   */\n  showCellRightBorder: PropTypes.bool,\n\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnRightBorder: PropTypes.bool,\n\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n\n  /**\n   * Set the sort model of the grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n\n  return function validate(...args) {\n    return propType1(...args) || propType2(...args);\n  };\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","export function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object';\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\n\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n/**\n * Based on `fast-deep-equal`\n *\n *  MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (Array.isArray(a)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entriesA = Array.from(a.entries());\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entries = Array.from(a.entries());\n\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n\n    const keys = Object.keys(a);\n    const length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n\n\n  return a !== a && b !== b;\n}"],"sourceRoot":""}